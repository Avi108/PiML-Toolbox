Search.setIndex({"docnames": ["auto_examples/data/index", "auto_examples/data/plot_0_feature_select", "auto_examples/data/sg_execution_times", "auto_examples/diagnostics/index", "auto_examples/diagnostics/plot_1_accuracy", "auto_examples/diagnostics/plot_1_fairness", "auto_examples/diagnostics/plot_1_resilience", "auto_examples/diagnostics/plot_2_robustness", "auto_examples/diagnostics/plot_3_robustness", "auto_examples/diagnostics/sg_execution_times", "auto_examples/explain/index", "auto_examples/explain/plot_0_ale", "auto_examples/explain/plot_1_ale", "auto_examples/explain/plot_2_pdp", "auto_examples/explain/plot_3_pdp", "auto_examples/explain/plot_4_pfi", "auto_examples/explain/plot_5_shap", "auto_examples/explain/plot_6_LIME", "auto_examples/explain/plot_7_ICE", "auto_examples/explain/sg_execution_times", "auto_examples/index", "auto_examples/models/index", "auto_examples/models/plot_0_glm_cls", "auto_examples/models/plot_0_glm_reg", "auto_examples/models/plot_1_gam_cls", "auto_examples/models/plot_1_gam_reg", "auto_examples/models/plot_2_dt_cls", "auto_examples/models/plot_2_dt_reg", "auto_examples/models/plot_3_figs_cls", "auto_examples/models/plot_3_figs_reg", "auto_examples/models/plot_4_ebm_cls", "auto_examples/models/plot_4_ebm_reg", "auto_examples/models/plot_7_reludnn_cls", "auto_examples/models/plot_7_reludnn_reg", "auto_examples/models/sg_execution_times", "contents", "faq", "guides/cases", "guides/cases/Example_BikeSharing", "guides/cases/Example_CaliforniaHousing", "guides/cases/Example_Fairness_SimuStudy1", "guides/cases/Example_Fairness_SimuStudy2", "guides/cases/Example_TaiwanCredit", "guides/comparison", "guides/conclusion", "guides/data", "guides/data/feature_select", "guides/explain/ALE", "guides/explain/ICE", "guides/explain/PDP", "guides/explain/PFI", "guides/explainability", "guides/extmodels", "guides/introduction", "guides/models", "guides/testing", "install", "modules/classes", "modules/generated/piml.Experiment", "modules/generated/piml.models.ExplainableBoostingClassifier", "modules/generated/piml.models.ExplainableBoostingRegressor", "modules/generated/piml.models.FIGSClassifier", "modules/generated/piml.models.FIGSRegressor", "modules/generated/piml.models.GAMClassifier", "modules/generated/piml.models.GAMINetClassifier", "modules/generated/piml.models.GAMINetRegressor", "modules/generated/piml.models.GAMRegressor", "modules/generated/piml.models.GLMClassifier", "modules/generated/piml.models.GLMRegressor", "modules/generated/piml.models.PiDecisionTreeClassifier", "modules/generated/piml.models.PiDecisionTreeRegressor", "modules/generated/piml.models.PiXGBClassifier", "modules/generated/piml.models.PiXGBRegressor", "modules/generated/piml.models.ReluDNNClassifier", "modules/generated/piml.models.ReluDNNRegressor", "preface", "tune_toc", "user_guide"], "filenames": ["auto_examples\\data\\index.rst", "auto_examples\\data\\plot_0_feature_select.rst", "auto_examples\\data\\sg_execution_times.rst", "auto_examples\\diagnostics\\index.rst", "auto_examples\\diagnostics\\plot_1_accuracy.rst", "auto_examples\\diagnostics\\plot_1_fairness.rst", "auto_examples\\diagnostics\\plot_1_resilience.rst", "auto_examples\\diagnostics\\plot_2_robustness.rst", "auto_examples\\diagnostics\\plot_3_robustness.rst", "auto_examples\\diagnostics\\sg_execution_times.rst", "auto_examples\\explain\\index.rst", "auto_examples\\explain\\plot_0_ale.rst", "auto_examples\\explain\\plot_1_ale.rst", "auto_examples\\explain\\plot_2_pdp.rst", "auto_examples\\explain\\plot_3_pdp.rst", "auto_examples\\explain\\plot_4_pfi.rst", "auto_examples\\explain\\plot_5_shap.rst", "auto_examples\\explain\\plot_6_LIME.rst", "auto_examples\\explain\\plot_7_ICE.rst", "auto_examples\\explain\\sg_execution_times.rst", "auto_examples\\index.rst", "auto_examples\\models\\index.rst", "auto_examples\\models\\plot_0_glm_cls.rst", "auto_examples\\models\\plot_0_glm_reg.rst", "auto_examples\\models\\plot_1_gam_cls.rst", "auto_examples\\models\\plot_1_gam_reg.rst", "auto_examples\\models\\plot_2_dt_cls.rst", "auto_examples\\models\\plot_2_dt_reg.rst", "auto_examples\\models\\plot_3_figs_cls.rst", "auto_examples\\models\\plot_3_figs_reg.rst", "auto_examples\\models\\plot_4_ebm_cls.rst", "auto_examples\\models\\plot_4_ebm_reg.rst", "auto_examples\\models\\plot_7_reludnn_cls.rst", "auto_examples\\models\\plot_7_reludnn_reg.rst", "auto_examples\\models\\sg_execution_times.rst", "contents.rst", "faq.rst", "guides\\cases.rst", "guides\\cases\\Example_BikeSharing.ipynb", "guides\\cases\\Example_CaliforniaHousing.ipynb", "guides\\cases\\Example_Fairness_SimuStudy1.ipynb", "guides\\cases\\Example_Fairness_SimuStudy2.ipynb", "guides\\cases\\Example_TaiwanCredit.ipynb", "guides\\comparison.rst", "guides\\conclusion.rst", "guides\\data.rst", "guides\\data\\feature_select.rst", "guides\\explain\\ALE.rst", "guides\\explain\\ICE.rst", "guides\\explain\\PDP.rst", "guides\\explain\\PFI.rst", "guides\\explainability.rst", "guides\\extmodels.rst", "guides\\introduction.rst", "guides\\models.rst", "guides\\testing.rst", "install.rst", "modules\\classes.rst", "modules\\generated\\piml.Experiment.rst", "modules\\generated\\piml.models.ExplainableBoostingClassifier.rst", "modules\\generated\\piml.models.ExplainableBoostingRegressor.rst", "modules\\generated\\piml.models.FIGSClassifier.rst", "modules\\generated\\piml.models.FIGSRegressor.rst", "modules\\generated\\piml.models.GAMClassifier.rst", "modules\\generated\\piml.models.GAMINetClassifier.rst", "modules\\generated\\piml.models.GAMINetRegressor.rst", "modules\\generated\\piml.models.GAMRegressor.rst", "modules\\generated\\piml.models.GLMClassifier.rst", "modules\\generated\\piml.models.GLMRegressor.rst", "modules\\generated\\piml.models.PiDecisionTreeClassifier.rst", "modules\\generated\\piml.models.PiDecisionTreeRegressor.rst", "modules\\generated\\piml.models.PiXGBClassifier.rst", "modules\\generated\\piml.models.PiXGBRegressor.rst", "modules\\generated\\piml.models.ReluDNNClassifier.rst", "modules\\generated\\piml.models.ReluDNNRegressor.rst", "preface.rst", "tune_toc.rst", "user_guide.rst"], "titles": ["Data Pipeline", "Feature Selection", "Computation times", "Outcome Testing", "Accuracy:  Regression", "Fairness - Performance: XGB", "Resilience - Performance: XGB", "Robustness:  Regression", "Robustness: Classification", "Computation times", "Post hoc Explainability", "ALE:  Regression", "ALE:  Classification", "PDP:  Regression", "PDP:  Classification", "PFI:  Classification", "SHAP:  Classification", "LIME:  Classification", "ICE:  Classification", "Computation times", "Examples", "Interpretable Models", "GLM - Logistic Regression Model", "GLM - Linear Regression Model", "Generalized Additive Model", "Generalized Additive Model", "Decision Tree: Classification Tree Model", "Decision Tree: Classification Tree Model", "FIGS: Regression", "FIGS: Regression", "Generalized Additive Model", "Generalized Additive Model", "ReLU DNN: Classification", "ReLU DNN: Regression", "Computation times", "Table Of Contents", "Frequently Asked Questions", "<span class=\"section-number\">8. </span>Case Studies", "<span class=\"section-number\">8.1. </span>BikeSharing Data", "<span class=\"section-number\">8.2. </span>CaliforniaHousing Data", "<span class=\"section-number\">8.4. </span>Fairness Simulation Study 1", "<span class=\"section-number\">8.5. </span>Fairness Simulation Study 2", "<span class=\"section-number\">8.3. </span>TaiwanCredit Data", "<span class=\"section-number\">7. </span>Model Comparison", "<span class=\"section-number\">9. </span>Conclusion", "<span class=\"section-number\">2. </span>Data Pipeline", "<span class=\"section-number\">2.1. </span>Feature Selection", "<span class=\"section-number\">4.1.4. </span>ALE (Accumulated Local Effects)", "<span class=\"section-number\">4.1.3. </span>ICE (Individual Conditional Expectation)", "<span class=\"section-number\">4.1.2. </span>PDP (Partial Dependence Plot)", "<span class=\"section-number\">4.1.1. </span>PFI (Permutation Feature Importance)", "<span class=\"section-number\">4. </span>Post-hoc Explainability", "<span class=\"section-number\">3. </span>Black-box Models", "<span class=\"section-number\">1. </span>Introduction", "<span class=\"section-number\">5. </span>Interpretable Models", "<span class=\"section-number\">6. </span>Outcome Testing", "Installation", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml</span></code>.Experiment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.ExplainableBoostingClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.ExplainableBoostingRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.FIGSClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.FIGSRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.GAMClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.GAMINetClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.GAMINetRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.GAMRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.GLMClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.GLMRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.PiDecisionTreeClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.PiDecisionTreeRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.PiXGBClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.PiXGBRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.ReluDNNClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.ReluDNNRegressor", "Welcome to scikit-learn", "&lt;no title&gt;", "User guide: contents"], "terms": {"featur": [0, 2, 5, 7, 8, 15, 20, 24, 25, 32, 33, 38, 39, 40, 41, 42, 45, 47, 48, 49, 51, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74, 77], "select": [0, 2, 5, 20, 38, 39, 40, 41, 45, 47, 58, 64, 65, 77], "click": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42], "here": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 42, 46, 47, 48, 50, 58], "download": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "full": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 45, 57, 58], "exampl": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 45, 51], "code": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 41, 42, 46, 48, 49, 51, 53, 58], "run": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 46, 58], "thi": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "your": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 50], "browser": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "via": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 46, 47, 58], "binder": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "four": [1, 46], "built": [1, 46, 47, 49], "strategi": [1, 46, 58, 61, 62], "us": [1, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 52, 53, 57, 63], "bikeshar": [1, 4, 6, 7, 11, 13, 23, 31, 33, 37, 46, 47, 48, 49, 50, 58, 77], "dataset": [1, 5, 38, 39, 40, 41, 42, 46, 48, 49, 50, 52, 58, 64, 65, 73, 74], "train": [1, 4, 5, 6, 7, 8, 22, 23, 24, 25, 30, 31, 32, 33, 36, 37, 46, 47, 49, 50, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74, 77], "model": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 28, 29, 32, 33, 34, 35, 36, 37, 46, 47, 48, 49, 50, 53, 58, 77], "from": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 52, 58, 59, 60, 62, 64, 65, 69, 70, 74], "piml": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 52, 53, 56, 57], "import": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 45, 47, 48, 49, 51, 52, 58, 61, 62, 63, 64, 65, 66, 69, 70], "experi": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 52], "exp": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 52], "data_load": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 47, 48, 49, 50, 52, 58], "data": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 46, 47, 48, 49, 50, 58, 59, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74, 77], "data_prepar": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 52, 58], "target": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 47, 48, 49, 50, 52, 58, 61, 62, 64, 65, 69, 70, 73, 74], "cnt": [1, 4, 6, 7, 11, 13, 23, 31, 33, 38, 47, 48, 49, 50], "task_typ": [1, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 47, 48, 49, 50, 52, 58], "regress": [1, 3, 6, 9, 10, 19, 20, 21, 24, 25, 27, 30, 31, 34, 38, 39, 47, 48, 49, 50, 52, 53, 55, 58, 61, 62, 65, 67, 68, 69, 70, 74], "season": [1, 4, 6, 7, 11, 13, 23, 31, 33, 38, 46, 47, 48, 49], "yr": [1, 4, 6, 7, 11, 13, 23, 31, 33, 46, 50], "mnth": [1, 4, 6, 7, 11, 13, 23, 31, 33, 46], "hr": [1, 4, 6, 7, 11, 13, 23, 31, 33, 46, 47, 48, 49, 50], "holidai": [1, 4, 6, 7, 11, 13, 23, 31, 33, 49], "weekdai": [1, 4, 6, 7, 11, 13, 23, 31, 33, 46, 47], "workingdai": [1, 4, 6, 7, 11, 13, 23, 31, 33, 38, 46, 47, 48, 49, 50], "weathersit": [1, 4, 6, 7, 11, 13, 23, 31, 33, 46, 47, 49], "0": [1, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 39, 41, 42, 46, 47, 48, 49, 50, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74], "1": [1, 2, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 41, 42, 46, 48, 50, 58, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74, 77], "6": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 47, 48, 49, 50, 58, 63, 66], "2": [1, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 42, 46, 48, 50, 52, 53, 58, 59, 60, 61, 62, 64, 65, 69, 70, 71, 72, 73, 74, 77], "3": [1, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 42, 47, 48, 49, 50, 58, 59, 60, 63, 64, 65, 66], "4": [1, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 47, 48, 49, 64, 65], "17374": [1, 4, 6, 7, 11, 13, 23, 31, 33], "12": [1, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 28, 30, 31, 32, 33, 41, 42], "19": [1, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 27, 28, 30, 31, 32, 33, 34], "17375": [1, 4, 6, 7, 11, 13, 23, 31, 33], "20": [1, 4, 6, 7, 8, 11, 13, 15, 16, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 39, 41, 46, 58, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "17376": [1, 4, 6, 7, 11, 13, 23, 31, 33], "21": [1, 4, 6, 7, 11, 13, 16, 23, 25, 29, 31, 33, 41], "17377": [1, 4, 6, 7, 11, 13, 23, 31, 33], "22": [1, 4, 6, 7, 11, 13, 16, 17, 19, 23, 25, 26, 29, 30, 31, 33, 34, 41], "17378": [1, 4, 6, 7, 11, 13, 23, 31, 33], "23": [1, 4, 6, 7, 11, 13, 16, 23, 25, 27, 29, 31, 33, 34, 47, 60, 62, 65, 70, 74], "temp": [1, 4, 6, 7, 11, 13, 23, 31, 33, 46, 50], "atemp": [1, 4, 6, 7, 11, 13, 23, 31, 33, 38, 47, 48, 49, 50], "hum": [1, 4, 6, 7, 11, 13, 23, 31, 33, 46], "windspe": [1, 4, 6, 7, 11, 13, 23, 31, 33], "24": [1, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 25, 28, 29, 30, 31, 32, 33, 34, 41, 48], "2879": [1, 4, 6, 7, 11, 13, 23, 31, 33], "81": [1, 4, 6, 7, 11, 13, 23, 31, 33], "0000": [1, 4, 6, 7, 11, 13, 23, 31, 32, 33], "16": [1, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 25, 28, 29, 30, 31, 32, 33, 41], "2727": [1, 4, 6, 7, 11, 13, 23, 31, 33], "80": [1, 4, 6, 7, 11, 13, 16, 23, 25, 27, 31, 33], "40": [1, 4, 5, 6, 7, 11, 12, 13, 14, 16, 17, 18, 19, 23, 31, 32, 33, 34, 41, 48, 49, 50, 73, 74], "32": [1, 4, 5, 6, 7, 11, 13, 16, 23, 25, 29, 31, 33, 50, 59, 60], "75": [1, 4, 6, 7, 11, 13, 23, 31, 33], "13": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 28, 30, 31, 32, 33, 41, 42, 49], "26": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 28, 30, 31, 32, 33], "2576": [1, 4, 6, 7, 11, 13, 23, 31, 33], "60": [1, 4, 6, 7, 8, 11, 13, 16, 23, 25, 27, 31, 33, 41], "1642": [1, 4, 6, 7, 11, 13, 23, 31, 33], "119": [1, 4, 6, 7, 11, 13, 23, 31, 33], "89": [1, 4, 6, 7, 11, 13, 23, 31, 33, 41], "90": [1, 4, 6, 7, 11, 13, 16, 23, 31, 33, 41], "56": [1, 4, 5, 6, 7, 11, 13, 23, 31, 33, 34], "1343": [1, 4, 6, 7, 11, 13, 23, 31, 33], "61": [1, 4, 6, 7, 11, 13, 23, 31, 33], "65": [1, 4, 6, 7, 11, 13, 23, 31, 33, 48], "49": [1, 4, 6, 7, 11, 13, 23, 25, 28, 29, 31, 33], "17379": [1, 4, 6, 7, 11, 13, 23, 31, 33], "row": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 48, 58], "x": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 46, 47, 48, 49, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "column": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 58, 63, 66], "exclud": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 40, 41, 42, 58, 64, 65], "variabl": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 41, 42, 46, 47, 49, 50, 58], "sampl": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 41, 46, 47, 49, 50, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "weight": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "none": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74], "task": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 47, 53, 55, 58], "type": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 58, 59, 63, 64, 65, 66], "split": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 53, 55, 58, 61, 62, 69, 70], "method": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 41, 43, 46, 47, 49, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 73, 74], "random": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 45, 50, 58, 61, 62, 64, 65, 73, 74], "5": [1, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 46, 48, 49, 50, 58, 64, 65, 69, 70, 73, 74], "test": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 45, 50, 53, 58, 59, 60, 61, 62, 64, 65, 69, 70, 73, 74, 77], "ratio": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 58, 64, 65, 73, 74], "state": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 58], "pearson": [1, 45, 58], "correl": [1, 38, 39, 45, 47, 49, 50, 58], "feature_select": [1, 38, 39, 46, 58], "cor": [1, 46, 58], "threshold": [1, 5, 41, 46, 58, 64, 65, 73, 74], "distanc": [1, 45, 58, 69, 70], "dcor": [1, 46, 58], "permut": [1, 15, 39, 42, 46, 49, 51, 58], "pfi": [1, 10, 19, 20, 38, 46, 49, 51, 53, 58, 64], "95": [1, 46], "condit": [1, 38, 39, 45, 47, 49, 51, 58], "independ": [1, 38, 39, 45, 49, 58], "rcit": [1, 38, 39, 58], "001": [1, 4, 7, 12, 13, 14, 16, 17, 18, 32, 33, 46, 48, 49, 50, 64, 65, 73, 74], "n_forward_phas": [1, 46, 58], "kernel_s": [1, 46, 58], "100": [1, 4, 5, 6, 7, 16, 25, 27, 28, 29, 46, 52, 58, 63, 64, 65, 66], "where": [1, 46, 47, 49, 60, 62, 65, 69, 70, 74], "initi": [1, 6, 25, 27, 46, 52, 58, 64, 65, 73, 74], "markov": [1, 46], "boundari": [1, 46, 58], "i": [1, 7, 8, 36, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "non": [1, 41, 46, 49, 63, 66, 67, 68, 69, 70], "empti": [1, 46, 58, 64, 65], "preset": [1, 46, 58], "total": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 60, 62, 65, 69, 70, 74], "time": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 46, 47, 50, 58, 64, 65], "script": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "minut": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "33": [1, 2, 16, 33], "638": [1, 2], "second": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 47, 49, 50, 64, 65], "estim": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 49, 51, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "memori": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 64, 65, 73, 74], "usag": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 46, 51], "101": [1, 2], "mb": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "python": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 48, 53, 56], "sourc": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 46], "plot_0_feature_select": [1, 2], "py": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 70], "jupyt": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "notebook": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 42], "ipynb": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42], "galleri": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "gener": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 26, 27, 28, 29, 32, 33, 34, 46, 47, 48, 53, 58, 60, 62, 63, 64, 65, 66, 70, 73, 74], "sphinx": [1, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "00": [2, 5, 9, 11, 13, 16, 19, 31, 33, 34, 41, 49], "execut": [2, 9, 19, 34, 46], "auto_examples_data": 2, "file": [2, 9, 19, 34, 52, 58, 64, 65], "resili": [3, 9, 20, 53, 55, 58], "perform": [3, 4, 7, 8, 9, 20, 41, 50, 53, 55, 58, 64, 65, 71, 73, 74], "xgb": [3, 9, 20, 41, 58, 71], "accuraci": [3, 9, 20, 46, 50, 53, 55, 58, 59, 61, 62, 64, 69, 73, 74], "robust": [3, 9, 20, 53, 55, 58, 61, 62, 64, 68, 73, 74], "classif": [3, 5, 6, 9, 10, 19, 20, 21, 22, 24, 25, 28, 30, 34, 40, 41, 42, 47, 48, 49, 50, 53, 55, 58, 59, 61, 64, 69, 70, 73], "fair": [3, 9, 20, 37, 53, 58, 71, 77], "evalu": [4, 7, 8, 46, 50, 53, 55, 58], "figsregressor": [4, 7, 29, 58], "reludnnregressor": [4, 7, 13, 33, 48, 49, 50, 58], "prepar": [4, 7, 37, 52, 58], "instanti": [4, 7, 8], "train_x": [4, 5, 7, 41, 52, 58], "train_i": [4, 5, 7, 41, 52, 58], "_": [4, 5, 7, 41, 46, 47, 48, 49, 50], "get_data": [4, 5, 7, 41, 58], "true": [4, 5, 7, 11, 12, 13, 14, 15, 17, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 41, 47, 48, 49, 50, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "test_x": [4, 7, 41, 52, 58], "test_i": [4, 7, 41, 52, 58], "feature_nam": [4, 5, 7, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72], "get_feature_nam": [4, 5, 7, 58], "target_nam": [4, 7, 58], "get_target_nam": [4, 7, 58], "model_a": [4, 7], "max_it": [4, 7, 8, 28, 29, 61, 62, 63, 66], "model_b": [4, 7], "hidden_layer_s": [4, 7, 8, 12, 13, 14, 16, 17, 18, 32, 33, 48, 49, 50, 73, 74], "30": [4, 7, 16, 33, 41, 42, 47, 48, 49, 50], "batch_siz": [4, 7, 8, 12, 13, 14, 16, 17, 18, 48, 49, 50, 64, 65, 73, 74], "1000": [4, 7, 64, 65, 73, 74], "learning_r": [4, 7, 8, 12, 13, 14, 16, 17, 18, 32, 33, 48, 49, 50, 59, 60, 61, 62, 64, 65, 73, 74], "model_train": [4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 47, 48, 49, 50, 52, 58], "name": [4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 41, 46, 47, 48, 49, 50, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "fig": [4, 7, 8, 20, 21, 34, 53, 58, 61, 62, 63, 66], "reludnn": [4, 7, 32, 33, 73, 74], "html": [4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 46], "valu": [4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 46, 47, 48, 49, 51, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "p": [4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 46, 49, 58], "class": [4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 41, 47, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "notif": [4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "info": [4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "regist": [4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 38, 40, 41, 42, 58, 77], "done": [4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 47], "base": [4, 40, 46, 49, 50, 58, 61, 62, 64, 65, 69, 70], "mse": [4, 23, 33, 53, 55, 58], "model_diagnos": [4, 6, 7, 8, 22, 23, 38, 39, 42, 58], "show": [4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 41, 46, 47, 48, 49, 50, 58, 63, 64, 65, 66], "accuracy_t": [4, 7, 8, 22, 23, 58], "mae": [4, 23, 53, 55, 58], "r2": [4, 23, 58], "0022": 4, "0316": 4, "9356": 4, "0026": 4, "0337": 4, "9245": 4, "gap": [4, 22, 23, 53, 55, 58, 69, 70], "0004": [4, 22], "0021": 4, "0111": 4, "compar": [4, 7, 43, 46, 47, 49, 58], "model_compar": [4, 7, 8, 38, 39, 42, 58], "accuracy_plot": [4, 7, 8, 58], "metric": [4, 5, 40, 41, 53, 55, 58, 59, 61, 64, 69, 73], "figsiz": [4, 7, 8, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 48, 49, 50, 58, 63, 66, 69, 70], "r": [4, 32, 46, 49, 58, 60, 62, 64, 65, 70, 74], "squar": [4, 46, 58, 60, 62, 65, 68, 70, 74], "15": [4, 5, 6, 8, 9, 12, 14, 15, 16, 17, 18, 22, 24, 25, 27, 28, 30, 32, 33, 34, 41, 42, 49, 59, 60], "007": [4, 9], "plot_1_accuraci": [4, 9], "diagnost": [5, 6, 37, 43, 58], "pixgbclassifi": [5, 58], "panda": [5, 41], "pd": [5, 41, 49, 58], "read_csv": [5, 41], "http": [5, 41, 46, 58, 61, 62], "github": [5, 41, 46, 58, 61, 62], "com": [5, 41, 46, 58, 61, 62], "selfexplainml": [5, 41], "toolbox": [5, 41, 53], "blob": [5, 41], "main": [5, 38, 39, 41, 42, 46, 47, 59, 60, 63, 64, 65, 66], "creditsimubalanc": 5, "csv": [5, 41], "raw": [5, 41, 57, 58, 61, 64, 65, 73, 74], "data_summari": [5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 28, 30, 31, 32, 33, 38, 39, 40, 41, 42, 47, 48, 49, 58], "feature_exclud": [5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 28, 30, 31, 32, 33, 47, 48, 49, 58], "race": [5, 40, 41], "gender": [5, 41], "statu": [5, 41, 73, 74], "xgb2_mono": 5, "max_depth": [5, 6, 7, 8, 26, 27, 28, 29, 41, 52, 61, 62, 69, 70, 71, 72], "n_estim": [5, 6, 52], "mono_increasing_list": [5, 64, 65, 71, 72], "mortgag": [5, 41, 58], "balanc": [5, 41, 58], "mono_decreasing_list": [5, 64, 65, 71, 72], "amount": [5, 41], "past": [5, 41], "due": [5, 41], "util": [5, 41], "delinqu": [5, 41], "credit": [5, 41, 42, 47, 48, 50, 58], "inquiri": [5, 41], "open": [5, 41], "trade": [5, 41, 58], "fit": [5, 32, 33, 41, 46, 48, 49, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74, 77], "xgb2_wrapper": 5, "make_pipelin": [5, 41, 52, 58], "xgb2_monoton": 5, "135775": 5, "74": 5, "646": 5, "11": [5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 22, 27, 28, 30, 31, 32, 33, 38, 39, 41, 42], "48": [5, 15, 19, 25, 29, 30, 34], "94": 5, "168324": 5, "14": [5, 8, 12, 13, 14, 15, 16, 17, 18, 19, 22, 27, 28, 30, 32, 33, 34, 41, 42, 47], "1968": 5, "77": 5, "583": 5, "346862": 5, "01": [5, 6, 7, 8, 9, 15, 19, 25, 27, 34, 59, 60, 64, 65], "744": 5, "144067": 5, "2235": 5, "02": [5, 11, 13, 19, 31, 33], "183339": 5, "91": 5, "614": 5, "66": 5, "99995": 5, "232793": 5, "63": 5, "1766": 5, "99996": 5, "277526": 5, "51": 5, "1418": 5, "25": [5, 7, 9, 16, 25, 29, 33, 41], "99997": 5, "229287": 5, "59": 5, "5349": 5, "99998": 5, "139738": 5, "697": 5, "78": 5, "99999": 5, "496458": 5, "958": [5, 19], "06": [5, 9, 16, 19], "190": 5, "239912": 5, "204097": 5, "483670": 5, "948067": 5, "253230": 5, "350013": 5, "849044": 5, "998986": 5, "292058": 5, "193720": 5, "100000": 5, "10": [5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 22, 26, 27, 28, 30, 31, 32, 33, 38, 39, 40, 41, 42, 46, 48, 49, 58, 59, 60, 63, 64, 65, 66, 69, 70], "n_miss": [5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 28, 30, 31, 32, 33], "mean": [5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 28, 30, 31, 32, 33, 46, 47, 58, 59, 60, 61, 62, 64, 65, 69, 70, 73, 74], "std": [5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 28, 30, 31, 32, 33], "min": [5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 28, 30, 31, 32, 33, 58, 64, 65], "251941": 5, "123086": 5, "101513": 5, "222305": 5, "104698": 5, "290000": 5, "1203": 5, "357267": 5, "1271": 5, "749786": 5, "259": 5, "315782": 5, "620": 5, "127602": 5, "000000": [5, 8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "124930": 5, "656276": 5, "382570": 5, "684613": 5, "192530": 5, "463232": 5, "471975": 5, "285863": 5, "000992": 5, "q1": [5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 28, 30, 31, 32, 33], "median": [5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 28, 30, 31, 32, 33, 39], "q3": [5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 28, 30, 31, 32, 33], "max": [5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 25, 27, 28, 30, 31, 32, 33, 58, 61, 62, 63, 64, 65, 66, 69, 70], "177352": 5, "330000": 5, "229747": 5, "685000": 5, "300043": 5, "375000": 5, "822208e": 5, "372": 5, "540000": 5, "789": 5, "040000": 5, "1556": 5, "777500": 5, "683931e": 5, "04": 5, "236": 5, "692500": 5, "264077e": 5, "000000e": 5, "100000e": 5, "7": [5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 25, 28, 29, 30, 31, 32, 33, 38, 39, 41, 46, 47, 52], "226624": 5, "414025": 5, "726113": 5, "9": [5, 8, 9, 12, 14, 15, 16, 17, 18, 22, 25, 27, 28, 29, 30, 32, 33, 38, 39, 41, 42, 47, 49], "999750e": 5, "n_uniqu": [5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 28, 30, 31, 32, 33], "top1": [5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 28, 30, 31, 32, 33], "top2": [5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 28, 30, 31, 32, 33], "top3": [5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 28, 30, 31, 32, 33], "n_other": [5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 28, 30, 31, 32, 33], "52309": 5, "47691": 5, "shape": [5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 28, 30, 31, 32, 33, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "tab": [5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 28, 30, 31, 32, 33, 40, 41], "children": [5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 25, 27, 28, 30, 31, 32, 33], "output": [5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 25, 27, 28, 30, 31, 32, 33, 46, 59, 64, 65], "layout": [5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 25, 27, 28, 30, 31, 32, 33], "height": [5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 25, 27, 28, 30, 31, 32, 33], "350px": [5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 28, 30, 31, 32, 33], "_titl": [5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 28, 30, 31, 32, 33], "numer": [5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 28, 30, 31, 32, 33, 41, 58, 64, 65], "attribut": [5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 28, 30, 31, 32, 33, 41, 42, 61, 62, 64, 65, 69, 70, 73, 74], "categor": [5, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 28, 30, 31, 32, 33, 41, 47, 49, 58, 64, 65], "model_fair": [5, 41, 58], "air": [5, 41, 58], "group_categori": [5, 58], "reference_group": [5, 58], "protected_group": [5, 58], "favorable_threshold": [5, 58], "performance_metr": [5, 58], "acc": [5, 22, 41, 53, 55, 58], "segment": [5, 40, 41, 53, 58], "segmented_featur": [5, 58], "segmented_bin": [5, 58], "bin": [5, 41, 58, 59, 60], "binning_list": [5, 58], "custom": [5, 36, 38, 39, 41, 42, 58], "f1": [5, 22, 53, 55, 58], "remov": [5, 41, 46, 58, 69, 70], "36": [5, 9, 16, 22, 33, 34, 41, 46], "009": [5, 9], "109": [5, 9], "plot_1_fair": [5, 9], "xgboost": [6, 58], "xgbregressor": 6, "ipython": [6, 25, 27], "core": [6, 25, 27, 64, 65], "displai": [6, 25, 27, 58, 63, 66, 69, 70, 73, 74], "object": [6, 25, 27, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "n": [6, 25, 27, 46, 47, 49, 58], "tabl": [6, 25, 27, 40, 41, 46, 58], "ptabl": [6, 25, 27], "stripe": [6, 25, 27], "thead": [6, 25, 27], "pthead": [6, 25, 27], "tbodi": [6, 25, 27], "ptbodi": [6, 25, 27], "tr": [6, 25, 27], "ptr": [6, 25, 27], "td": [6, 25, 27], "ptd": [6, 25, 27], "vbox": [6, 25, 27], "hbox": [6, 25, 27], "width": [6, 25, 27], "100px": [6, 25, 27], "dropdown": [6, 25, 27], "index": [6, 25, 27, 47, 58, 64, 65, 69, 70], "option": [6, 25, 27, 38, 39, 58, 59, 60, 63, 66, 69, 70], "style": [6, 25, 27, 58], "descriptionstyl": [6, 25, 27], "description_width": [6, 25, 27], "boundedfloattext": [6, 25, 27], "auto": [6, 25, 27, 64, 65], "step": [6, 7, 8, 25, 27, 46, 50, 58, 61, 62], "div": [6, 25, 27], "margin": [6, 25, 27, 47, 64, 65], "right": [6, 25, 27, 46, 61, 62], "10px": [6, 25, 27], "seed": [6, 25, 27, 58, 61, 62, 64, 65], "boundedinttext": [6, 25, 27], "justify_cont": [6, 25, 27], "flex": [6, 25, 27], "end": [6, 25, 27, 46, 47, 48, 49, 69, 70], "2px": [6, 25, 27], "button": [6, 25, 27, 40, 41], "button_styl": [6, 25, 27], "danger": [6, 25, 27], "descript": [6, 25, 27, 37, 51, 58], "updat": [6, 25, 27, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "buttonstyl": [6, 25, 27], "_dom_class": [6, 25, 27], "pbtn": [6, 25, 27], "space": [6, 25, 27, 46, 58], "between": [6, 25, 27, 46, 47, 48, 49, 50, 58, 69, 70], "btn": [6, 25, 27], "form": [6, 25, 27, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "divid": [6, 25, 27, 41], "input": [6, 25, 27, 47, 48, 49, 50, 58, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "parent": [6, 25, 27], "resilience_perf": [6, 7, 8, 58], "immu_featur": [6, 58], "143": 6, "29": [6, 14, 16, 19, 33], "plot_1_resili": [6, 9], "numpi": [7, 33, 59, 60, 61, 62, 64, 65, 73, 74], "np": [7, 33, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "glmregressor": [7, 23, 58], "random_st": [7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 28, 29, 30, 32, 47, 48, 49, 50, 52, 58, 59, 60, 61, 62, 64, 65, 69, 70, 73, 74], "perturb_featur": [7, 8, 58], "all": [7, 8, 20, 41, 42, 46, 47, 48, 58, 59, 60, 62, 64, 65, 70, 74], "alpha": [7, 8, 58, 69, 70], "error": [7, 8, 56, 58], "The": [7, 8, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74], "should": [7, 8, 41, 46, 58, 59, 60, 63, 64, 65, 66, 69, 70], "accuracy_residu": [7, 8, 58], "weakspot": [7, 8, 53, 55, 58], "overfit": [7, 8, 46, 53, 55, 58], "reliability_dist": [7, 8, 58], "reliability_margin": [7, 8, 58], "reliability_t": [7, 8, 58], "reliability_perf": [7, 8, 58], "reliability_calibr": [7, 8, 58], "robustness_perf": [7, 8, 58], "robustness_perf_worst": [7, 8, 58], "resilience_dist": [7, 8, 58], "resilience_shift_dens": [7, 8, 58], "resilience_shift_histogram": [7, 8, 58], "under": [7, 8, 46, 53, 55, 58, 61, 62, 69, 70], "worst": [7, 58], "case": [7, 32, 33, 35, 40, 41, 47, 77], "comapr": [7, 8], "perturb": [7, 8, 53, 55, 58], "size": [7, 8, 41, 46, 58, 63, 64, 65, 66, 69, 70, 73, 74], "perturb_s": [7, 8, 58], "differ": [7, 43, 46, 47, 49, 50, 53, 55, 58], "regular": [7, 53, 64, 65, 67, 68, 73, 74], "model_list": 7, "regularization_grid": 7, "logspac": 7, "reg": 7, "glm_": 7, "format": 7, "l1_regularz": [7, 67, 68], "append": 7, "glm_1e": 7, "05": [7, 13, 34, 48, 49, 50, 73, 74], "glm_0": 7, "0001": [7, 59, 60, 64, 65], "we": [7, 8, 32, 33, 41, 46, 47, 48, 49, 50, 64, 65], "mai": [7, 46, 47, 48, 49, 56, 57, 60, 61, 62, 65, 70, 74], "onli": [7, 39, 42, 47, 58, 61, 62, 64, 65], "scenario": [7, 47, 53, 55], "For": [7, 41, 46, 47, 49, 50, 58, 60, 62, 64, 65, 69, 70, 74], "set": [7, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "follow": [7, 8, 46, 47, 48, 49, 50, 53, 56, 58, 69, 70], "145": [7, 9, 32, 34], "44": [7, 9, 33, 48], "plot_2_robust": [7, 9], "moodel": 8, "ipywidget": 8, "figsclassifi": [8, 28, 58], "reludnnclassifi": [8, 12, 14, 16, 17, 18, 32, 58], "gaminetclassifi": [8, 15, 58], "taiwancredit": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32, 37, 47, 48, 49, 50, 58, 77], "limit_b": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "sex": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "educ": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "marriag": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "ag": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32, 40], "feature_typ": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32, 58, 59, 60, 63, 64, 65, 66], "flagdefault": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32, 42, 47, 48, 49, 50], "test_ratio": [8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 26, 28, 29, 30, 32, 47, 48, 49, 50, 52, 58], "200": 8, "splitter": [8, 61, 62, 69, 70], "best": [8, 60, 61, 62, 64, 65, 69, 70, 74], "min_samples_leaf": [8, 59, 60, 61, 62, 69, 70], "min_impurity_decreas": [8, 61, 62, 69, 70], "0002": [8, 32, 33], "l1_reg": [8, 12, 13, 14, 16, 17, 18, 32, 33, 48, 49, 50, 73, 74], "reludnn_a": 8, "003": 8, "reludnn_b": 8, "interact_num": [8, 15, 64, 65], "loss_threshold": [8, 15, 64, 65], "subnet_size_main_effect": [8, 15, 64, 65], "subnet_size_interact": [8, 15, 64, 65], "gaminet": 8, "pay_1": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32, 42], "pay_2": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "pay_3": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "pay_4": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "20000": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "120000": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "90000": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "34": [8, 12, 14, 15, 16, 17, 18, 22, 28, 29, 30, 32, 33, 34], "50000": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "37": [8, 12, 14, 15, 16, 17, 18, 22, 25, 28, 29, 30, 32, 33], "57": [8, 12, 14, 15, 16, 17, 18, 19, 22, 28, 30, 32, 33, 34], "29995": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "220000": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "39": [8, 9, 12, 14, 15, 16, 17, 18, 22, 25, 28, 29, 30, 32, 33, 41], "29996": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "150000": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "43": [8, 12, 14, 15, 16, 17, 18, 22, 25, 28, 29, 30, 32, 33], "29997": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "30000": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "29998": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "80000": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "41": [8, 12, 14, 15, 16, 17, 18, 22, 25, 28, 29, 30, 32, 33], "29999": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "46": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "pay_5": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "pay_6": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "bill_amt1": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32, 42], "bill_amt2": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "bill_amt3": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "bill_amt4": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "bill_amt5": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "592621": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "491782": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "838849": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "428621": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "237041": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "514946": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "538574": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "465977": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "146996": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "132260": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "156307": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "174612": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "672015": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "683353": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "692776": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "452016": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "461799": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "935406": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "753660": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "554319": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "320997": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "282101": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "276345": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "285143": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "318827": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "944507": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "494683": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "226342": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "262214": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "544440": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "953276": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "715251": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "552181": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "525951": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "440752": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "319710": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "313509": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "216430": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "894205": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "882553": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "722428": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "073938": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "680607": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "689362": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "696924": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "562721": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "510933": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "bill_amt6": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "pay_amt1": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32, 42], "pay_amt2": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "pay_amt3": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "pay_amt4": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "pay_amt5": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "pay_amt6": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "513484": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "000434": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "301247": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "191731": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "181558": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "176381": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "699057": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "470528": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "305351": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "079543": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "041787": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "029384": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "281760": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "564453": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "000043": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "954291": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "832509": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "203604": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "929470": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "301052": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "699317": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "484015": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "264345": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "547405": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "954194": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "113943": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "286861": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "342442": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "623353": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "491502": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "689708": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "933998": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "532754": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "071514": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "284882": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "723989": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "256477": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "185089": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "317854": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "255514": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "155640": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "167233": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "931323": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "118367": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "965844": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "106133": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "950876": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "069200": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "911613": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "036867": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "864561": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "035233": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "867919": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "8": [8, 12, 14, 15, 16, 17, 18, 22, 25, 28, 29, 30, 32, 33, 34, 38, 39, 40, 41, 47, 48, 58, 59, 60, 63, 66], "885958": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "547037": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "219010": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "551419": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "349909": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "795420": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "654534": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "843718": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "475053": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "326357": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "739384": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "696840": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "196632": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "426064": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "302969": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "670062": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "733904": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "230452": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "366936": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "279964": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "599323": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "762540": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "910277": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "246499": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "257811": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "507501": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "833062": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "530973": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "099335": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "232285": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "879374": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "411589": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "322426": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "850124": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "423945": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "921166": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "303196": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "728754": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "454766": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "592177": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "17": [8, 12, 14, 15, 16, 17, 18, 22, 25, 27, 28, 29, 30, 32, 33, 38, 41, 47, 49, 50, 69, 70], "639519": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "475124": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "472756": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "18": [8, 11, 12, 13, 14, 15, 16, 17, 18, 22, 25, 28, 29, 30, 31, 32, 33, 47, 48, 69, 70], "619748": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "495708": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "403976": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "576596": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "532231": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "074631": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "826671": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "984308": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "806229": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "992965": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "779349": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "221177": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "736452": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "950164": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "700630": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "967160": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "691958": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "983024": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "699578": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "941289": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "226409": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "653791": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "952328": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "603604": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "793092": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "605574": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "629950": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "602169": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "723182": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "23364": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "6636": [8, 12, 14, 15, 16, 17, 18, 22, 28, 30, 32], "natur": 8, "No": [8, 56, 63, 66, 73, 74], "appi": 8, "accuracy_auc": 8, "overfit_perf": [8, 58], "reliability_bandwidth": [8, 58], "reliability_coverag": [8, 58], "offer": [8, 50], "flexibl": [8, 46], "choos": [8, 38, 39, 40, 41, 42, 61, 62], "plot": [8, 11, 12, 13, 14, 15, 16, 17, 18, 24, 25, 32, 33, 48, 50, 51, 58, 63, 64, 65, 66, 69, 70], "below": [8, 46, 47, 48, 49, 50], "default": [8, 38, 39, 40, 41, 42, 49, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74], "In": [8, 32, 33, 46, 47, 49, 50, 58, 59, 61, 64, 65, 69, 73], "consid": [8, 32, 33, 47, 49, 61, 62], "perturb_method": [8, 58], "quantil": [8, 41, 47, 58, 59, 60], "54": [8, 9], "962": [8, 9], "387": [8, 9, 31, 34], "plot_3_robust": [8, 9], "124": 9, "auto_examples_diagnost": 9, "000": [9, 11, 13, 31, 33, 42, 47, 48, 49, 50], "ic": [10, 19, 20, 49, 51, 58, 73], "lime": [10, 19, 20, 38, 39, 42, 53, 58, 73], "pdp": [10, 19, 20, 38, 39, 42, 47, 48, 51, 53, 58, 73, 74], "al": [10, 19, 20, 38, 39, 42, 49, 51, 53, 58, 65, 73], "shap": [10, 19, 20, 38, 39, 42, 53, 58, 73], "global": [11, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 47, 49, 53, 58, 59, 60, 63, 64, 65, 66, 69, 70, 77], "gaminetregressor": [11, 47, 58], "regressor_model": [11, 13], "537775": [11, 13, 31, 33], "438776": [11, 13, 31, 33], "546752": [11, 13, 31, 33], "914405": [11, 13, 31, 33], "003683": [11, 13, 31, 33], "005771": [11, 13, 31, 33], "496987": [11, 13, 31, 33], "192556": [11, 13, 31, 33], "3400": [11, 13, 31, 33], "500": [11, 12, 13, 14, 16, 17, 18, 31, 33, 48, 49, 50, 58, 73, 74], "627229": [11, 13, 31, 33], "192930": [11, 13, 31, 33], "4800": [11, 13, 31, 33], "630": [11, 13, 31, 33], "190098": [11, 13, 31, 33], "122340": [11, 13, 31, 33], "1045": [11, 13, 31, 33], "194": [11, 13, 31, 33], "189": [11, 13, 31, 33], "463088": [11, 13, 31, 33], "181": [11, 13, 31, 33], "387599": [11, 13, 31, 33], "142": [11, 13, 31, 33], "6600": [11, 13, 31, 33], "7800": [11, 13, 31, 33], "2537": [11, 13, 31, 33], "8507": [11, 13, 31, 33], "281": [11, 13, 31, 33], "977": [11, 13, 31, 33], "8734": [11, 13, 31, 33], "8645": [11, 13, 31, 33], "16879": [11, 13, 31, 33], "11413": [11, 13, 31, 33], "4544": [11, 13, 31, 33], "1419": [11, 13, 31, 33], "model_explain": [11, 12, 13, 14, 15, 16, 17, 18, 38, 39, 42, 47, 48, 49, 50, 58], "uni_featur": [11, 12, 13, 14, 15, 16, 18, 23, 24, 25, 30, 31, 32, 33, 47, 48, 49, 50, 58], "original_scal": [11, 12, 13, 14, 15, 17, 22, 23, 24, 25, 26, 27, 28, 29, 47, 48, 49, 50, 58, 69, 70], "bi_featur": [11, 12, 13, 14, 32, 33, 47, 49, 58], "077": [11, 19], "341": 11, "plot_0_al": [11, 19], "uci": [12, 38, 42, 47, 48, 49, 50, 58], "repositori": [12, 38, 42, 47, 48, 49, 50], "classifier_model": [12, 14, 15, 17, 18], "0008": [12, 14, 16, 17, 18, 42], "relu_dnn": [12, 13, 14, 17, 18, 48, 49, 50], "28": [12, 16, 18, 19, 24, 29, 31, 33, 34, 41], "944": [12, 19], "47": [12, 16, 19, 33], "plot_1_al": [12, 19], "partial": [13, 14, 46, 47, 51, 58, 64, 65], "depend": [13, 14, 46, 47, 48, 50, 51, 58], "problem": [13, 14, 15, 16, 18, 38, 39, 40, 41, 42, 47, 48, 49, 50, 58], "1e": [13, 48, 49, 50, 64, 65, 73, 74], "702": [13, 19], "35": [13, 16, 19, 33], "plot_2_pdp": [13, 19], "881": [14, 19], "plot_3_pdp": [14, 19], "gami": [15, 53, 58, 64, 65], "net": [15, 53, 58, 64, 65, 69, 70], "879": [15, 19], "353": [15, 19], "plot_4_pfi": [15, 19], "classifi": [16, 58, 59, 61, 63, 64, 69, 73], "relu": [16, 20, 21, 34, 39, 42, 48, 49, 53, 58, 64, 65, 73, 74], "dnn": [16, 20, 21, 34, 39, 42, 53, 58], "shap_waterfal": [16, 58], "shap_fi": [16, 58], "sample_s": [16, 58, 64, 65], "": [16, 37, 38, 46, 48, 49, 50, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "03": [16, 34], "27": [16, 33, 34], "07": [16, 19, 34], "09": [16, 25, 29], "08": [16, 41], "50": [16, 59, 60, 73, 74], "70": 16, "31": [16, 19, 23, 33, 34, 41], "38": [16, 17, 19, 33], "shap_summari": [16, 58], "73": 16, "shap_scatt": [16, 58], "968": [16, 19], "347": [16, 19], "plot_5_shap": [16, 19], "local": [17, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 38, 49, 51, 53, 58, 59, 60, 63, 64, 65, 66, 69, 70], "interpret": [17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 46, 47, 53, 58, 61, 62, 63, 64, 65, 66, 69, 70, 77], "agnost": [17, 38, 39, 42, 47, 49], "explan": [17, 38, 39, 42, 43, 47, 49, 58, 59, 60, 64, 65], "groblem": 17, "742": [17, 19], "plot_6_lim": [17, 19], "766": [18, 19], "plot_7_ic": [18, 19], "auto_examples_explain": 19, "340": 19, "decis": [20, 21, 34, 41, 53, 58, 69, 70], "tree": [20, 21, 28, 29, 34, 49, 50, 53, 58, 61, 62, 69, 70], "addit": [20, 21, 34, 47, 51, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66], "glm": [20, 21, 34, 39, 41, 53, 58, 67], "linear": [20, 21, 32, 33, 34, 46, 47, 49, 53, 58, 68], "logist": [20, 21, 34, 53, 67], "auto_examples_python": 20, "zip": 20, "auto_examples_jupyt": 20, "glmclassifi": [22, 41, 58], "auc": [22, 32, 53, 55, 58], "recal": [22, 53, 55, 58], "precis": [22, 53, 55, 58], "8083": 22, "7375": 22, "2579": 22, "6834": 22, "3745": 22, "8150": 22, "7356": 22, "2583": 22, "6936": 22, "3764": 22, "0067": 22, "0019": 22, "0102": 22, "model_interpret": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 42, 58], "glm_coef_plot": [22, 23, 58], "global_fi": [22, 23, 24, 25, 30, 31, 32, 33, 58], "local_fi": [22, 23, 24, 25, 30, 31, 32, 33, 58], "sample_id": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 58], "center": [22, 23, 32, 33, 46, 58, 63, 64, 65, 66], "fals": [22, 23, 32, 33, 47, 49, 58, 63, 64, 65, 66, 69, 70, 73, 74], "420": [22, 34], "plot_0_glm_cl": [22, 34], "0209": 23, "1083": 23, "3947": 23, "0206": 23, "1060": 23, "4138": 23, "0003": 23, "0023": 23, "0191": 23, "171": [23, 28, 34], "plot_0_glm_reg": [23, 34], "gam": [24, 25, 30, 31, 40, 53, 58, 63, 64, 65, 66], "gamclassifi": [24, 58], "cocircl": [24, 26, 58], "x0": [24, 26, 27], "x1": [24, 26, 27, 40, 58, 64, 65], "783526": [24, 26], "502161": [24, 26], "297809": [24, 26], "658405": [24, 26], "468272": [24, 26], "500653": [24, 26], "134700": [24, 26], "887973": [24, 26], "337202": [24, 26], "780797": [24, 26], "1995": [24, 26, 27], "498109": [24, 26], "889060": [24, 26], "1996": [24, 26, 27], "312980": [24, 26], "724953": [24, 26], "1997": [24, 26, 27], "542930": [24, 26], "583517": [24, 26], "1998": [24, 26, 27], "871481": [24, 26], "491301": [24, 26], "1999": [24, 26, 27], "323963": [24, 26], "719150": [24, 26], "2000": [24, 26, 27, 46, 58], "spline_ord": [24, 25, 63, 66], "n_spline": [24, 25, 63, 66], "lam": [24, 25, 63, 66], "effect": [24, 25, 32, 33, 38, 39, 42, 48, 49, 51, 58, 61, 62, 63, 64, 65, 66, 69, 70], "global_effect_plot": [24, 25, 30, 31, 32, 33, 58], "419": [24, 34], "plot_1_gam_cl": [24, 34], "gamregressor": [25, 58], "californiahousing_trim2": [25, 29, 39, 58], "medinc": [25, 29], "houseag": [25, 29], "averoom": [25, 29, 39, 58], "avebedrm": [25, 29, 39, 58], "popul": [25, 29, 39, 58], "aveoccup": [25, 29, 39, 58], "latitud": [25, 29], "3252": [25, 29], "984127": [25, 29], "023810": [25, 29], "322": [25, 29], "555556": [25, 29], "88": [25, 29], "3014": [25, 29], "238137": [25, 29], "971880": [25, 29], "2401": [25, 29], "109842": [25, 29], "86": [25, 29], "2574": [25, 29], "52": [25, 29, 46], "288136": [25, 29], "073446": [25, 29], "496": [25, 29], "802260": [25, 29], "85": [25, 29], "6431": [25, 29], "817352": [25, 29], "073059": [25, 29], "558": [25, 29], "547945": [25, 29], "8462": [25, 29], "281853": [25, 29], "081081": [25, 29], "565": [25, 29], "181467": [25, 29], "20635": [25, 29], "5603": [25, 29], "045455": [25, 29], "133333": [25, 29], "845": [25, 29], "560606": [25, 29], "20636": [25, 29], "5568": [25, 29], "114035": [25, 29], "315789": [25, 29], "356": [25, 29], "122807": [25, 29], "20637": [25, 29], "7000": [25, 29], "205543": [25, 29], "120092": [25, 29], "1007": [25, 29], "325635": [25, 29], "20638": [25, 29], "8672": [25, 29], "329513": [25, 29], "171920": [25, 29], "741": [25, 29], "123209": [25, 29], "20639": [25, 29], "3886": [25, 29], "254717": [25, 29], "162264": [25, 29], "1387": [25, 29], "616981": [25, 29], "longitud": [25, 29], "medhousev": [25, 29, 39, 52], "122": [25, 29], "526": [25, 29], "585": [25, 29], "521": [25, 29], "413": [25, 29], "422": [25, 29], "121": [25, 29], "781": [25, 29], "771": [25, 29], "923": [25, 29], "847": [25, 29], "894": [25, 29], "20640": [25, 29], "371": [25, 34], "151": 25, "plot_1_gam_reg": [25, 34], "pidecisiontreeclassifi": [26, 58], "start": [26, 27, 46], "root": [26, 27, 28, 29, 58, 69, 70], "node": [26, 27, 61, 62, 69, 70], "tree_glob": [26, 27, 28, 29, 58], "depth": [26, 27, 28, 29, 53, 58, 61, 62, 69, 70], "th": [26, 27, 47, 49], "tree_loc": [26, 27, 28, 29, 58], "428": [26, 34], "plot_2_dt_cl": [26, 34], "pidecisiontreeregressor": [27, 58], "friedman": [27, 40, 49, 58], "x2": [27, 40, 58, 64, 65], "x3": 27, "x4": 27, "x5": [27, 40, 58], "x6": 27, "548814": 27, "715189": 27, "602763": 27, "544883": 27, "423655": 27, "645894": 27, "437587": 27, "791725": 27, "528895": 27, "568045": 27, "925597": 27, "071036": 27, "087129": 27, "020218": 27, "978618": 27, "799159": 27, "461479": 27, "780529": 27, "118274": 27, "639921": 27, "143353": 27, "264556": 27, "774234": 27, "456150": 27, "568434": 27, "018790": 27, "617635": 27, "612096": 27, "359508": 27, "437032": 27, "697631": 27, "060225": 27, "666767": 27, "670638": 27, "210383": 27, "111051": 27, "488321": 27, "727989": 27, "302208": 27, "844483": 27, "156907": 27, "160562": 27, "724868": 27, "472222": 27, "761993": 27, "534610": 27, "064310": 27, "388631": 27, "435624": 27, "324054": 27, "934143": 27, "992645": 27, "463296": 27, "425442": 27, "471304": 27, "510505": 27, "123755": 27, "170197": 27, "535437": 27, "668782": 27, "359393": 27, "892527": 27, "095030": 27, "536808": 27, "528714": 27, "606949": 27, "705304": 27, "953551": 27, "748175": 27, "298267": 27, "x7": 27, "x8": 27, "x9": 27, "891773": 27, "963663": 27, "383442": 27, "166191": 27, "832620": 27, "778157": 27, "870012": 27, "368539": 27, "944669": 27, "521848": 27, "414662": 27, "733977": 27, "616934": 27, "943748": 27, "681820": 27, "890352": 27, "128926": 27, "315428": 27, "363711": 27, "462178": 27, "073990": 27, "815838": 27, "283957": 27, "970655": 27, "297064": 27, "514155": 27, "115737": 27, "837032": 27, "450262": 27, "715412": 27, "716506": 27, "630926": 27, "656250": 27, "166036": 27, "827779": 27, "088221": 27, "446456": 27, "360127": 27, "625887": 27, "794560": 27, "579": [27, 34], "plot_2_dt_reg": [27, 34], "first": [28, 29, 39, 40, 41, 46, 47, 49, 64, 65], "tree_idx": [28, 29, 58, 69, 70], "plot_3_figs_cl": [28, 34], "383": [29, 34], "plot_3_figs_reg": [29, 34], "explainableboostingclassifi": [30, 58], "ebm": [30, 31, 42, 53, 58, 59, 60], "global_ei": [30, 31, 58], "local_ei": [30, 31, 58], "902": [30, 34], "plot_4_ebm_cl": [30, 34], "explainableboostingregressor": [31, 58], "plot_4_ebm_reg": [31, 34], "matplotlib": [32, 63, 66], "pyplot": [32, 63, 66], "plt": [32, 63, 66], "llm": [32, 33, 58], "summari": [32, 33, 58], "llm_summari": [32, 33, 58], "count": [32, 33, 38, 47, 49, 50, 73, 74], "respons": [32, 33, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 58, 61, 62, 63, 64, 65, 66, 73, 74], "5153": 32, "1056": 32, "3073": 32, "5844": 32, "7351": 32, "4868": 32, "0992": 32, "2990": 32, "6393": 32, "6256": 32, "1660": 32, "1855": 32, "3889": 32, "7063": 32, "7347": 32, "1371": 32, "2305": 32, "4213": 32, "6049": 32, "4996": 32, "1054": 32, "1717": 32, "3773": 32, "5896": 32, "5508": 32, "306": 32, "nan": [32, 33], "4315": 32, "307": 32, "6939": 32, "308": 32, "7324": 32, "309": 32, "6592": 32, "310": 32, "6671": 32, "311": 32, "parallel": [32, 33, 58, 64, 65], "coordin": [32, 33, 58], "llm_pc": [32, 33, 58], "violin": [32, 33, 58], "llm_violin": [32, 33, 58], "two": [32, 33, 41, 46, 47, 48, 49, 58], "without": [32, 33], "function": [32, 46, 47, 48, 49, 57, 59, 60, 63, 64, 65, 66, 69, 70, 73, 74], "plote": [32, 64, 65], "valid": [32, 46, 50, 53, 64, 65, 73, 74], "loss": [32, 50, 58, 64, 65, 73, 74], "def": 32, "train_val_plot": 32, "loss_train": 32, "loss_val": 32, "figur": [32, 46, 58, 63, 66, 69, 70], "epoch": [32, 64, 65, 73, 74], "rang": [32, 46, 47, 49], "len": [32, 73, 74], "label": [32, 40, 58, 59, 60, 61, 62, 64, 65, 69, 70, 73, 74], "g": [32, 41, 46, 64, 65], "titl": 32, "xlabel": 32, "ylabel": 32, "legend": 32, "get_model": [32, 58], "train_epoch_loss_": [32, 73, 74], "valid_epoch_loss_": [32, 73, 74], "533": [32, 34], "plot_7_reludnn_cl": [32, 34], "2129": 33, "213026": 33, "145901": 33, "013335": 33, "055850": 33, "1785": 33, "018070": 33, "023386": 33, "000592": 33, "062803": 33, "1403": 33, "033921": 33, "038362": 33, "001554": 33, "1354": 33, "308547": 33, "157945": 33, "018794": 33, "061325": 33, "1297": 33, "132751": 33, "070181": 33, "002629": 33, "173329": 33, "797": 33, "368295": 33, "173803": 33, "015898": 33, "202660": 33, "490": 33, "359786": 33, "198491": 33, "013193": 33, "913911": 33, "484": 33, "469498": 33, "204234": 33, "016062": 33, "919104": 33, "471": 33, "460604": 33, "181333": 33, "012763": 33, "240517": 33, "366": 33, "105719": 33, "059997": 33, "002128": 33, "174169": 33, "339": 33, "219581": 33, "176326": 33, "020435": 33, "167921": 33, "327": 33, "165022": 33, "155440": 33, "012411": 33, "867442": 33, "264": 33, "223741": 33, "191498": 33, "015696": 33, "949841": 33, "245": 33, "264381": 33, "110118": 33, "009937": 33, "038124": 33, "212": 33, "016497": 33, "023040": 33, "000597": 33, "211": 33, "116257": 33, "112387": 33, "003880": 33, "779665": 33, "191": 33, "116499": 33, "126168": 33, "004987": 33, "893797": 33, "335991": 33, "121229": 33, "009470": 33, "006735": 33, "166": 33, "197609": 33, "101430": 33, "005845": 33, "042242": 33, "154": [33, 34], "190350": 33, "054339": 33, "002207": 33, "177843": 33, "148": 33, "312717": 33, "181081": 33, "026073": 33, "205128": 33, "118": 33, "255167": 33, "117384": 33, "013287": 33, "981972": 33, "111": 33, "144246": 33, "062674": 33, "002298": 33, "178719": 33, "107": 33, "405214": 33, "122639": 33, "008663": 33, "084790": 33, "98": [33, 38, 39, 58], "039676": 33, "016909": 33, "000504": 33, "83": 33, "285029": 33, "132262": 33, "011510": 33, "092691": 33, "79": 33, "015424": 33, "009234": 33, "000172": 33, "71": 33, "057783": 33, "025787": 33, "001743": 33, "032973": 33, "017465": 33, "000365": 33, "112620": 33, "063122": 33, "009649": 33, "148365": 33, "022953": 33, "012870": 33, "000163": 33, "097265": 33, "054250": 33, "001679": 33, "338324": 33, "074551": 33, "086622": 33, "006132": 33, "120750": 33, "020581": 33, "027514": 33, "000724": 33, "024542": 33, "031217": 33, "000905": 33, "076308": 33, "030690": 33, "003500": 33, "225201": 33, "089482": 33, "003312": 33, "014212": 33, "010195": 33, "005931": 33, "807052": 33, "114017": 33, "101377": 33, "005030": 33, "336018": 33, "139829": 33, "045376": 33, "008751": 33, "055897": 33, "009428": 33, "000931": 33, "076973": 33, "002564": 33, "002176": 33, "000497": 33, "42": 33, "014359": 33, "002901": 33, "003100": 33, "702513": 33, "013333": 33, "000132": 33, "030769": 33, "000012": 33, "45": [33, 41, 50], "268718": 33, "004735": 33, "plot_7_reludnn_reg": [33, 34], "918": 34, "auto_examples_model": 34, "150": 34, "welcom": 35, "scikit": [35, 46, 58], "learn": [35, 38, 39, 42, 43, 46, 47, 48, 49, 50, 53, 58, 61, 62, 64, 65, 73, 74], "instal": [35, 75], "api": [35, 40, 47, 48, 49, 50, 53], "refer": [35, 40, 41, 58], "pipelin": [35, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74, 77], "post": [35, 38, 39, 42, 53, 58, 77], "hoc": [35, 38, 39, 42, 53, 58, 77], "explain": [35, 37, 48, 49, 53, 58, 59, 60, 77], "outcom": [35, 37, 53, 58, 77], "user": [35, 46, 57, 59, 60], "guid": [35, 57], "introduct": [35, 46, 51, 77], "black": [35, 47, 77], "box": [35, 47, 77], "comparison": [35, 37, 58, 77], "studi": [35, 77], "conclus": [35, 77], "frequent": 35, "ask": 35, "question": 35, "how": [36, 38, 39, 42, 47, 48, 49, 50], "can": [36, 39, 41, 42, 46, 47, 48, 49, 50, 52, 56, 58, 60, 62, 65, 69, 70, 74], "read": [36, 47], "my": 36, "own": 36, "frame": 36, "get": [36, 41, 46, 47, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "predict": [36, 46, 47, 48, 49, 50, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 73, 74], "chapter": 37, "includ": [37, 39, 42, 46, 47, 53, 56, 58, 61, 62, 64, 65], "multipl": [37, 43, 50, 58], "low": [37, 38, 39, 41, 42, 47, 49, 50, 53, 58], "experiment": [37, 58], "load": [37, 47, 48, 49, 50, 58, 64, 65, 77], "intepret": 37, "benchmark": 37, "californiah": [37, 77], "simul": [37, 58, 77], "ml": [37, 53, 58], "demonstr": [38, 39, 40, 41, 42, 46, 47, 48, 49, 50], "its": [38, 39, 42, 46, 47, 48, 49, 50, 64, 65], "mode": [38, 39, 42, 50, 58, 64, 65], "develop": [38, 39, 42, 47, 49, 50, 53, 58], "machin": [38, 39, 42, 43, 46, 47, 49, 50, 53, 58], "which": [38, 39, 42, 46, 47, 48, 49, 50, 58, 59, 61, 62, 64, 65, 69, 73], "consist": [38, 39, 42, 47, 48, 49, 50, 60, 62, 65, 70, 74], "389": [38, 47, 49, 50], "hourli": [38, 47, 49, 50], "rental": [38, 47, 49, 50], "bike": [38, 47, 50, 58], "capit": [38, 47, 49, 50], "system": [38, 47, 49, 50], "see": [38, 39, 42, 46, 47, 48, 49, 50, 69, 70], "detail": [38, 39, 42, 46, 47, 48, 49, 51, 57, 69, 70], "continu": [38, 39, 46, 47, 49, 50, 64, 65], "link": [38, 39, 40, 41, 42, 46, 59, 60], "googl": [38, 39, 40, 41, 42, 58], "colab": [38, 39, 40, 41, 42], "one": [38, 40, 41, 46, 47, 48, 49, 50, 59, 64, 65], "highli": [38, 46, 49], "other": [38, 40, 42, 47, 48, 49, 50], "lgbm": [38, 39, 46, 58], "try": [38, 39], "top": [38, 39, 46, 49, 64, 65], "percentag": [38, 39, 46], "exploratori": [38, 39, 40, 41, 58], "analysi": [38, 39, 40, 41, 48, 50, 53, 58], "check": [38, 39, 41, 69, 70], "distribut": [38, 39, 46, 47, 53, 55, 56, 58], "eda": [38, 39, 40, 41, 42, 58], "need": [38, 46, 56], "specif": [38, 39, 42, 47, 48, 49, 57, 58, 63, 66, 69, 70], "inher": [38, 39, 42, 53, 58], "pairwis": [38, 39, 42, 46, 64, 65], "interact": [38, 39, 42, 47, 48, 49, 53, 59, 60, 61, 62, 64, 65], "640": 39, "fetch": 39, "sklearn": [39, 46, 49, 52, 58, 69, 70], "three": [39, 46], "version": [39, 56, 60, 62, 65, 69, 70, 74], "_raw": 39, "_trim1": 39, "trim": 39, "_trim2": 39, "hous": [39, 58], "price": 39, "per": [39, 47, 59, 60, 64, 65], "block": [39, 64, 65], "log": [39, 58, 64, 65, 69], "scale": [39, 49, 58, 69, 70], "Then": [39, 46, 52], "l1": [39, 53, 67, 68, 73, 74], "0005": 39, "reigster": 39, "1d": [39, 42, 58], "2d": [39, 42], "v": [39, 42, 46, 58, 60, 62, 65, 70, 74], "integr": [40, 49, 53], "sola": [40, 53, 58], "ai": [40, 53, 58], "solassimu1": [40, 58], "modifi": [40, 58], "demo": [40, 58, 64, 65], "covari": [40, 46, 53, 55, 58], "ar": [40, 46, 47, 48, 49, 50, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "binari": [40, 41, 42, 46, 53, 55, 58, 61, 62], "rest": [40, 58], "demograph": [40, 41, 58], "contribut": [40, 58, 59, 60], "minor": 40, "major": 40, "62": 40, "grei": [40, 41], "color": [40, 41], "when": [40, 41, 46, 47, 48, 49, 50, 60, 62, 63, 64, 65, 66, 69, 70, 73, 74], "finish": 40, "suggest": [40, 49], "procudur": 40, "group": [40, 41, 58], "add": [40, 41, 58], "categori": [40, 41, 58, 64, 65], "By": [40, 46, 48], "enter": 40, "protect": [40, 41, 58], "switch": 40, "view": [40, 46, 49], "breakdown": 40, "model_fairness_sola": [40, 58], "hypothes": 41, "well": [41, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "indic": [41, 47, 49, 50, 58, 64, 65, 69, 70], "60526": 41, "num": 41, "applic": [41, 46, 58], "averag": [41, 46, 47, 48, 49, 50, 58, 64, 65], "last": [41, 46, 64, 65, 73, 74], "month": 41, "card": [41, 42, 47, 48, 49, 50, 58], "minimum": [41, 61, 62], "requir": [41, 46, 49, 56, 58, 59, 61, 62, 64, 69, 73, 74], "payment": [41, 42], "wa": 41, "appli": [41, 69, 70], "account": 41, "date": 41, "ordin": [41, 58, 64, 65], "current": [41, 56], "dai": 41, "so": [41, 47, 50, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "number": [41, 46, 47, 58, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "sum": [41, 46, 53, 58, 59, 60, 61, 62, 65, 69, 70, 74], "limit": [41, 46, 47, 51, 53], "cannot": [41, 46], "kind": 41, "approv": 41, "nearli": [41, 58], "manual": [41, 64, 65], "creditsimuunbalanc": 41, "292916": 41, "979": 41, "629327": 41, "305767": 41, "2398": 41, "64": 41, "804077": 41, "257664": 41, "96": 41, "1830": 41, "87": 41, "1089": 41, "69": 41, "263113": 41, "152783": 41, "1524": 41, "948": 41, "84": 41, "390256": 41, "299243": 41, "2126": 41, "279": 41, "553556": 41, "60521": 41, "243584": 41, "72": 41, "1194": 41, "92": 41, "553532": 41, "60522": 41, "272959": 41, "856": 41, "678293": 41, "60523": 41, "225381": 41, "1084": 41, "631209": 41, "60524": 41, "154846": 41, "445": 41, "333873": 41, "60525": 41, "255320": 41, "1249": 41, "243077": 41, "depth2": 41, "depth7": 41, "xgbclassifi": 41, "xgb7": 41, "xgb2": [41, 53, 58], "favor": [41, 58], "defaut": 41, "e": [41, 46, 48, 49, 59, 64, 65], "If": [41, 47, 49, 50, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "find": [41, 49, 56], "higher": [41, 47], "lower": [41, 48], "debias": 41, "unfair": 41, "mitig": [41, 46], "adjust": 41, "vari": [41, 48], "both": [41, 46, 47, 49, 50, 64, 65], "good": [41, 50], "clear": 41, "could": [41, 50, 56, 64, 65], "record": [41, 48, 50], "after": [41, 52, 64, 65], "improv": [41, 73, 74], "doe": 41, "scarific": 41, "too": [41, 47, 63, 66, 69, 70], "much": [41, 47, 50], "similar": [41, 46, 47, 48, 64, 65], "upon": 41, "becaus": [41, 47, 60, 62, 65, 70, 74], "impact": [41, 58], "anymor": 41, "model_fairness_compar": [41, 58], "client": [42, 47, 48, 49, 50, 58], "taiwan": [42, 47, 48, 50], "200504": [42, 47, 48, 50], "200509": [42, 47, 48, 50], "subject": [42, 46, 47, 48, 50, 64, 65], "slight": [42, 47, 48, 50], "preprocess": [42, 47, 48, 49, 50, 58], "histori": [42, 64, 65], "keep": [42, 47, 60, 62, 65, 70, 74], "while": [42, 46, 48, 49, 69, 70], "l1_regular": 42, "each": [42, 46, 47, 48, 49, 50, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "result": [43, 46, 49, 58, 63, 64, 65, 66, 69, 70], "aim": 46, "subset": [46, 47, 49, 59, 61, 64, 69, 73], "most": [46, 47, 48, 50, 64, 65], "relev": [46, 48], "larg": [46, 64, 65, 73, 74], "help": [46, 49], "comput": [46, 47, 48, 50, 64, 65, 69, 70, 73, 74], "burden": 46, "avoid": [46, 64, 65, 73, 74], "moreov": 46, "reduc": [46, 50], "also": [46, 49, 50, 52, 53, 64, 65, 69, 70], "benefici": 46, "enhanc": 46, "section": [46, 47, 49], "would": [46, 58, 60, 62, 64, 65, 69, 70, 74], "briefli": [46, 47], "introduc": 46, "purpos": 46, "note": [46, 58, 60, 62, 64, 65, 70, 74], "henc": 46, "befor": [46, 50, 59, 60, 64, 65, 73, 74], "measur": [46, 58], "mathemat": 46, "coeffici": [46, 58, 60, 62, 65, 70, 74], "y": [46, 47, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "calcul": [46, 58, 63, 64, 65, 66, 69, 70], "wai": [46, 47, 49, 58], "begin": [46, 47, 48, 49], "align": [46, 47, 48, 49], "rho_": 46, "frac": [46, 47, 49, 60, 62, 65, 70, 74], "sum_": [46, 47, 49], "left": [46, 61, 62], "x_i": 46, "bar": [46, 49, 59, 60], "y_i": 46, "sqrt": 46, "sign": 46, "denot": [46, 47], "direct": 46, "relationship": [46, 48, 49, 50], "magnitud": 46, "repres": [46, 47, 48, 49, 73, 74], "strength": [46, 58, 63, 64, 65, 66, 67, 68], "correspond": [46, 58, 69, 70, 73, 74], "straightforward": [46, 47, 49, 50], "greater": [46, 58, 61, 62, 64, 65], "than": [46, 47, 58, 61, 62, 64, 65], "specifi": [46, 47, 58], "These": 46, "wrap": 46, "up": [46, 47, 58, 69, 70], "call": [46, 50, 58, 59, 60, 62, 65, 70, 74], "singl": [46, 49, 50, 58, 63, 66, 69, 70], "line": [46, 48, 58], "command": 46, "keyword": 46, "defin": [46, 48, 49, 50, 58, 59, 60, 62, 65, 70, 74], "upper": [46, 58], "blue": 46, "orang": 46, "posit": [46, 58, 63, 64, 65, 66], "neg": [46, 60, 62, 63, 65, 66, 67, 68, 69, 70, 74], "respect": [46, 47, 58, 64, 65], "contain": [46, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "bottom": 46, "text": 46, "highlight": 46, "easi": [46, 47, 58], "howev": [46, 47, 48, 49, 50], "deal": [46, 50, 64, 65, 73, 74], "complic": 46, "pair": [46, 47, 59, 60, 64, 65], "vector": [46, 47, 59, 60, 73, 74], "It": [46, 47, 53, 58, 64, 65, 69, 70, 73, 74], "an": [46, 47, 48, 49, 50, 58, 59, 60, 61, 62, 69, 70], "advanc": 46, "handl": 46, "given": [46, 58, 59, 61, 64, 65, 69, 73], "euclidean": [46, 58], "matrix": [46, 58, 60, 61, 62, 65, 69, 70, 73, 74], "a_": 46, "j": [46, 47, 49], "k": [46, 47, 50, 58], "x_j": 46, "x_k": 46, "quad": 46, "ldot": 46, "b_": 46, "y_j": 46, "y_k": 46, "matric": 46, "cdot": 46, "b": [46, 47, 50, 53, 64, 65], "arithmet": 46, "product": [46, 64, 65], "mathrm": [46, 48, 49], "dcov": 46, "final": 46, "formula": 46, "dvar": 46, "operatornam": 46, "determin": [46, 49, 58, 60, 62, 65, 70, 73, 74], "alwai": [46, 60, 62, 65, 70, 74], "don": [46, 52, 69, 70], "t": [46, 49, 52, 64, 65, 69, 70, 73, 74], "take": 46, "absolut": [46, 58], "packag": [46, 47, 53], "vnmabu": 46, "advantag": [46, 51], "li": 46, "captur": [46, 49], "computation": 46, "veri": [46, 47, 50, 64, 65, 73, 74], "expens": 46, "compos": 46, "sort": 46, "descend": 46, "order": [46, 47, 49, 63, 64, 65, 66, 69, 70], "normal": [46, 58, 61, 62, 64, 65, 69, 70], "accumul": [46, 49, 51, 58], "pre": 46, "implement": [46, 47, 61, 62], "found": [46, 47, 49, 56], "org": 46, "stabl": 46, "modul": [46, 52, 58, 64, 65], "inspect": [46, 69, 70], "permutation_import": [46, 69, 70], "As": [46, 47, 58, 64, 65], "increas": [46, 47, 48, 50, 64, 65], "more": [46, 47, 49, 50], "rank": 46, "potenti": 46, "concern": 46, "noisi": 46, "thu": 46, "incorrect": 46, "identifi": [46, 48, 58], "minim": [46, 69, 70], "maximum": [46, 63, 66, 69, 70], "power": 46, "particular": [46, 47], "whether": [46, 49, 58, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "probabilist": 46, "A": [46, 47, 49, 58, 60, 61, 62, 64, 65, 70, 73, 74], "incorpor": 46, "z": 46, "goal": [46, 47], "perp": 46, "mid": 46, "relat": [46, 58, 69, 70], "kcit": 46, "zhang2012": 46, "kernel": [46, 60, 62, 65, 70, 74], "work": [46, 53, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "arbitrari": [46, 53, 58, 77], "scalabl": [46, 64, 65], "strobl2019": 46, "fast": [46, 53, 58, 61, 62], "approxim": [46, 49], "fourier": [46, 58], "instead": [46, 47, 60, 62, 65, 69, 70, 74], "reproduc": 46, "hibert": 46, "therefor": [46, 47, 49, 50], "transform": 46, "null": 46, "hypothesi": 46, "equival": 46, "zero": [46, 69, 70], "cross": [46, 50], "sigma_": 46, "statist": [46, 48, 49, 58], "hat": [46, 47, 48, 49], "sigma": 46, "_f": 46, "gamma": 46, "asymptot": 46, "lambda_i": 46, "z_i": 46, "d": [46, 47, 50], "standard": [46, 47, 58, 64, 65], "gaussian": [46, 58], "lindsai": 46, "pilla": 46, "basak": 46, "lpb": 46, "lindsayl2000": 46, "cdf": 46, "finit": 46, "mixtur": 46, "borboudakis2019": 46, "algorithm": [46, 51, 61, 62], "combin": [46, 47], "elimin": 46, "conduct": 46, "further": [46, 57], "delet": 46, "insignific": 46, "predefin": 46, "remain": 46, "candid": 46, "p_valu": 46, "among": 46, "signific": 46, "ad": [46, 64, 65], "repeat": [46, 50, 58, 63, 66], "stop": [46, 61, 62, 64, 65, 73, 74], "abov": [46, 47, 49], "describ": [46, 47, 49], "phase": [46, 73, 74], "To": [46, 47, 48], "overal": 46, "charact": 46, "recommend": [46, 47, 50], "yu2020": 46, "twice": 46, "you": [46, 49, 52, 56, 58, 59, 61, 64, 69, 70, 73], "chang": [46, 47, 48, 59, 60], "paramet": [46, 47, 48, 50, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74], "argument": [46, 59, 60, 69, 70], "temporarili": 46, "temporari": 46, "perman": 46, "formul": [46, 47], "smaller": [46, 58, 64, 65], "fewer": [46, 64, 65], "mark": 46, "over": [46, 47, 73, 74], "shown": [46, 64, 65], "iter": [46, 58, 61, 62, 63, 64, 65, 66, 73, 74], "some": [46, 49, 60, 62, 64, 65, 70, 74], "list": [46, 53, 58, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "procedur": 46, "seven": 46, "point": [46, 58, 61, 62, 64, 65], "thei": [46, 47, 48, 49, 69, 70], "deep": [46, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "capabl": 46, "causal": 46, "level": 46, "disadvantag": [46, 51], "rel": [46, 47], "high": [46, 48, 49, 51, 53, 55, 58, 69, 70], "sequenti": [46, 64, 65], "approach": [46, 47, 50], "slightli": [46, 47], "treat": 46, "treatment": 46, "rigour": 46, "especi": [46, 61, 62], "zhang": [46, 53], "peter": 46, "janz": 46, "sch\u00f6lkopf": 46, "2012": 46, "discoveri": 46, "arxiv": [46, 47], "preprint": [46, 47], "1202": 46, "3775": 46, "strobl": 46, "visweswaran": 46, "2019": [46, 53], "parametr": 46, "journal": [46, 48], "infer": [46, 64, 65, 73, 74], "moment": 46, "theori": 46, "annal": 46, "institut": 46, "pp": 46, "215": 46, "230": 46, "borboudaki": 46, "ioanni": 46, "research": 46, "276": 46, "314": 46, "yu": 46, "guo": 46, "liu": 46, "l": [46, 47, 50], "wang": 46, "h": [46, 47], "ling": 46, "wu": 46, "2020": [46, 53], "acm": 46, "survei": 46, "csur": 46, "53": 46, "a2016": 47, "ass": 47, "affect": 47, "share": [47, 58], "same": [47, 58, 59, 60, 64, 65, 69], "overcom": 47, "across": [47, 48], "paper": 47, "scalar": 47, "predictor": [47, 48, 50], "textbf": [47, 50], "x_": [47, 48, 49, 63, 66], "f": [47, 48, 49], "probabl": [47, 58, 59, 61, 64, 69, 73, 74], "fall": [47, 49], "y_": [47, 63, 66], "let": [47, 48], "subseteq": 47, "f_": 47, "firt": 47, "estiam": 47, "c": [47, 48, 49, 70], "observ": [47, 49], "n_": 47, "z_": 47, "partit": [47, 48, 49], "interv": 47, "empir": [47, 58], "kth": 47, "k_": 47, "uncent": 47, "express": [47, 64, 65], "tag": [47, 49], "therfor": 47, "h_": 47, "adit": 47, "pleas": [47, 50, 57], "origin": [47, 49, 58, 64, 65, 69, 70], "visual": [47, 48, 49, 50, 59, 60, 64, 65], "kei": [47, 49, 64, 65], "involv": 47, "tell": 47, "u": [47, 49, 50, 60, 62, 65, 70, 74], "about": [47, 49, 58], "interest": [47, 48, 49], "On": [47, 49], "hand": [47, 49], "illustr": [47, 48, 49, 50], "decreas": [47, 50, 61, 62, 64, 65], "weatherist": 47, "ha": [47, 58], "lighter": 47, "shade": 47, "darker": 47, "extern": [47, 58], "pyal": 47, "allow": [47, 49, 63, 66, 69, 70], "gaminetregressor_model": 47, "difficult": 47, "strongli": [47, 50], "context": [47, 49], "ideal": 47, "explor": 47, "lead": [47, 50], "suppos": [47, 49], "uncorrel": 47, "prefer": 47, "easier": 47, "understand": [47, 48, 49], "There": 47, "small": 47, "might": 47, "accur": 47, "curv": 47, "have": [47, 49, 50, 52, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "mani": [47, 69, 70], "down": 47, "Not": [47, 58], "must": [47, 63, 66, 67, 68], "mind": 47, "dure": [47, 69, 70], "reason": 47, "temptat": 47, "heat": 47, "map": [47, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "complex": [47, 49, 69, 70], "less": 47, "intuit": 47, "prohibit": 47, "conveni": 47, "wise": 47, "smooth": [47, 61, 62, 63, 66], "easili": 47, "our": [47, 48, 50], "unbias": 47, "sinc": [47, 59, 61, 64, 69, 73], "faster": [47, 49], "o": [47, 56], "make": [47, 48, 50, 58, 64, 65], "constraint": [47, 61, 62, 64, 65], "taiwancreditdata": [47, 48, 49, 50], "probelm": 47, "aplei": 47, "w": [47, 64, 65], "zhu": 47, "supervis": [47, 53], "1612": 47, "08468": 47, "g2015": 48, "wherea": 48, "instanc": [48, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "complement": [48, 49], "still": 48, "hidden": [48, 49, 64, 65, 73, 74], "layer": [48, 49, 64, 65, 73, 74], "network": [48, 49, 53, 64, 65, 73, 74], "snippet": 48, "global_ic": [48, 58], "hold": 48, "constant": [48, 60, 62, 65, 70, 74], "examin": 48, "gain": [48, 49], "better": 48, "ani": [48, 61, 62, 69, 70], "pattern": 48, "goldstein": 48, "alex": 48, "adam": [48, 64, 65], "kapeln": 48, "justin": 48, "bleich": 48, "emil": 48, "pitkin": 48, "graphic": 48, "2015": 48, "h2009": 49, "tool": [49, 58], "monoton": [49, 64, 65], "assumpt": [49, 58], "math": 49, "x_c": 49, "mathbb": 49, "int": [49, 58, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "dx_": 49, "commonli": 49, "brute": 49, "recurs": 49, "avail": [49, 58, 64, 65], "process": [49, 69, 70], "accomplish": 49, "support": [49, 53, 56, 58, 61, 62], "provid": [49, 59, 60, 69, 70], "want": [49, 52], "chart": [49, 59, 60], "tend": 49, "substanti": 49, "joint": 49, "stronger": [49, 63, 66], "within": [49, 64, 65, 69, 70], "addition": 49, "significantli": 49, "hour": 49, "beyond": 49, "few": 49, "assum": [49, 50, 52, 64, 65], "inaccur": 49, "dimension": 49, "do": [49, 50, 69, 70], "inconsist": 49, "certain": 49, "ones": 49, "conjunct": 49, "techniqu": [49, 50, 53, 55], "individu": [49, 51, 58, 64, 65], "expect": [49, 51, 60, 62, 65, 70, 74], "etc": 49, "comprehens": 49, "compris": 49, "april": 49, "2005": 49, "septemb": 49, "inform": [49, 50, 58, 64, 65], "websit": 49, "directli": [49, 56, 58], "although": 49, "serv": 49, "hasti": 49, "tibshirani": 49, "element": [49, 69, 70, 73, 74], "edit": 49, "springer": 49, "2009": 49, "usual": [50, 58], "just": 50, "l2001": 50, "word": 50, "score": [50, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "randomli": 50, "shuffl": 50, "break": 50, "drop": 50, "With": 50, "bad": 50, "fulli": 50, "m": 50, "global_pfi": [50, 58], "bikesharedata": 50, "reludnn_model": 50, "intrest": 50, "give": [50, 57, 64, 65], "valuabl": 50, "insight": 50, "appear": 50, "either": [50, 69, 70], "page": 50, "breiman": 50, "2001": 50, "forest": 50, "mislead": [51, 69, 70], "alreadi": 52, "californiahousing_raw": [52, 58], "put": 52, "lightgbm": 52, "lgbmregressor": 52, "lgbm2": 52, "lgbm_2": 52, "abl": 52, "extract": [52, 64, 65], "futur": [52, 59, 60], "model_sav": [52, 58], "ch_lgmb_2": 52, "pkl": [52, 58], "pickl": [52, 58], "lgmb_2_load": 52, "model_select": 52, "train_test_split": 52, "test_siz": 52, "lgbm7": 52, "ravel": 52, "lgmb_7": 52, "\u03c0": 53, "\u02c8pa\u026a": 53, "\u02c8em": 53, "\u02c8el": 53, "new": [53, 69, 70], "through": [53, 58, 69, 70], "interfac": 53, "grow": 53, "l2": [53, 67, 68], "spline": [53, 63, 64, 65, 66], "greedi": [53, 58, 61, 62], "tan": 53, "et": 53, "2022": 53, "extrem": 53, "gradient": 53, "boost": [53, 58, 59, 60], "chen": 53, "guestrin": 53, "2016": 53, "lengerich": 53, "nori": 53, "lou": 53, "2013": 53, "structur": 53, "yang": 53, "sudjianto": 53, "2021": 53, "aletheia": 53, "unwrapp": 53, "sparsif": 53, "whole": 53, "spectrum": 53, "popular": [53, 55], "like": [53, 55, 58, 59, 60, 61, 62, 64, 65, 69, 70, 73, 74], "dispar": [53, 58], "identif": [53, 55], "weak": [53, 55], "region": [53, 55, 58], "residu": [53, 55, 58, 60, 62, 65, 70, 74], "slice": [53, 55, 58], "accord": [53, 55, 58, 64, 65], "reliabl": [53, 55, 58], "assess": [53, 55], "uncertainti": [53, 55], "conform": [53, 55, 58], "degrad": [53, 55, 58], "nois": [53, 55, 58], "out": [53, 55, 64, 65, 73, 74], "variou": [56, 58], "platform": [56, 58], "py37": 56, "py38": 56, "py39": 56, "win": 56, "linux": 56, "maco": 56, "environ": 56, "pip": 56, "got": 56, "messag": 56, "satisfi": [56, 64, 65], "match": 56, "upgrad": 56, "enough": 57, "guidelin": 57, "workflow": [58, 69, 70], "manag": 58, "str": [58, 63, 64, 65, 66, 73, 74], "depreci": 58, "union": 58, "datafram": 58, "silent": 58, "bool": [58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "pass": [58, 63, 66], "program": 58, "otherwis": 58, "spheric": 58, "archiv": 58, "edu": 58, "crash": 58, "cours": 58, "california": 58, "californiahousing_trim1": 58, "trime": 58, "fairnesscreditsimu": 58, "solasai": 58, "solashmda": 58, "2018": 58, "home": 58, "disclosur": 58, "act": 58, "hmda": 58, "everi": [58, 63, 66], "unit": 58, "preview": 58, "unicod": [58, 63, 66], "sample_weight": [58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "float": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74], "train_idx": 58, "test_idx": 58, "arrai": [58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "n_samples_train": 58, "n_samples_test": 58, "dict": [58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "summar": 58, "basic": 58, "multi_typ": 58, "log_scal": 58, "return_data": 58, "tupl": [58, 63, 64, 65, 66, 69, 70, 73, 74], "univari": 58, "bivari": 58, "multivari": 58, "axi": [58, 63, 64, 65, 66], "return": [58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "surrog": 58, "larger": [58, 63, 64, 65, 66], "chosen": 58, "manner": 58, "forward": 58, "equal": [58, 61, 62, 63, 64, 65, 66, 69, 70], "exist": 58, "backward": 58, "repetit": 58, "fbedk": 58, "ndarrai": [58, 61, 62, 64, 65, 69, 70, 73, 74], "n_sampl": [58, 59, 60, 61, 62, 64, 65, 69, 70, 73, 74], "n_featur": [58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "workfolw": 58, "get_feature_typ": 58, "modelpipelin": 58, "get_model_config": 58, "configur": 58, "get_raw_data": 58, "datatupl": 58, "train_sample_weight": 58, "test_sample_weight": 58, "normalize_strategi": 58, "encode_strategi": 58, "excluded_featur": 58, "path": [58, 64, 65, 69, 70], "minmax": 58, "unit_norm": 58, "one_hot": 58, "encod": [58, 64, 65], "xndarrai": 58, "sever": [58, 69, 70], "resilience_method": 58, "psi_bucket": 58, "distance_metr": 58, "n_cluster": 58, "target_featur": 58, "threshold_ratio": 58, "regressor": [58, 60, 62, 65, 66, 70, 74], "classfier": 58, "worstcas": 58, "subsampl": 58, "exchang": 58, "bandwidth": 58, "coverag": 58, "immut": 58, "common": 58, "decid": 58, "uniform": 58, "hard": [58, 73, 74], "outer": 58, "cluster": 58, "distinguish": 58, "psi": 58, "wd1": 58, "stabil": 58, "wasserstein": 58, "kolmogorov": 58, "smirnov": 58, "rate": [58, 61, 62, 64, 65, 73, 74], "histogram": 58, "metohd": 58, "slice_featur": 58, "slice_method": 58, "min_sampl": 58, "use_test": 58, "param": [58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "confus": 58, "roc": 58, "detect": 58, "shift": 58, "un": 58, "against": 58, "brier": 58, "diagram": [58, 69, 70], "calibr": 58, "densiti": [58, 64, 65], "deviat": [58, 64, 65], "length": [58, 59, 60, 63, 64, 65, 66], "insid": 58, "outsid": 58, "weaksot": 58, "whther": 58, "testdataresult": [58, 63, 66, 69, 70], "diagnos": 58, "n_repeat": 58, "pdp_size": 58, "scatter": 58, "global_shap_fi": 58, "global_shap_summari": 58, "global_shap_scatt": 58, "local_shap": 58, "global_pdp": 58, "local_lim": 58, "global_al": 58, "metric_threshold": 58, "favorable_class": 58, "thresholding_bin": 58, "by_weight": 58, "off": 58, "cut": 58, "smd": 58, "fpr": 58, "fnr": 58, "advers": 58, "binar": 58, "predict_proba": [58, 59, 61, 63, 64, 69, 73], "dot": 58, "segement": 58, "config": 58, "rsmd": 58, "odd": 58, "glm_coef_tabl": 58, "figs_heatmap": 58, "heatmap": 58, "categorical_feature_nam": 58, "savedmodel": 58, "save": [58, 64, 65, 77], "pixgbregressor": 58, "registr": 58, "self": [58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "get_all_supported_model": 58, "model_tun": 58, "tune": [58, 64, 65], "twosample_test": 58, "bucket": 58, "string": [58, 64, 65, 69, 70], "max_bin": [59, 60], "256": [59, 60], "max_interaction_bin": [59, 60], "outer_bag": [59, 60], "inner_bag": [59, 60], "validation_s": [59, 60], "early_stopping_round": [59, 60], "early_stopping_toler": [59, 60], "max_round": [59, 60], "5000": [59, 60, 64, 65], "max_leav": [59, 60], "n_job": [59, 60, 64, 65], "releas": [59, 60], "watch": [59, 60], "changelog": [59, 60], "decision_funct": [59, 60, 61, 63, 64, 73], "arg": [59, 60, 67, 68, 71, 72], "term": [59, 60, 61, 62, 63], "explain_glob": [59, 60], "horizont": [59, 60], "explain_loc": [59, 60], "explainer_typ": [59, 60], "public": [59, 60], "face": [59, 60], "itself": [59, 60], "get_param": [59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "subobject": [59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "predict_and_contrib": [59, 60], "logit": 59, "multi": [59, 61, 64, 69, 73, 74], "harsh": [59, 61, 64, 69, 73], "correctli": [59, 61, 64, 69, 73], "n_output": [59, 60, 61, 62, 64, 65, 69, 70, 73, 74], "wrt": [59, 60, 61, 62, 64, 65, 69, 70, 73, 74], "set_param": [59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 73, 74], "simpl": [59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "nest": [59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "latter": [59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "compon": [59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "__": [59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "possibl": [59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 73, 74], "y_true": [60, 62, 65, 70, 74], "y_pred": [60, 62, 65, 70, 74], "arbitrarili": [60, 62, 65, 70, 74], "wors": [60, 62, 65, 70, 74], "disregard": [60, 62, 65, 70, 74], "precomput": [60, 62, 65, 70, 74], "n_samples_fit": [60, 62, 65, 70, 74], "multioutput": [60, 62, 65, 70, 74], "uniform_averag": [60, 62, 65, 70, 74], "r2_score": [60, 62, 65, 70, 74], "influenc": [60, 62, 65, 70, 74], "except": [60, 62, 65, 70, 74], "multioutputregressor": [60, 62, 65, 70, 74], "concis": [61, 62], "rule": [61, 62], "re": [61, 62], "imodel": [61, 62], "csinva": [61, 62], "splite": [61, 62], "leaf": [61, 62, 69, 70], "leav": [61, 62, 69, 70], "least": [61, 62, 68], "branch": [61, 62], "induc": [61, 62], "impur": [61, 62, 69, 70], "n_features_": [61, 62, 69, 70, 73, 74], "intercept_": [61, 62], "intercept": [61, 62], "trees_": [61, 62], "dictionari": [61, 62, 63, 66, 69, 70], "n_tree_": [61, 62], "n_iter_": [61, 62], "iteract": [61, 62], "early_stop_": [61, 62], "boolean": [61, 62], "earli": [61, 62, 64, 65, 73, 74], "trigger": [61, 62, 64, 65], "tree_importance_": [61, 62], "explain_tre": [61, 62], "get_tree_diag": [61, 62, 69, 70], "get_tree_heatmap": [61, 62], "global_explain": [61, 62, 64, 65], "global_interpret": [61, 62, 63, 64, 65, 66, 69, 70], "interpret_local_tre": [61, 62, 69, 70], "local_explain": [61, 62], "plot_feature_importance_heatmap": [61, 62], "plot_local_tre": [61, 62, 69, 70], "plot_tree_diag": [61, 62, 69, 70], "get_binary_matrix": [61, 62], "represent": [61, 62], "stack": [61, 62], "togeth": [61, 62, 64, 65], "get_binary_represent": [61, 62], "get_depth": [61, 62, 69, 70], "get_depths_interact": [61, 62], "pred": [61, 62, 64, 65, 73, 74], "pred_proba": [61, 64, 73], "proba": [61, 64, 69], "penalti": [63, 66], "enforc": [63, 66], "solver": [63, 66], "converg": [63, 66], "get_main_effect": [63, 64, 65, 66], "scaler": [63, 66], "callabl": [63, 66], "truncate_dict": [63, 66, 69, 70], "truncat": [63, 66, 69, 70], "long": [63, 66, 69, 70], "interpret_fi": [63, 64, 65, 66], "interpret_local_fi": [63, 64, 65, 66], "plot_fi": [63, 64, 65, 66], "interpret_result": [63, 66, 69, 70], "max_show": [63, 66], "return_fig": [63, 66, 69, 70], "plot_fi_loc": [63, 64, 65, 66], "plot_main_effect": [63, 64, 65, 66], "activation_func": [64, 65], "max_epoch": [64, 65, 73, 74], "early_stop_thr": [64, 65], "batch_size_infer": [64, 65, 73, 74], "10000": [64, 65, 73, 74], "max_iter_per_epoch": [64, 65], "val_ratio": [64, 65, 73, 74], "warm_start": [64, 65], "gam_sample_s": [64, 65], "mlp_sample_s": [64, 65], "hered": [64, 65], "reg_clar": [64, 65], "reg_mono": [64, 65], "mono_sample_s": [64, 65], "include_interaction_list": [64, 65], "boundary_clip": [64, 65], "verbos": [64, 65, 73, 74], "devic": [64, 65, 73, 74], "cpu": [64, 65, 73, 74], "meta_info": [64, 65], "n_class": [64, 65, 69], "stage": [64, 65, 73, 74], "architectur": [64, 65], "subnetwork": [64, 65], "sigmoid": [64, 65], "tanh": [64, 65], "activ": [64, 65, 73, 74], "third": [64, 65], "fine": [64, 65], "optim": [64, 65], "batch": [64, 65, 73, 74], "impos": [64, 65, 73, 74], "issu": [64, 65, 73, 74], "init": [64, 65], "clip": [64, 65], "reshuffl": [64, 65], "ratiom": [64, 65], "rough": [64, 65], "tensor": [64, 65], "teacher": [64, 65], "And": [64, 65], "sub": [64, 65], "screen": [64, 65], "toler": [64, 65], "achiv": [64, 65], "prune": [64, 65, 69, 70], "clariti": [64, 65], "uniformli": [64, 65], "spacec": [64, 65], "feature_name1": [64, 65], "feature_name2": [64, 65], "hardwar": [64, 65], "net_": [64, 65, 73, 74], "torch": [64, 65], "data_dict_density_": [64, 65], "err_train_main_effect_training_": [64, 65], "err_val_main_effect_training_": [64, 65], "err_train_interaction_training_": [64, 65], "err_val_interaction_training_": [64, 65], "err_train_tuning_": [64, 65], "err_val_tuning_": [64, 65], "interaction_list_": [64, 65], "active_main_effect_index_": [64, 65], "active_interaction_index_": [64, 65], "main_effect_val_loss_": [64, 65], "interaction_val_loss_": [64, 65], "time_cost_": [64, 65], "cost": [64, 65, 69, 70], "n_features_in_": [64, 65, 69, 70], "clarity_": [64, 65], "turn": [64, 65], "monotonicity_": [64, 65], "is_fitted_": [64, 65, 73, 74], "n_interactions_": [64, 65], "actual": [64, 65], "dummy_values_": [64, 65], "cfeature_num_": [64, 65], "nfeature_num_": [64, 65], "cfeature_names_": [64, 65], "nfeature_names_": [64, 65], "cfeature_index_list_": [64, 65], "nfeature_index_list_": [64, 65], "num_classes_list_": [64, 65], "mu_list_": [64, 65], "fix": [64, 65], "std_list_": [64, 65], "feature_names_": [64, 65], "feature_types_": [64, 65], "min_value_": [64, 65], "obtain": [64, 65], "max_value_": [64, 65], "mono_increasing_list_index_": [64, 65], "mono_decreasing_list_index_": [64, 65], "include_interaction_list_index_": [64, 65], "training_generator_": [64, 65], "fasttensordataload": [64, 65], "loader": [64, 65], "validation_generator_": [64, 65], "warm_init_main_effect_data_": [64, 65], "warm": [64, 65], "warm_init_interaction_data_": [64, 65], "main_effect_norm_": [64, 65], "varianc": [64, 65], "interaction_norm_": [64, 65], "feature_importance_": [64, 65], "data_dict_global_": [64, 65], "get_interaction_effect": [64, 65], "interpret_ei": [64, 65], "interpret_local_effect": [64, 65], "plot_ei": [64, 65], "plot_ei_loc": [64, 65], "plot_interaction_effect": [64, 65], "certify_mono": [64, 65], "certifi": [64, 65], "mono_statu": [64, 65], "main_effect": [64, 65], "softmax": [64, 73, 74], "fine_tune_select": [64, 65], "main_effect_list": [64, 65], "interaction_list": [64, 65], "lr": [64, 65], "unselect": [64, 65], "penal": [64, 65], "norm": [64, 65], "get_aggregate_output": [64, 65], "get_clarity_loss": [64, 65], "clarity_loss": [64, 65], "get_effect_import": [64, 65], "get_feature_import": [64, 65], "get_interaction_raw_output": [64, 65], "n_interact": [64, 65], "get_main_effect_raw_output": [64, 65], "get_mono_loss": [64, 65], "mono_loss": [64, 65], "main_grid_s": [64, 65], "interact_grid_s": [64, 65], "grid": [64, 65], "folder": [64, 65], "disk": [64, 65], "local_effect_explain": [64, 65], "local_feature_explain": [64, 65], "partial_deriv": [64, 65], "deriv": [64, 65], "show_effect_import": [64, 65], "xlabel_rot": [64, 65], "rotat": [64, 65], "angl": [64, 65], "show_feature_import": [64, 65], "show_global_explain": [64, 65], "main_effect_num": [64, 65], "interaction_num": [64, 65], "show_local_effect_explain": [64, 65], "show_local_feature_explain": [64, 65], "show_loss_trajectori": [64, 65], "trajectori": [64, 65], "show_regularization_path": [64, 65], "kwarg": [67, 68, 71, 72], "regularz": [67, 68], "l2_regularz": [67, 68], "inherit": 67, "ordinari": 68, "lasso": 68, "ridg": 68, "elasticnet": 68, "criterion": [69, 70], "min_samples_split": [69, 70], "min_weight_fraction_leaf": [69, 70], "max_featur": [69, 70], "max_leaf_nod": [69, 70], "ccp_alpha": [69, 70], "feature_importances_": [69, 70], "deprec": [69, 70], "check_input": [69, 70], "spars": [69, 70], "intern": [69, 70, 73, 74], "convert": [69, 70], "dtype": [69, 70], "float32": [69, 70], "csr_matrix": [69, 70], "bypass": [69, 70], "unless": [69, 70], "know": [69, 70], "what": [69, 70], "x_leav": [69, 70], "datapoint": [69, 70], "tree_": [69, 70], "node_count": [69, 70], "possibli": [69, 70], "cost_complexity_pruning_path": [69, 70], "minimal_cost_complexity_prun": [69, 70], "csc_matrix": [69, 70], "integ": [69, 70], "creat": [69, 70], "child": [69, 70], "ignor": [69, 70], "search": [69, 70], "carri": [69, 70], "ccp_path": [69, 70], "bunch": [69, 70], "subtre": [69, 70], "decision_path": [69, 70], "n_node": [69, 70], "csr": [69, 70], "goe": [69, 70], "properti": [69, 70], "reduct": [69, 70], "brought": [69, 70], "known": [69, 70], "gini": [69, 70], "warn": [69, 70], "cardin": [69, 70], "uniqu": [69, 70], "altern": [69, 70], "criteria": [69, 70], "build": [69, 70], "decisiontreeclassifi": 69, "get_n_leav": [69, 70], "n_leav": [69, 70], "useless": [69, 70], "predict_log_proba": 69, "classes_": 69, "fraction": 69, "real": 70, "float64": 70, "effici": 70, "decisiontreeregressor": 70, "sphx_glr_auto_examples_models_plot_5_dt": 70, "dropout_prob": [73, 74], "n_epoch_no_chang": [73, 74], "iht": [73, 74], "phase_epoch": [73, 74], "perceptron": [73, 74], "dropout": [73, 74], "lambda": [73, 74], "doesn": [73, 74], "early_stop": [73, 74], "cuda": [73, 74], "statit": [73, 74], "bia": [73, 74], "coefs_": [73, 74], "ith": [73, 74], "intercepts_": [73, 74], "pytorch": [73, 74], "no_improved_count_": [73, 74], "get_raw_output": [73, 74], "funciton": [73, 74], "quick": 75, "troubleshoot": 75}, "objects": {"piml": [[58, 0, 1, "", "Experiment"]], "piml.Experiment": [[58, 1, 1, "", "data_loader"], [58, 1, 1, "", "data_prepare"], [58, 1, 1, "", "data_summary"], [58, 1, 1, "", "eda"], [58, 1, 1, "", "feature_select"], [58, 1, 1, "", "get_data"], [58, 1, 1, "", "get_feature_names"], [58, 1, 1, "", "get_feature_types"], [58, 1, 1, "", "get_model"], [58, 1, 1, "", "get_model_config"], [58, 1, 1, "", "get_raw_data"], [58, 1, 1, "", "get_target_name"], [58, 1, 1, "", "make_pipeline"], [58, 1, 1, "", "model_compare"], [58, 1, 1, "", "model_diagnose"], [58, 1, 1, "", "model_explain"], [58, 1, 1, "", "model_fairness"], [58, 1, 1, "", "model_fairness_compare"], [58, 1, 1, "", "model_fairness_solas"], [58, 1, 1, "", "model_interpret"], [58, 1, 1, "", "model_save"], [58, 1, 1, "", "model_train"], [58, 1, 1, "", "model_tune"], [58, 1, 1, "", "register"], [58, 1, 1, "", "twosample_test"]], "piml.models": [[59, 0, 1, "", "ExplainableBoostingClassifier"], [60, 0, 1, "", "ExplainableBoostingRegressor"], [61, 0, 1, "", "FIGSClassifier"], [62, 0, 1, "", "FIGSRegressor"], [63, 0, 1, "", "GAMClassifier"], [64, 0, 1, "", "GAMINetClassifier"], [65, 0, 1, "", "GAMINetRegressor"], [66, 0, 1, "", "GAMRegressor"], [67, 0, 1, "", "GLMClassifier"], [68, 0, 1, "", "GLMRegressor"], [69, 0, 1, "", "PiDecisionTreeClassifier"], [70, 0, 1, "", "PiDecisionTreeRegressor"], [71, 0, 1, "", "PiXGBClassifier"], [72, 0, 1, "", "PiXGBRegressor"], [73, 0, 1, "", "ReluDNNClassifier"], [74, 0, 1, "", "ReluDNNRegressor"]], "piml.models.ExplainableBoostingClassifier": [[59, 1, 1, "", "decision_function"], [59, 1, 1, "", "explain_global"], [59, 1, 1, "", "explain_local"], [59, 2, 1, "", "explainer_type"], [59, 1, 1, "", "fit"], [59, 1, 1, "", "get_params"], [59, 1, 1, "", "predict"], [59, 1, 1, "", "predict_and_contrib"], [59, 1, 1, "", "predict_proba"], [59, 1, 1, "", "score"], [59, 1, 1, "", "set_params"]], "piml.models.ExplainableBoostingRegressor": [[60, 1, 1, "", "decision_function"], [60, 1, 1, "", "explain_global"], [60, 1, 1, "", "explain_local"], [60, 2, 1, "", "explainer_type"], [60, 1, 1, "", "fit"], [60, 1, 1, "", "get_params"], [60, 1, 1, "", "predict"], [60, 1, 1, "", "predict_and_contrib"], [60, 1, 1, "", "score"], [60, 1, 1, "", "set_params"]], "piml.models.FIGSClassifier": [[61, 1, 1, "", "decision_function"], [61, 1, 1, "", "fit"], [61, 1, 1, "", "get_binary_matrix"], [61, 1, 1, "", "get_binary_representation"], [61, 1, 1, "", "get_depths"], [61, 1, 1, "", "get_depths_interactions"], [61, 1, 1, "", "get_params"], [61, 1, 1, "", "predict"], [61, 1, 1, "", "predict_proba"], [61, 1, 1, "", "score"], [61, 1, 1, "", "set_params"]], "piml.models.FIGSRegressor": [[62, 1, 1, "", "fit"], [62, 1, 1, "", "get_binary_matrix"], [62, 1, 1, "", "get_binary_representation"], [62, 1, 1, "", "get_depths"], [62, 1, 1, "", "get_depths_interactions"], [62, 1, 1, "", "get_params"], [62, 1, 1, "", "predict"], [62, 1, 1, "", "score"], [62, 1, 1, "", "set_params"]], "piml.models.GAMClassifier": [[63, 1, 1, "", "fit"], [63, 1, 1, "", "get_main_effect"], [63, 1, 1, "", "get_params"], [63, 1, 1, "", "global_interpret"], [63, 1, 1, "", "interpret_fi"], [63, 1, 1, "", "interpret_local_fi"], [63, 1, 1, "", "plot_fi"], [63, 1, 1, "", "plot_fi_local"], [63, 1, 1, "", "plot_main_effect"], [63, 1, 1, "", "set_params"]], "piml.models.GAMINetClassifier": [[64, 1, 1, "", "certify_mono"], [64, 1, 1, "", "decision_function"], [64, 1, 1, "", "fine_tune_selected"], [64, 1, 1, "", "fit"], [64, 1, 1, "", "get_aggregate_output"], [64, 1, 1, "", "get_clarity_loss"], [64, 1, 1, "", "get_effect_importance"], [64, 1, 1, "", "get_feature_importance"], [64, 1, 1, "", "get_interaction_raw_output"], [64, 1, 1, "", "get_main_effect_raw_output"], [64, 1, 1, "", "get_mono_loss"], [64, 1, 1, "", "get_params"], [64, 1, 1, "", "global_explain"], [64, 1, 1, "", "load"], [64, 1, 1, "", "local_effect_explain"], [64, 1, 1, "", "local_feature_explain"], [64, 1, 1, "", "partial_derivatives"], [64, 1, 1, "", "predict"], [64, 1, 1, "", "predict_proba"], [64, 1, 1, "", "save"], [64, 1, 1, "", "score"], [64, 1, 1, "", "set_params"], [64, 1, 1, "", "show_effect_importance"], [64, 1, 1, "", "show_feature_importance"], [64, 1, 1, "", "show_global_explain"], [64, 1, 1, "", "show_local_effect_explain"], [64, 1, 1, "", "show_local_feature_explain"], [64, 1, 1, "", "show_loss_trajectory"], [64, 1, 1, "", "show_regularization_path"]], "piml.models.GAMINetRegressor": [[65, 1, 1, "", "certify_mono"], [65, 1, 1, "", "fine_tune_selected"], [65, 1, 1, "", "fit"], [65, 1, 1, "", "get_aggregate_output"], [65, 1, 1, "", "get_clarity_loss"], [65, 1, 1, "", "get_effect_importance"], [65, 1, 1, "", "get_feature_importance"], [65, 1, 1, "", "get_interaction_raw_output"], [65, 1, 1, "", "get_main_effect_raw_output"], [65, 1, 1, "", "get_mono_loss"], [65, 1, 1, "", "get_params"], [65, 1, 1, "", "global_explain"], [65, 1, 1, "", "load"], [65, 1, 1, "", "local_effect_explain"], [65, 1, 1, "", "local_feature_explain"], [65, 1, 1, "", "partial_derivatives"], [65, 1, 1, "", "predict"], [65, 1, 1, "", "save"], [65, 1, 1, "", "score"], [65, 1, 1, "", "set_params"], [65, 1, 1, "", "show_effect_importance"], [65, 1, 1, "", "show_feature_importance"], [65, 1, 1, "", "show_global_explain"], [65, 1, 1, "", "show_local_effect_explain"], [65, 1, 1, "", "show_local_feature_explain"], [65, 1, 1, "", "show_loss_trajectory"], [65, 1, 1, "", "show_regularization_path"]], "piml.models.GAMRegressor": [[66, 1, 1, "", "fit"], [66, 1, 1, "", "get_main_effect"], [66, 1, 1, "", "get_params"], [66, 1, 1, "", "global_interpret"], [66, 1, 1, "", "interpret_fi"], [66, 1, 1, "", "interpret_local_fi"], [66, 1, 1, "", "plot_fi"], [66, 1, 1, "", "plot_fi_local"], [66, 1, 1, "", "plot_main_effect"], [66, 1, 1, "", "set_params"]], "piml.models.PiDecisionTreeClassifier": [[69, 1, 1, "", "apply"], [69, 1, 1, "", "cost_complexity_pruning_path"], [69, 1, 1, "", "decision_path"], [69, 3, 1, "", "feature_importances_"], [69, 1, 1, "", "fit"], [69, 1, 1, "", "get_depth"], [69, 1, 1, "", "get_n_leaves"], [69, 1, 1, "", "get_params"], [69, 1, 1, "", "get_tree_diag"], [69, 1, 1, "", "global_interpret"], [69, 1, 1, "", "interpret_local_tree"], [69, 3, 1, "", "n_features_"], [69, 1, 1, "", "plot_local_tree"], [69, 1, 1, "", "plot_tree_diag"], [69, 1, 1, "", "predict"], [69, 1, 1, "", "predict_log_proba"], [69, 1, 1, "", "predict_proba"], [69, 1, 1, "", "score"], [69, 1, 1, "", "set_params"]], "piml.models.PiDecisionTreeRegressor": [[70, 1, 1, "", "apply"], [70, 1, 1, "", "cost_complexity_pruning_path"], [70, 1, 1, "", "decision_path"], [70, 3, 1, "", "feature_importances_"], [70, 1, 1, "", "fit"], [70, 1, 1, "", "get_depth"], [70, 1, 1, "", "get_n_leaves"], [70, 1, 1, "", "get_params"], [70, 1, 1, "", "get_tree_diag"], [70, 1, 1, "", "global_interpret"], [70, 1, 1, "", "interpret_local_tree"], [70, 3, 1, "", "n_features_"], [70, 1, 1, "", "plot_local_tree"], [70, 1, 1, "", "plot_tree_diag"], [70, 1, 1, "", "predict"], [70, 1, 1, "", "score"], [70, 1, 1, "", "set_params"]], "piml.models.ReluDNNClassifier": [[73, 1, 1, "", "decision_function"], [73, 1, 1, "", "fit"], [73, 1, 1, "", "get_params"], [73, 1, 1, "", "get_raw_output"], [73, 1, 1, "", "predict"], [73, 1, 1, "", "predict_proba"], [73, 1, 1, "", "score"], [73, 1, 1, "", "set_params"]], "piml.models.ReluDNNRegressor": [[74, 1, 1, "", "fit"], [74, 1, 1, "", "get_params"], [74, 1, 1, "", "get_raw_output"], [74, 1, 1, "", "predict"], [74, 1, 1, "", "score"], [74, 1, 1, "", "set_params"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"]}, "titleterms": {"data": [0, 20, 38, 39, 40, 41, 42, 45, 52, 57], "pipelin": [0, 20, 45, 57], "featur": [1, 46, 50], "select": [1, 46], "comput": [2, 9, 19, 34], "time": [2, 9, 19, 34], "outcom": [3, 20, 38, 39, 42, 55, 57], "test": [3, 20, 38, 39, 40, 41, 42, 46, 55, 57], "accuraci": 4, "regress": [4, 7, 11, 13, 22, 23, 28, 29, 33], "fair": [5, 40, 41], "perform": [5, 6], "xgb": [5, 6], "resili": 6, "robust": [7, 8], "classif": [8, 12, 14, 15, 16, 17, 18, 26, 27, 32], "post": [10, 20, 51, 57], "hoc": [10, 20, 51, 57], "explain": [10, 20, 38, 39, 42, 51, 57], "al": [11, 12, 47], "pdp": [13, 14, 49], "pfi": [15, 50], "shap": 16, "lime": 17, "ic": [18, 48], "exampl": [20, 46, 47, 48, 49, 50, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74], "interpret": [20, 21, 38, 39, 42, 54, 57], "model": [20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 38, 39, 40, 41, 42, 43, 52, 54, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "glm": [22, 23], "logist": 22, "linear": 23, "gener": [24, 25, 30, 31], "addit": [24, 25, 30, 31, 50], "decis": [26, 27], "tree": [26, 27], "fig": [28, 29], "relu": [32, 33], "dnn": [32, 33], "tabl": 35, "Of": 35, "content": 35, "frequent": 36, "ask": 36, "question": 36, "case": 37, "studi": [37, 40, 41], "bikeshar": 38, "load": [38, 39, 40, 41, 42, 52], "prepar": [38, 39, 40, 41, 42], "train": [38, 39, 40, 41, 42, 52], "intepret": [38, 39, 42], "diagnost": [38, 39, 42], "comparison": [38, 39, 41, 42, 43], "benchmark": [38, 39, 42], "californiah": 39, "simul": [40, 41], "1": [40, 47, 49], "ml": [40, 41], "": [40, 41], "2": [41, 47, 49], "descript": [41, 50], "taiwancredit": 42, "conclus": 44, "pearson": 46, "correl": 46, "distanc": 46, "import": [46, 50], "random": 46, "condit": [46, 48], "independ": 46, "rcit": 46, "forward": 46, "backward": 46, "earli": 46, "drop": 46, "fbedk": 46, "full": 46, "refer": [46, 47, 48, 49, 50, 57], "accumul": 47, "local": 47, "effect": 47, "estim": 47, "plot": [47, 49], "high": [47, 50, 57], "code": [47, 50, 57], "disadvantag": 47, "advantag": 47, "individu": 48, "expect": 48, "introduct": [48, 49, 53], "usag": [48, 49], "partial": 49, "depend": 49, "limit": 49, "bike": 49, "share": 49, "taiwan": 49, "credit": 49, "permut": 50, "algorithm": 50, "detail": 50, "mislead": 50, "valu": 50, "global": 51, "black": 52, "box": 52, "regist": 52, "save": 52, "fit": 52, "arbitrari": 52, "instal": 56, "quick": 56, "troubleshoot": 56, "api": 57, "experi": [57, 58], "class": 57, "piml": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "us": [58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74], "explainableboostingclassifi": 59, "explainableboostingregressor": 60, "figsclassifi": 61, "figsregressor": 62, "gamclassifi": 63, "gaminetclassifi": 64, "gaminetregressor": 65, "gamregressor": 66, "glmclassifi": 67, "glmregressor": 68, "pidecisiontreeclassifi": 69, "pidecisiontreeregressor": 70, "pixgbclassifi": 71, "pixgbregressor": 72, "reludnnclassifi": 73, "reludnnregressor": 74, "welcom": 75, "scikit": 75, "learn": 75, "user": 77, "guid": 77}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Data Pipeline": [[0, "data-pipeline"], [20, "data-pipeline"], [45, "data-pipeline"], [57, "data-pipeline"]], "Feature Selection": [[1, "feature-selection"], [46, "feature-selection"]], "Computation times": [[2, "computation-times"], [9, "computation-times"], [19, "computation-times"], [34, "computation-times"]], "Outcome Testing": [[3, "outcome-testing"], [20, "outcome-testing"], [55, "outcome-testing"], [57, "outcome-testing"]], "Accuracy:  Regression": [[4, "accuracy-regression"]], "Fairness - Performance: XGB": [[5, "fairness-performance-xgb"]], "Resilience - Performance: XGB": [[6, "resilience-performance-xgb"]], "Robustness:  Regression": [[7, "robustness-regression"]], "Robustness: Classification": [[8, "robustness-classification"]], "Post hoc Explainability": [[10, "post-hoc-explainability"], [20, "post-hoc-explainability"]], "ALE:  Regression": [[11, "ale-regression"]], "ALE:  Classification": [[12, "ale-classification"]], "PDP:  Regression": [[13, "pdp-regression"]], "PDP:  Classification": [[14, "pdp-classification"]], "PFI:  Classification": [[15, "pfi-classification"]], "SHAP:  Classification": [[16, "shap-classification"]], "LIME:  Classification": [[17, "lime-classification"]], "ICE:  Classification": [[18, "ice-classification"]], "Examples": [[20, "examples"], [47, "examples"], [48, "examples"], [49, "examples"]], "Interpretable Models": [[20, "interpretable-models"], [21, "interpretable-models"], [54, "interpretable-models"], [57, "interpretable-models"]], "GLM - Logistic Regression Model": [[22, "glm-logistic-regression-model"]], "GLM - Linear Regression Model": [[23, "glm-linear-regression-model"]], "Generalized Additive Model": [[24, "generalized-additive-model"], [25, "generalized-additive-model"], [30, "generalized-additive-model"], [31, "generalized-additive-model"]], "Decision Tree: Classification Tree Model": [[26, "decision-tree-classification-tree-model"], [27, "decision-tree-classification-tree-model"]], "FIGS: Regression": [[28, "figs-regression"], [29, "figs-regression"]], "ReLU DNN: Classification": [[32, "relu-dnn-classification"]], "ReLU DNN: Regression": [[33, "relu-dnn-regression"]], "Table Of Contents": [[35, "table-of-contents"]], "Frequently Asked Questions": [[36, "frequently-asked-questions"]], "Case Studies": [[37, "case-studies"]], "BikeSharing Data": [[38, "BikeSharing-Data"]], "Load and Prepare Data": [[38, "Load-and-Prepare-Data"], [39, "Load-and-Prepare-Data"], [40, "Load-and-Prepare-Data"], [42, "Load-and-Prepare-Data"]], "Train Intepretable Models": [[38, "Train-Intepretable-Models"], [39, "Train-Intepretable-Models"], [42, "Train-Intepretable-Models"]], "Interpretability and Explainability": [[38, "Interpretability-and-Explainability"], [39, "Interpretability-and-Explainability"], [42, "Interpretability-and-Explainability"]], "Model Diagnostics and Outcome Testing": [[38, "Model-Diagnostics-and-Outcome-Testing"], [39, "Model-Diagnostics-and-Outcome-Testing"], [42, "Model-Diagnostics-and-Outcome-Testing"]], "Model Comparison and Benchmarking": [[38, "Model-Comparison-and-Benchmarking"], [39, "Model-Comparison-and-Benchmarking"], [42, "Model-Comparison-and-Benchmarking"]], "CaliforniaHousing Data": [[39, "CaliforniaHousing-Data"]], "Fairness Simulation Study 1": [[40, "Fairness-Simulation-Study-1"]], "Train ML Model(s)": [[40, "Train-ML-Model(s)"], [41, "Train-ML-Model(s)"]], "Fairness Testing": [[40, "Fairness-Testing"], [41, "Fairness-Testing"]], "Fairness Simulation Study 2": [[41, "Fairness-Simulation-Study-2"]], "Data Description": [[41, "Data-Description"]], "Load and Prepare data": [[41, "Load-and-Prepare-data"]], "Fairness Testing Comparison": [[41, "Fairness-Testing-Comparison"]], "TaiwanCredit Data": [[42, "TaiwanCredit-Data"]], "Model Comparison": [[43, "model-comparison"]], "Conclusion": [[44, "conclusion"]], "Pearson Correlation": [[46, "pearson-correlation"]], "Distance Correlation": [[46, "distance-correlation"]], "Feature Importance": [[46, "feature-importance"]], "Randomized Conditional Independence Test": [[46, "randomized-conditional-independence-test"]], "RCIT Test": [[46, "rcit-test"]], "Forward-Backward selection with Early Dropping (FBEDk):": [[46, "forward-backward-selection-with-early-dropping-fbedk"]], "Full Example": [[46, "full-example"]], "Example": [[46, null], [48, null], [50, "example"], [50, null]], "References": [[46, null], [47, null], [48, null], [49, null], [50, null]], "ALE (Accumulated Local Effects)": [[47, "ale-accumulated-local-effects"]], "ALE Estimate": [[47, "ale-estimate"]], "ALE Plots": [[47, "ale-plots"]], "High-code": [[47, "high-code"], [50, "high-code"]], "Disadvantages of ALEs": [[47, "disadvantages-of-ales"]], "Advantages of ALE": [[47, "advantages-of-ale"]], "Examples 1": [[47, null]], "Examples 2": [[47, null]], "ICE (Individual Conditional Expectation)": [[48, "ice-individual-conditional-expectation"]], "Introduction": [[48, "introduction"], [49, "introduction"], [53, "introduction"]], "Usage": [[48, "usage"], [49, "usage"]], "PDP (Partial Dependence Plot)": [[49, "pdp-partial-dependence-plot"]], "Limitations of PDPs": [[49, "limitations-of-pdps"]], "Example 1: Bike Sharing": [[49, null]], "Example 2: Taiwan Credit": [[49, null]], "PFI (Permutation Feature Importance)": [[50, "pfi-permutation-feature-importance"]], "Algorithm Description": [[50, "algorithm-description"]], "Additional details and  Misleading values": [[50, "additional-details-and-misleading-values"]], "Post-hoc Explainability": [[51, "post-hoc-explainability"], [57, "post-hoc-explainability"]], "Global Explainability": [[51, "global-explainability"]], "Black-box Models": [[52, "black-box-models"]], "Train and Register Models": [[52, "train-and-register-models"]], "Save Fitted Models": [[52, "save-fitted-models"]], "Load and Register Fitted Models": [[52, "load-and-register-fitted-models"]], "Register Arbitrary Models and Data": [[52, "register-arbitrary-models-and-data"]], "Installation": [[56, "installation"]], "Quick Install": [[56, "quick-install"]], "Troubleshooting": [[56, "troubleshooting"]], "API Reference": [[57, "api-reference"]], "Experiment Class": [[57, "experiment-class"]], "High Code APIs": [[57, "high-code-apis"]], "Model Classes": [[57, "model-classes"]], "piml.Experiment": [[58, "piml-experiment"]], "Examples using piml.Experiment": [[58, "examples-using-piml-experiment"]], "piml.models.ExplainableBoostingClassifier": [[59, "piml-models-explainableboostingclassifier"]], "piml.models.ExplainableBoostingRegressor": [[60, "piml-models-explainableboostingregressor"]], "Examples using piml.models.ExplainableBoostingRegressor": [[60, "examples-using-piml-models-explainableboostingregressor"]], "piml.models.FIGSClassifier": [[61, "piml-models-figsclassifier"]], "Examples using piml.models.FIGSClassifier": [[61, "examples-using-piml-models-figsclassifier"]], "piml.models.FIGSRegressor": [[62, "piml-models-figsregressor"]], "Examples using piml.models.FIGSRegressor": [[62, "examples-using-piml-models-figsregressor"]], "piml.models.GAMClassifier": [[63, "piml-models-gamclassifier"]], "piml.models.GAMINetClassifier": [[64, "piml-models-gaminetclassifier"]], "Examples using piml.models.GAMINetClassifier": [[64, "examples-using-piml-models-gaminetclassifier"]], "piml.models.GAMINetRegressor": [[65, "piml-models-gaminetregressor"]], "Examples using piml.models.GAMINetRegressor": [[65, "examples-using-piml-models-gaminetregressor"]], "piml.models.GAMRegressor": [[66, "piml-models-gamregressor"]], "Examples using piml.models.GAMRegressor": [[66, "examples-using-piml-models-gamregressor"]], "piml.models.GLMClassifier": [[67, "piml-models-glmclassifier"]], "Examples using piml.models.GLMClassifier": [[67, "examples-using-piml-models-glmclassifier"]], "piml.models.GLMRegressor": [[68, "piml-models-glmregressor"]], "Examples using piml.models.GLMRegressor": [[68, "examples-using-piml-models-glmregressor"]], "piml.models.PiDecisionTreeClassifier": [[69, "piml-models-pidecisiontreeclassifier"]], "Examples using piml.models.PiDecisionTreeClassifier": [[69, "examples-using-piml-models-pidecisiontreeclassifier"]], "piml.models.PiDecisionTreeRegressor": [[70, "piml-models-pidecisiontreeregressor"]], "Examples using piml.models.PiDecisionTreeRegressor": [[70, "examples-using-piml-models-pidecisiontreeregressor"]], "piml.models.PiXGBClassifier": [[71, "piml-models-pixgbclassifier"]], "Examples using piml.models.PiXGBClassifier": [[71, "examples-using-piml-models-pixgbclassifier"]], "piml.models.PiXGBRegressor": [[72, "piml-models-pixgbregressor"]], "piml.models.ReluDNNClassifier": [[73, "piml-models-reludnnclassifier"]], "Examples using piml.models.ReluDNNClassifier": [[73, "examples-using-piml-models-reludnnclassifier"]], "piml.models.ReluDNNRegressor": [[74, "piml-models-reludnnregressor"]], "Examples using piml.models.ReluDNNRegressor": [[74, "examples-using-piml-models-reludnnregressor"]], "Welcome to scikit-learn": [[75, "welcome-to-scikit-learn"]], "User Guide": [[77, "user-guide"]]}, "indexentries": {"experiment (class in piml)": [[58, "piml.Experiment"]], "data_loader() (piml.experiment method)": [[58, "piml.Experiment.data_loader"]], "data_prepare() (piml.experiment method)": [[58, "piml.Experiment.data_prepare"]], "data_summary() (piml.experiment method)": [[58, "piml.Experiment.data_summary"]], "eda() (piml.experiment method)": [[58, "piml.Experiment.eda"]], "feature_select() (piml.experiment method)": [[58, "piml.Experiment.feature_select"]], "get_data() (piml.experiment method)": [[58, "piml.Experiment.get_data"]], "get_feature_names() (piml.experiment method)": [[58, "piml.Experiment.get_feature_names"]], "get_feature_types() (piml.experiment method)": [[58, "piml.Experiment.get_feature_types"]], "get_model() (piml.experiment method)": [[58, "piml.Experiment.get_model"]], "get_model_config() (piml.experiment method)": [[58, "piml.Experiment.get_model_config"]], "get_raw_data() (piml.experiment method)": [[58, "piml.Experiment.get_raw_data"]], "get_target_name() (piml.experiment method)": [[58, "piml.Experiment.get_target_name"]], "make_pipeline() (piml.experiment method)": [[58, "piml.Experiment.make_pipeline"]], "model_compare() (piml.experiment method)": [[58, "piml.Experiment.model_compare"]], "model_diagnose() (piml.experiment method)": [[58, "piml.Experiment.model_diagnose"]], "model_explain() (piml.experiment method)": [[58, "piml.Experiment.model_explain"]], "model_fairness() (piml.experiment method)": [[58, "piml.Experiment.model_fairness"]], "model_fairness_compare() (piml.experiment method)": [[58, "piml.Experiment.model_fairness_compare"]], "model_fairness_solas() (piml.experiment method)": [[58, "piml.Experiment.model_fairness_solas"]], "model_interpret() (piml.experiment method)": [[58, "piml.Experiment.model_interpret"]], "model_save() (piml.experiment method)": [[58, "piml.Experiment.model_save"]], "model_train() (piml.experiment method)": [[58, "piml.Experiment.model_train"]], "model_tune() (piml.experiment method)": [[58, "piml.Experiment.model_tune"]], "register() (piml.experiment method)": [[58, "piml.Experiment.register"]], "twosample_test() (piml.experiment method)": [[58, "piml.Experiment.twosample_test"]], "explainableboostingclassifier (class in piml.models)": [[59, "piml.models.ExplainableBoostingClassifier"]], "decision_function() (piml.models.explainableboostingclassifier method)": [[59, "piml.models.ExplainableBoostingClassifier.decision_function"]], "explain_global() (piml.models.explainableboostingclassifier method)": [[59, "piml.models.ExplainableBoostingClassifier.explain_global"]], "explain_local() (piml.models.explainableboostingclassifier method)": [[59, "piml.models.ExplainableBoostingClassifier.explain_local"]], "explainer_type (piml.models.explainableboostingclassifier attribute)": [[59, "piml.models.ExplainableBoostingClassifier.explainer_type"]], "fit() (piml.models.explainableboostingclassifier method)": [[59, "piml.models.ExplainableBoostingClassifier.fit"]], "get_params() (piml.models.explainableboostingclassifier method)": [[59, "piml.models.ExplainableBoostingClassifier.get_params"]], "predict() (piml.models.explainableboostingclassifier method)": [[59, "piml.models.ExplainableBoostingClassifier.predict"]], "predict_and_contrib() (piml.models.explainableboostingclassifier method)": [[59, "piml.models.ExplainableBoostingClassifier.predict_and_contrib"]], "predict_proba() (piml.models.explainableboostingclassifier method)": [[59, "piml.models.ExplainableBoostingClassifier.predict_proba"]], "score() (piml.models.explainableboostingclassifier method)": [[59, "piml.models.ExplainableBoostingClassifier.score"]], "set_params() (piml.models.explainableboostingclassifier method)": [[59, "piml.models.ExplainableBoostingClassifier.set_params"]], "explainableboostingregressor (class in piml.models)": [[60, "piml.models.ExplainableBoostingRegressor"]], "decision_function() (piml.models.explainableboostingregressor method)": [[60, "piml.models.ExplainableBoostingRegressor.decision_function"]], "explain_global() (piml.models.explainableboostingregressor method)": [[60, "piml.models.ExplainableBoostingRegressor.explain_global"]], "explain_local() (piml.models.explainableboostingregressor method)": [[60, "piml.models.ExplainableBoostingRegressor.explain_local"]], "explainer_type (piml.models.explainableboostingregressor attribute)": [[60, "piml.models.ExplainableBoostingRegressor.explainer_type"]], "fit() (piml.models.explainableboostingregressor method)": [[60, "piml.models.ExplainableBoostingRegressor.fit"]], "get_params() (piml.models.explainableboostingregressor method)": [[60, "piml.models.ExplainableBoostingRegressor.get_params"]], "predict() (piml.models.explainableboostingregressor method)": [[60, "piml.models.ExplainableBoostingRegressor.predict"]], "predict_and_contrib() (piml.models.explainableboostingregressor method)": [[60, "piml.models.ExplainableBoostingRegressor.predict_and_contrib"]], "score() (piml.models.explainableboostingregressor method)": [[60, "piml.models.ExplainableBoostingRegressor.score"]], "set_params() (piml.models.explainableboostingregressor method)": [[60, "piml.models.ExplainableBoostingRegressor.set_params"]], "figsclassifier (class in piml.models)": [[61, "piml.models.FIGSClassifier"]], "decision_function() (piml.models.figsclassifier method)": [[61, "piml.models.FIGSClassifier.decision_function"]], "fit() (piml.models.figsclassifier method)": [[61, "piml.models.FIGSClassifier.fit"]], "get_binary_matrix() (piml.models.figsclassifier method)": [[61, "piml.models.FIGSClassifier.get_binary_matrix"]], "get_binary_representation() (piml.models.figsclassifier method)": [[61, "piml.models.FIGSClassifier.get_binary_representation"]], "get_depths() (piml.models.figsclassifier method)": [[61, "piml.models.FIGSClassifier.get_depths"]], "get_depths_interactions() (piml.models.figsclassifier method)": [[61, "piml.models.FIGSClassifier.get_depths_interactions"]], "get_params() (piml.models.figsclassifier method)": [[61, "piml.models.FIGSClassifier.get_params"]], "predict() (piml.models.figsclassifier method)": [[61, "piml.models.FIGSClassifier.predict"]], "predict_proba() (piml.models.figsclassifier method)": [[61, "piml.models.FIGSClassifier.predict_proba"]], "score() (piml.models.figsclassifier method)": [[61, "piml.models.FIGSClassifier.score"]], "set_params() (piml.models.figsclassifier method)": [[61, "piml.models.FIGSClassifier.set_params"]], "figsregressor (class in piml.models)": [[62, "piml.models.FIGSRegressor"]], "fit() (piml.models.figsregressor method)": [[62, "piml.models.FIGSRegressor.fit"]], "get_binary_matrix() (piml.models.figsregressor method)": [[62, "piml.models.FIGSRegressor.get_binary_matrix"]], "get_binary_representation() (piml.models.figsregressor method)": [[62, "piml.models.FIGSRegressor.get_binary_representation"]], "get_depths() (piml.models.figsregressor method)": [[62, "piml.models.FIGSRegressor.get_depths"]], "get_depths_interactions() (piml.models.figsregressor method)": [[62, "piml.models.FIGSRegressor.get_depths_interactions"]], "get_params() (piml.models.figsregressor method)": [[62, "piml.models.FIGSRegressor.get_params"]], "predict() (piml.models.figsregressor method)": [[62, "piml.models.FIGSRegressor.predict"]], "score() (piml.models.figsregressor method)": [[62, "piml.models.FIGSRegressor.score"]], "set_params() (piml.models.figsregressor method)": [[62, "piml.models.FIGSRegressor.set_params"]], "gamclassifier (class in piml.models)": [[63, "piml.models.GAMClassifier"]], "fit() (piml.models.gamclassifier method)": [[63, "piml.models.GAMClassifier.fit"]], "get_main_effect() (piml.models.gamclassifier method)": [[63, "piml.models.GAMClassifier.get_main_effect"]], "get_params() (piml.models.gamclassifier method)": [[63, "piml.models.GAMClassifier.get_params"]], "global_interpret() (piml.models.gamclassifier method)": [[63, "piml.models.GAMClassifier.global_interpret"]], "interpret_fi() (piml.models.gamclassifier method)": [[63, "piml.models.GAMClassifier.interpret_fi"]], "interpret_local_fi() (piml.models.gamclassifier method)": [[63, "piml.models.GAMClassifier.interpret_local_fi"]], "plot_fi() (piml.models.gamclassifier method)": [[63, "piml.models.GAMClassifier.plot_fi"]], "plot_fi_local() (piml.models.gamclassifier method)": [[63, "piml.models.GAMClassifier.plot_fi_local"]], "plot_main_effect() (piml.models.gamclassifier method)": [[63, "piml.models.GAMClassifier.plot_main_effect"]], "set_params() (piml.models.gamclassifier method)": [[63, "piml.models.GAMClassifier.set_params"]], "gaminetclassifier (class in piml.models)": [[64, "piml.models.GAMINetClassifier"]], "certify_mono() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.certify_mono"]], "decision_function() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.decision_function"]], "fine_tune_selected() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.fine_tune_selected"]], "fit() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.fit"]], "get_aggregate_output() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.get_aggregate_output"]], "get_clarity_loss() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.get_clarity_loss"]], "get_effect_importance() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.get_effect_importance"]], "get_feature_importance() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.get_feature_importance"]], "get_interaction_raw_output() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.get_interaction_raw_output"]], "get_main_effect_raw_output() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.get_main_effect_raw_output"]], "get_mono_loss() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.get_mono_loss"]], "get_params() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.get_params"]], "global_explain() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.global_explain"]], "load() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.load"]], "local_effect_explain() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.local_effect_explain"]], "local_feature_explain() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.local_feature_explain"]], "partial_derivatives() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.partial_derivatives"]], "predict() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.predict"]], "predict_proba() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.predict_proba"]], "save() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.save"]], "score() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.score"]], "set_params() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.set_params"]], "show_effect_importance() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.show_effect_importance"]], "show_feature_importance() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.show_feature_importance"]], "show_global_explain() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.show_global_explain"]], "show_local_effect_explain() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.show_local_effect_explain"]], "show_local_feature_explain() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.show_local_feature_explain"]], "show_loss_trajectory() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.show_loss_trajectory"]], "show_regularization_path() (piml.models.gaminetclassifier method)": [[64, "piml.models.GAMINetClassifier.show_regularization_path"]], "gaminetregressor (class in piml.models)": [[65, "piml.models.GAMINetRegressor"]], "certify_mono() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.certify_mono"]], "fine_tune_selected() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.fine_tune_selected"]], "fit() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.fit"]], "get_aggregate_output() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.get_aggregate_output"]], "get_clarity_loss() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.get_clarity_loss"]], "get_effect_importance() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.get_effect_importance"]], "get_feature_importance() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.get_feature_importance"]], "get_interaction_raw_output() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.get_interaction_raw_output"]], "get_main_effect_raw_output() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.get_main_effect_raw_output"]], "get_mono_loss() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.get_mono_loss"]], "get_params() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.get_params"]], "global_explain() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.global_explain"]], "load() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.load"]], "local_effect_explain() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.local_effect_explain"]], "local_feature_explain() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.local_feature_explain"]], "partial_derivatives() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.partial_derivatives"]], "predict() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.predict"]], "save() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.save"]], "score() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.score"]], "set_params() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.set_params"]], "show_effect_importance() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.show_effect_importance"]], "show_feature_importance() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.show_feature_importance"]], "show_global_explain() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.show_global_explain"]], "show_local_effect_explain() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.show_local_effect_explain"]], "show_local_feature_explain() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.show_local_feature_explain"]], "show_loss_trajectory() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.show_loss_trajectory"]], "show_regularization_path() (piml.models.gaminetregressor method)": [[65, "piml.models.GAMINetRegressor.show_regularization_path"]], "gamregressor (class in piml.models)": [[66, "piml.models.GAMRegressor"]], "fit() (piml.models.gamregressor method)": [[66, "piml.models.GAMRegressor.fit"]], "get_main_effect() (piml.models.gamregressor method)": [[66, "piml.models.GAMRegressor.get_main_effect"]], "get_params() (piml.models.gamregressor method)": [[66, "piml.models.GAMRegressor.get_params"]], "global_interpret() (piml.models.gamregressor method)": [[66, "piml.models.GAMRegressor.global_interpret"]], "interpret_fi() (piml.models.gamregressor method)": [[66, "piml.models.GAMRegressor.interpret_fi"]], "interpret_local_fi() (piml.models.gamregressor method)": [[66, "piml.models.GAMRegressor.interpret_local_fi"]], "plot_fi() (piml.models.gamregressor method)": [[66, "piml.models.GAMRegressor.plot_fi"]], "plot_fi_local() (piml.models.gamregressor method)": [[66, "piml.models.GAMRegressor.plot_fi_local"]], "plot_main_effect() (piml.models.gamregressor method)": [[66, "piml.models.GAMRegressor.plot_main_effect"]], "set_params() (piml.models.gamregressor method)": [[66, "piml.models.GAMRegressor.set_params"]], "glmclassifier (class in piml.models)": [[67, "piml.models.GLMClassifier"]], "glmregressor (class in piml.models)": [[68, "piml.models.GLMRegressor"]], "pidecisiontreeclassifier (class in piml.models)": [[69, "piml.models.PiDecisionTreeClassifier"]], "apply() (piml.models.pidecisiontreeclassifier method)": [[69, "piml.models.PiDecisionTreeClassifier.apply"]], "cost_complexity_pruning_path() (piml.models.pidecisiontreeclassifier method)": [[69, "piml.models.PiDecisionTreeClassifier.cost_complexity_pruning_path"]], "decision_path() (piml.models.pidecisiontreeclassifier method)": [[69, "piml.models.PiDecisionTreeClassifier.decision_path"]], "feature_importances_ (piml.models.pidecisiontreeclassifier property)": [[69, "piml.models.PiDecisionTreeClassifier.feature_importances_"]], "fit() (piml.models.pidecisiontreeclassifier method)": [[69, "piml.models.PiDecisionTreeClassifier.fit"]], "get_depth() (piml.models.pidecisiontreeclassifier method)": [[69, "piml.models.PiDecisionTreeClassifier.get_depth"]], "get_n_leaves() (piml.models.pidecisiontreeclassifier method)": [[69, "piml.models.PiDecisionTreeClassifier.get_n_leaves"]], "get_params() (piml.models.pidecisiontreeclassifier method)": [[69, "piml.models.PiDecisionTreeClassifier.get_params"]], "get_tree_diag() (piml.models.pidecisiontreeclassifier method)": [[69, "piml.models.PiDecisionTreeClassifier.get_tree_diag"]], "global_interpret() (piml.models.pidecisiontreeclassifier method)": [[69, "piml.models.PiDecisionTreeClassifier.global_interpret"]], "interpret_local_tree() (piml.models.pidecisiontreeclassifier method)": [[69, "piml.models.PiDecisionTreeClassifier.interpret_local_tree"]], "n_features_ (piml.models.pidecisiontreeclassifier property)": [[69, "piml.models.PiDecisionTreeClassifier.n_features_"]], "plot_local_tree() (piml.models.pidecisiontreeclassifier method)": [[69, "piml.models.PiDecisionTreeClassifier.plot_local_tree"]], "plot_tree_diag() (piml.models.pidecisiontreeclassifier method)": [[69, "piml.models.PiDecisionTreeClassifier.plot_tree_diag"]], "predict() (piml.models.pidecisiontreeclassifier method)": [[69, "piml.models.PiDecisionTreeClassifier.predict"]], "predict_log_proba() (piml.models.pidecisiontreeclassifier method)": [[69, "piml.models.PiDecisionTreeClassifier.predict_log_proba"]], "predict_proba() (piml.models.pidecisiontreeclassifier method)": [[69, "piml.models.PiDecisionTreeClassifier.predict_proba"]], "score() (piml.models.pidecisiontreeclassifier method)": [[69, "piml.models.PiDecisionTreeClassifier.score"]], "set_params() (piml.models.pidecisiontreeclassifier method)": [[69, "piml.models.PiDecisionTreeClassifier.set_params"]], "pidecisiontreeregressor (class in piml.models)": [[70, "piml.models.PiDecisionTreeRegressor"]], "apply() (piml.models.pidecisiontreeregressor method)": [[70, "piml.models.PiDecisionTreeRegressor.apply"]], "cost_complexity_pruning_path() (piml.models.pidecisiontreeregressor method)": [[70, "piml.models.PiDecisionTreeRegressor.cost_complexity_pruning_path"]], "decision_path() (piml.models.pidecisiontreeregressor method)": [[70, "piml.models.PiDecisionTreeRegressor.decision_path"]], "feature_importances_ (piml.models.pidecisiontreeregressor property)": [[70, "piml.models.PiDecisionTreeRegressor.feature_importances_"]], "fit() (piml.models.pidecisiontreeregressor method)": [[70, "piml.models.PiDecisionTreeRegressor.fit"]], "get_depth() (piml.models.pidecisiontreeregressor method)": [[70, "piml.models.PiDecisionTreeRegressor.get_depth"]], "get_n_leaves() (piml.models.pidecisiontreeregressor method)": [[70, "piml.models.PiDecisionTreeRegressor.get_n_leaves"]], "get_params() (piml.models.pidecisiontreeregressor method)": [[70, "piml.models.PiDecisionTreeRegressor.get_params"]], "get_tree_diag() (piml.models.pidecisiontreeregressor method)": [[70, "piml.models.PiDecisionTreeRegressor.get_tree_diag"]], "global_interpret() (piml.models.pidecisiontreeregressor method)": [[70, "piml.models.PiDecisionTreeRegressor.global_interpret"]], "interpret_local_tree() (piml.models.pidecisiontreeregressor method)": [[70, "piml.models.PiDecisionTreeRegressor.interpret_local_tree"]], "n_features_ (piml.models.pidecisiontreeregressor property)": [[70, "piml.models.PiDecisionTreeRegressor.n_features_"]], "plot_local_tree() (piml.models.pidecisiontreeregressor method)": [[70, "piml.models.PiDecisionTreeRegressor.plot_local_tree"]], "plot_tree_diag() (piml.models.pidecisiontreeregressor method)": [[70, "piml.models.PiDecisionTreeRegressor.plot_tree_diag"]], "predict() (piml.models.pidecisiontreeregressor method)": [[70, "piml.models.PiDecisionTreeRegressor.predict"]], "score() (piml.models.pidecisiontreeregressor method)": [[70, "piml.models.PiDecisionTreeRegressor.score"]], "set_params() (piml.models.pidecisiontreeregressor method)": [[70, "piml.models.PiDecisionTreeRegressor.set_params"]], "pixgbclassifier (class in piml.models)": [[71, "piml.models.PiXGBClassifier"]], "pixgbregressor (class in piml.models)": [[72, "piml.models.PiXGBRegressor"]], "reludnnclassifier (class in piml.models)": [[73, "piml.models.ReluDNNClassifier"]], "decision_function() (piml.models.reludnnclassifier method)": [[73, "piml.models.ReluDNNClassifier.decision_function"]], "fit() (piml.models.reludnnclassifier method)": [[73, "piml.models.ReluDNNClassifier.fit"]], "get_params() (piml.models.reludnnclassifier method)": [[73, "piml.models.ReluDNNClassifier.get_params"]], "get_raw_output() (piml.models.reludnnclassifier method)": [[73, "piml.models.ReluDNNClassifier.get_raw_output"]], "predict() (piml.models.reludnnclassifier method)": [[73, "piml.models.ReluDNNClassifier.predict"]], "predict_proba() (piml.models.reludnnclassifier method)": [[73, "piml.models.ReluDNNClassifier.predict_proba"]], "score() (piml.models.reludnnclassifier method)": [[73, "piml.models.ReluDNNClassifier.score"]], "set_params() (piml.models.reludnnclassifier method)": [[73, "piml.models.ReluDNNClassifier.set_params"]], "reludnnregressor (class in piml.models)": [[74, "piml.models.ReluDNNRegressor"]], "fit() (piml.models.reludnnregressor method)": [[74, "piml.models.ReluDNNRegressor.fit"]], "get_params() (piml.models.reludnnregressor method)": [[74, "piml.models.ReluDNNRegressor.get_params"]], "get_raw_output() (piml.models.reludnnregressor method)": [[74, "piml.models.ReluDNNRegressor.get_raw_output"]], "predict() (piml.models.reludnnregressor method)": [[74, "piml.models.ReluDNNRegressor.predict"]], "score() (piml.models.reludnnregressor method)": [[74, "piml.models.ReluDNNRegressor.score"]], "set_params() (piml.models.reludnnregressor method)": [[74, "piml.models.ReluDNNRegressor.set_params"]]}})