Search.setIndex({"docnames": ["auto_examples/data/index", "auto_examples/data/plot_0_data_loader_builtin", "auto_examples/data/plot_0_data_loader_dataframe", "auto_examples/data/plot_0_data_loader_spark", "auto_examples/data/plot_1_data_summary", "auto_examples/data/plot_2_data_eda", "auto_examples/data/plot_3_data_prepare", "auto_examples/data/plot_4_data_quality", "auto_examples/data/plot_5_feature_select", "auto_examples/data/plot_6_twosample_test", "auto_examples/data/sg_execution_times", "auto_examples/explain/index", "auto_examples/explain/plot_0_pfi", "auto_examples/explain/plot_1_pdp", "auto_examples/explain/plot_1_pdp_hstats", "auto_examples/explain/plot_2_ice", "auto_examples/explain/plot_3_ale", "auto_examples/explain/plot_4_lime", "auto_examples/explain/plot_5_shap", "auto_examples/explain/plot_6_data_dependent_explain", "auto_examples/explain/sg_execution_times", "auto_examples/index", "auto_examples/models/index", "auto_examples/models/plot_0_glm_cls", "auto_examples/models/plot_0_glm_reg", "auto_examples/models/plot_1_gam_cls", "auto_examples/models/plot_1_gam_reg", "auto_examples/models/plot_2_tree_cls", "auto_examples/models/plot_2_tree_reg", "auto_examples/models/plot_3_figs_cls", "auto_examples/models/plot_3_figs_reg", "auto_examples/models/plot_4_xgb1_cls", "auto_examples/models/plot_4_xgb1_reg", "auto_examples/models/plot_5_xgb2_cls", "auto_examples/models/plot_5_xgb2_reg", "auto_examples/models/plot_6_ebm_cls", "auto_examples/models/plot_6_ebm_reg", "auto_examples/models/plot_7_gaminet_cls", "auto_examples/models/plot_7_gaminet_reg", "auto_examples/models/plot_8_reludnn_cls", "auto_examples/models/plot_8_reludnn_reg", "auto_examples/models/sg_execution_times", "auto_examples/models_hpo/index", "auto_examples/models_hpo/plot_0_grid", "auto_examples/models_hpo/plot_0_random", "auto_examples/models_hpo/sg_execution_times", "auto_examples/testing/index", "auto_examples/testing/plot_0_accuracy_cls", "auto_examples/testing/plot_0_accuracy_reg", "auto_examples/testing/plot_1_weakspot_cls", "auto_examples/testing/plot_1_weakspot_reg", "auto_examples/testing/plot_2_overfit_cls", "auto_examples/testing/plot_2_overfit_reg", "auto_examples/testing/plot_3_reliability_cls", "auto_examples/testing/plot_3_reliability_reg", "auto_examples/testing/plot_4_robustness_cls", "auto_examples/testing/plot_4_robustness_reg", "auto_examples/testing/plot_5_resilience_cls", "auto_examples/testing/plot_5_resilience_reg", "auto_examples/testing/plot_6_fairness", "auto_examples/testing/sg_execution_times", "auto_examples/testing_compare/index", "auto_examples/testing_compare/plot_0_compare_classification", "auto_examples/testing_compare/plot_0_compare_regression", "auto_examples/testing_compare/plot_1_compare_fairness", "auto_examples/testing_compare/sg_execution_times", "auto_examples/testing_external/index", "auto_examples/testing_external/plot_0_model_train", "auto_examples/testing_external/plot_1_register_arbitrary", "auto_examples/testing_external/plot_1_register_h2o", "auto_examples/testing_external/plot_1_register_sklearn", "auto_examples/testing_external/plot_2_test_wo_model_cls", "auto_examples/testing_external/plot_2_test_wo_model_reg", "auto_examples/testing_external/sg_execution_times", "auto_examples/testing_segmented/index", "auto_examples/testing_segmented/plot_0_classification", "auto_examples/testing_segmented/plot_0_regression", "auto_examples/testing_segmented/sg_execution_times", "contents", "faq", "guides/cases", "guides/cases/Example_BikeSharing", "guides/cases/Example_CaliforniaHousing", "guides/cases/Example_Fairness_SimuStudy1", "guides/cases/Example_Fairness_SimuStudy2", "guides/cases/Example_TaiwanCredit", "guides/comparison", "guides/comparison/compare_classification", "guides/comparison/compare_fairness", "guides/comparison/compare_regression", "guides/data", "guides/data/data_eda", "guides/data/data_load", "guides/data/data_prepare", "guides/data/data_quality", "guides/data/data_summary", "guides/data/feature_select", "guides/data/twosample_test", "guides/explain/ale", "guides/explain/ice", "guides/explain/lime", "guides/explain/pdp", "guides/explain/pfi", "guides/explain/shap", "guides/explainability", "guides/extmodels", "guides/introduction", "guides/models", "guides/models/ebm", "guides/models/figs", "guides/models/gam", "guides/models/gaminet", "guides/models/glm", "guides/models/reludnn", "guides/models/tree", "guides/models/xgb1", "guides/models/xgb2", "guides/testing", "guides/testing/accuracy", "guides/testing/fairness", "guides/testing/overfit", "guides/testing/reliability", "guides/testing/resilience", "guides/testing/robustness", "guides/testing/weakspot", "install", "modules/classes", "modules/generated/piml.Experiment", "modules/generated/piml.data.outlier_detection.CBLOF", "modules/generated/piml.data.outlier_detection.ECOD", "modules/generated/piml.data.outlier_detection.HBOS", "modules/generated/piml.data.outlier_detection.IsolationForest", "modules/generated/piml.data.outlier_detection.KMeansTree", "modules/generated/piml.data.outlier_detection.KNN", "modules/generated/piml.data.outlier_detection.OneClassSVM", "modules/generated/piml.data.outlier_detection.PCA", "modules/generated/piml.models.ExplainableBoostingClassifier", "modules/generated/piml.models.ExplainableBoostingRegressor", "modules/generated/piml.models.FIGSClassifier", "modules/generated/piml.models.FIGSRegressor", "modules/generated/piml.models.GAMClassifier", "modules/generated/piml.models.GAMINetClassifier", "modules/generated/piml.models.GAMINetRegressor", "modules/generated/piml.models.GAMRegressor", "modules/generated/piml.models.GLMClassifier", "modules/generated/piml.models.GLMRegressor", "modules/generated/piml.models.ReluDNNClassifier", "modules/generated/piml.models.ReluDNNRegressor", "modules/generated/piml.models.TreeClassifier", "modules/generated/piml.models.TreeRegressor", "modules/generated/piml.models.XGB1Classifier", "modules/generated/piml.models.XGB1Regressor", "modules/generated/piml.models.XGB2Classifier", "modules/generated/piml.models.XGB2Regressor", "modules/generated/piml.scored_test.test_accuracy_plot", "modules/generated/piml.scored_test.test_accuracy_residual", "modules/generated/piml.scored_test.test_accuracy_table", "modules/generated/piml.scored_test.test_overfit", "modules/generated/piml.scored_test.test_reliability_calibration", "modules/generated/piml.scored_test.test_reliability_distance", "modules/generated/piml.scored_test.test_reliability_marginal", "modules/generated/piml.scored_test.test_reliability_perf", "modules/generated/piml.scored_test.test_reliability_table", "modules/generated/piml.scored_test.test_resilience_distance", "modules/generated/piml.scored_test.test_resilience_perf", "modules/generated/piml.scored_test.test_resilience_shift_density", "modules/generated/piml.scored_test.test_resilience_shift_histogram", "modules/generated/piml.scored_test.test_weakspot", "preface", "tune_toc", "user_guide"], "filenames": ["auto_examples\\data\\index.rst", "auto_examples\\data\\plot_0_data_loader_builtin.rst", "auto_examples\\data\\plot_0_data_loader_dataframe.rst", "auto_examples\\data\\plot_0_data_loader_spark.rst", "auto_examples\\data\\plot_1_data_summary.rst", "auto_examples\\data\\plot_2_data_eda.rst", "auto_examples\\data\\plot_3_data_prepare.rst", "auto_examples\\data\\plot_4_data_quality.rst", "auto_examples\\data\\plot_5_feature_select.rst", "auto_examples\\data\\plot_6_twosample_test.rst", "auto_examples\\data\\sg_execution_times.rst", "auto_examples\\explain\\index.rst", "auto_examples\\explain\\plot_0_pfi.rst", "auto_examples\\explain\\plot_1_pdp.rst", "auto_examples\\explain\\plot_1_pdp_hstats.rst", "auto_examples\\explain\\plot_2_ice.rst", "auto_examples\\explain\\plot_3_ale.rst", "auto_examples\\explain\\plot_4_lime.rst", "auto_examples\\explain\\plot_5_shap.rst", "auto_examples\\explain\\plot_6_data_dependent_explain.rst", "auto_examples\\explain\\sg_execution_times.rst", "auto_examples\\index.rst", "auto_examples\\models\\index.rst", "auto_examples\\models\\plot_0_glm_cls.rst", "auto_examples\\models\\plot_0_glm_reg.rst", "auto_examples\\models\\plot_1_gam_cls.rst", "auto_examples\\models\\plot_1_gam_reg.rst", "auto_examples\\models\\plot_2_tree_cls.rst", "auto_examples\\models\\plot_2_tree_reg.rst", "auto_examples\\models\\plot_3_figs_cls.rst", "auto_examples\\models\\plot_3_figs_reg.rst", "auto_examples\\models\\plot_4_xgb1_cls.rst", "auto_examples\\models\\plot_4_xgb1_reg.rst", "auto_examples\\models\\plot_5_xgb2_cls.rst", "auto_examples\\models\\plot_5_xgb2_reg.rst", "auto_examples\\models\\plot_6_ebm_cls.rst", "auto_examples\\models\\plot_6_ebm_reg.rst", "auto_examples\\models\\plot_7_gaminet_cls.rst", "auto_examples\\models\\plot_7_gaminet_reg.rst", "auto_examples\\models\\plot_8_reludnn_cls.rst", "auto_examples\\models\\plot_8_reludnn_reg.rst", "auto_examples\\models\\sg_execution_times.rst", "auto_examples\\models_hpo\\index.rst", "auto_examples\\models_hpo\\plot_0_grid.rst", "auto_examples\\models_hpo\\plot_0_random.rst", "auto_examples\\models_hpo\\sg_execution_times.rst", "auto_examples\\testing\\index.rst", "auto_examples\\testing\\plot_0_accuracy_cls.rst", "auto_examples\\testing\\plot_0_accuracy_reg.rst", "auto_examples\\testing\\plot_1_weakspot_cls.rst", "auto_examples\\testing\\plot_1_weakspot_reg.rst", "auto_examples\\testing\\plot_2_overfit_cls.rst", "auto_examples\\testing\\plot_2_overfit_reg.rst", "auto_examples\\testing\\plot_3_reliability_cls.rst", "auto_examples\\testing\\plot_3_reliability_reg.rst", "auto_examples\\testing\\plot_4_robustness_cls.rst", "auto_examples\\testing\\plot_4_robustness_reg.rst", "auto_examples\\testing\\plot_5_resilience_cls.rst", "auto_examples\\testing\\plot_5_resilience_reg.rst", "auto_examples\\testing\\plot_6_fairness.rst", "auto_examples\\testing\\sg_execution_times.rst", "auto_examples\\testing_compare\\index.rst", "auto_examples\\testing_compare\\plot_0_compare_classification.rst", "auto_examples\\testing_compare\\plot_0_compare_regression.rst", "auto_examples\\testing_compare\\plot_1_compare_fairness.rst", "auto_examples\\testing_compare\\sg_execution_times.rst", "auto_examples\\testing_external\\index.rst", "auto_examples\\testing_external\\plot_0_model_train.rst", "auto_examples\\testing_external\\plot_1_register_arbitrary.rst", "auto_examples\\testing_external\\plot_1_register_h2o.rst", "auto_examples\\testing_external\\plot_1_register_sklearn.rst", "auto_examples\\testing_external\\plot_2_test_wo_model_cls.rst", "auto_examples\\testing_external\\plot_2_test_wo_model_reg.rst", "auto_examples\\testing_external\\sg_execution_times.rst", "auto_examples\\testing_segmented\\index.rst", "auto_examples\\testing_segmented\\plot_0_classification.rst", "auto_examples\\testing_segmented\\plot_0_regression.rst", "auto_examples\\testing_segmented\\sg_execution_times.rst", "contents.rst", "faq.rst", "guides\\cases.rst", "guides\\cases\\Example_BikeSharing.ipynb", "guides\\cases\\Example_CaliforniaHousing.ipynb", "guides\\cases\\Example_Fairness_SimuStudy1.ipynb", "guides\\cases\\Example_Fairness_SimuStudy2.ipynb", "guides\\cases\\Example_TaiwanCredit.ipynb", "guides\\comparison.rst", "guides\\comparison\\compare_classification.rst", "guides\\comparison\\compare_fairness.rst", "guides\\comparison\\compare_regression.rst", "guides\\data.rst", "guides\\data\\data_eda.rst", "guides\\data\\data_load.rst", "guides\\data\\data_prepare.rst", "guides\\data\\data_quality.rst", "guides\\data\\data_summary.rst", "guides\\data\\feature_select.rst", "guides\\data\\twosample_test.rst", "guides\\explain\\ale.rst", "guides\\explain\\ice.rst", "guides\\explain\\lime.rst", "guides\\explain\\pdp.rst", "guides\\explain\\pfi.rst", "guides\\explain\\shap.rst", "guides\\explainability.rst", "guides\\extmodels.rst", "guides\\introduction.rst", "guides\\models.rst", "guides\\models\\ebm.rst", "guides\\models\\figs.rst", "guides\\models\\gam.rst", "guides\\models\\gaminet.rst", "guides\\models\\glm.rst", "guides\\models\\reludnn.rst", "guides\\models\\tree.rst", "guides\\models\\xgb1.rst", "guides\\models\\xgb2.rst", "guides\\testing.rst", "guides\\testing\\accuracy.rst", "guides\\testing\\fairness.rst", "guides\\testing\\overfit.rst", "guides\\testing\\reliability.rst", "guides\\testing\\resilience.rst", "guides\\testing\\robustness.rst", "guides\\testing\\weakspot.rst", "install.rst", "modules\\classes.rst", "modules\\generated\\piml.Experiment.rst", "modules\\generated\\piml.data.outlier_detection.CBLOF.rst", "modules\\generated\\piml.data.outlier_detection.ECOD.rst", "modules\\generated\\piml.data.outlier_detection.HBOS.rst", "modules\\generated\\piml.data.outlier_detection.IsolationForest.rst", "modules\\generated\\piml.data.outlier_detection.KMeansTree.rst", "modules\\generated\\piml.data.outlier_detection.KNN.rst", "modules\\generated\\piml.data.outlier_detection.OneClassSVM.rst", "modules\\generated\\piml.data.outlier_detection.PCA.rst", "modules\\generated\\piml.models.ExplainableBoostingClassifier.rst", "modules\\generated\\piml.models.ExplainableBoostingRegressor.rst", "modules\\generated\\piml.models.FIGSClassifier.rst", "modules\\generated\\piml.models.FIGSRegressor.rst", "modules\\generated\\piml.models.GAMClassifier.rst", "modules\\generated\\piml.models.GAMINetClassifier.rst", "modules\\generated\\piml.models.GAMINetRegressor.rst", "modules\\generated\\piml.models.GAMRegressor.rst", "modules\\generated\\piml.models.GLMClassifier.rst", "modules\\generated\\piml.models.GLMRegressor.rst", "modules\\generated\\piml.models.ReluDNNClassifier.rst", "modules\\generated\\piml.models.ReluDNNRegressor.rst", "modules\\generated\\piml.models.TreeClassifier.rst", "modules\\generated\\piml.models.TreeRegressor.rst", "modules\\generated\\piml.models.XGB1Classifier.rst", "modules\\generated\\piml.models.XGB1Regressor.rst", "modules\\generated\\piml.models.XGB2Classifier.rst", "modules\\generated\\piml.models.XGB2Regressor.rst", "modules\\generated\\piml.scored_test.test_accuracy_plot.rst", "modules\\generated\\piml.scored_test.test_accuracy_residual.rst", "modules\\generated\\piml.scored_test.test_accuracy_table.rst", "modules\\generated\\piml.scored_test.test_overfit.rst", "modules\\generated\\piml.scored_test.test_reliability_calibration.rst", "modules\\generated\\piml.scored_test.test_reliability_distance.rst", "modules\\generated\\piml.scored_test.test_reliability_marginal.rst", "modules\\generated\\piml.scored_test.test_reliability_perf.rst", "modules\\generated\\piml.scored_test.test_reliability_table.rst", "modules\\generated\\piml.scored_test.test_resilience_distance.rst", "modules\\generated\\piml.scored_test.test_resilience_perf.rst", "modules\\generated\\piml.scored_test.test_resilience_shift_density.rst", "modules\\generated\\piml.scored_test.test_resilience_shift_histogram.rst", "modules\\generated\\piml.scored_test.test_weakspot.rst", "preface.rst", "tune_toc.rst", "user_guide.rst"], "titles": ["Data Pipeline", "Data Load (Built-in Dataset)", "Data Load (Pandas DataFrame)", "Data Load (Pandas DataFrame)", "Data Summary", "EDA", "Data Preparation", "Data Quality Check", "Feature Selection", "Two Sample Test", "Computation times", "Post hoc Explainability", "Permutation Feature Importance", "Partial Dependence Plot", "H-statistics", "Individual Conditional Expectation", "Accumulated Local Effects", "Local Interpretable Model-Agnostic Explanation", "SHapley Additive exPlanations", "Data Dependent Explanation", "Computation times", "Examples", "Interpretable Models", "GLM Logistic Regression (Taiwan Credit)", "GLM Linear Regression (Bike Sharing)", "GAM Classification (CoCircles)", "GAM Regression (California Housing)", "Tree Classification (TaiwanCredit)", "Tree Regression (California Housing)", "FIGS Classification (Taiwan Credit)", "FIGS Regression (California Housing)", "XGB-1 Classification (CoCircles)", "XGB-1 Regression (California Housing)", "XGB-2 Classification (Taiwan Credit)", "XGB-2 Regression (Bike Sharing)", "EBM Classification (Taiwan Credit)", "EBM Regression (Bike Sharing)", "GAMI-Net Classification (Taiwan Credit)", "GAMI-Net Regression (Bike Sharing)", "ReLU DNN Classification (Taiwan Credit)", "ReLU DNN Regression (Friedman)", "Computation times", "Hyperparameter Optimization", "HPO - XGB - Grid Search (Bike Sharing)", "HPO - GLM - Random Search (SimuCredit)", "Computation times", "Outcome Testing", "Accuracy: Classification", "Accuracy: Regression", "WeakSpot: Classification", "WeakSpot: Regression", "Overfit: Classification", "Overfit: Regression", "Reliability: Classification", "Reliability: Regression", "Robustness: Classification", "Robustness:  Regression", "Resilience:  Classification", "Resilience - Regression", "Fairness Test: XGB2", "Computation times", "Model Comparison", "Model Comparison: Classification", "Model Comparison: Regression", "Fairness Comparison", "Computation times", "Training and Testing External Models", "Train External Models", "Registering Arbitrary Models", "Registering H2O Models", "Registering sklearn Style Models", "Scored Test (Classification)", "Scored Test (Regression)", "Computation times", "Model Segmented Diagnosics", "Segmented Diagnose (Classification)", "Segmented Diagnose (Regression)", "Computation times", "Table Of Contents", "Frequently Asked Questions", "<span class=\"section-number\">8. </span>Case Studies", "<span class=\"section-number\">8.1. </span>BikeSharing Data", "<span class=\"section-number\">8.2. </span>CaliforniaHousing Data", "<span class=\"section-number\">8.4. </span>Fairness Simulation Study 1", "<span class=\"section-number\">8.5. </span>Fairness Simulation Study 2", "<span class=\"section-number\">8.3. </span>TaiwanCredit Data", "<span class=\"section-number\">7. </span>Model Comparison", "<span class=\"section-number\">7.2. </span>Comparison for Classification", "<span class=\"section-number\">7.3. </span>Fairness Comparison", "<span class=\"section-number\">7.1. </span>Comparison for Regression", "<span class=\"section-number\">2. </span>Data Pipeline", "<span class=\"section-number\">2.4. </span>Exploratory Analysis", "<span class=\"section-number\">2.1. </span>Data Load", "<span class=\"section-number\">2.3. </span>Data Preparation", "<span class=\"section-number\">2.5. </span>Data Quality", "<span class=\"section-number\">2.2. </span>Data Summary", "<span class=\"section-number\">2.6. </span>Feature Selection", "<span class=\"section-number\">2.7. </span>Two Sample Test", "<span class=\"section-number\">4.1.4. </span>ALE (Accumulated Local Effects)", "<span class=\"section-number\">4.1.3. </span>ICE (Individual Conditional Expectation)", "<span class=\"section-number\">4.2.1. </span>LIME (Local Interpretable Model-Agnostic Explanation)", "<span class=\"section-number\">4.1.2. </span>PDP (Partial Dependence Plot)", "<span class=\"section-number\">4.1.1. </span>PFI (Permutation Feature Importance)", "<span class=\"section-number\">4.2.2. </span>SHAP (SHapley Additive exPlanations)", "<span class=\"section-number\">4. </span>Post-hoc Explainability", "<span class=\"section-number\">3. </span>Black-box Models", "<span class=\"section-number\">1. </span>Introduction", "<span class=\"section-number\">5. </span>Interpretable Models", "<span class=\"section-number\">5.7. </span>Explainable Boosting Machines", "<span class=\"section-number\">5.4. </span>Fast Interpretable Greedy-tree Sums", "<span class=\"section-number\">5.2. </span>Generalized Additive Model", "<span class=\"section-number\">5.8. </span>GAMI-Net", "<span class=\"section-number\">5.1. </span>Generalized Linear Models", "<span class=\"section-number\">5.9. </span>ReLU Neural Network", "<span class=\"section-number\">5.3. </span>Decision Tree", "<span class=\"section-number\">5.5. </span>XGBoost Depth 1", "<span class=\"section-number\">5.6. </span>XGBoost Depth 2", "<span class=\"section-number\">6. </span>Diagnostic Suite", "<span class=\"section-number\">6.1. </span>Accuracy", "<span class=\"section-number\">6.7. </span>Fairness", "<span class=\"section-number\">6.3. </span>Overfit", "<span class=\"section-number\">6.4. </span>Reliability", "<span class=\"section-number\">6.6. </span>Resilience", "<span class=\"section-number\">6.5. </span>Robustness", "<span class=\"section-number\">6.2. </span>WeakSpot", "Installation", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml</span></code>.Experiment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.data.outlier_detection</span></code>.CBLOF", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.data.outlier_detection</span></code>.ECOD", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.data.outlier_detection</span></code>.HBOS", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.data.outlier_detection</span></code>.IsolationForest", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.data.outlier_detection</span></code>.KMeansTree", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.data.outlier_detection</span></code>.KNN", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.data.outlier_detection</span></code>.OneClassSVM", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.data.outlier_detection</span></code>.PCA", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.ExplainableBoostingClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.ExplainableBoostingRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.FIGSClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.FIGSRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.GAMClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.GAMINetClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.GAMINetRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.GAMRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.GLMClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.GLMRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.ReluDNNClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.ReluDNNRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.TreeClassifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.TreeRegressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.XGB1Classifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.XGB1Regressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.XGB2Classifier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.models</span></code>.XGB2Regressor", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.scored_test</span></code>.test_accuracy_plot", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.scored_test</span></code>.test_accuracy_residual", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.scored_test</span></code>.test_accuracy_table", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.scored_test</span></code>.test_overfit", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.scored_test</span></code>.test_reliability_calibration", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.scored_test</span></code>.test_reliability_distance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.scored_test</span></code>.test_reliability_marginal", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.scored_test</span></code>.test_reliability_perf", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.scored_test</span></code>.test_reliability_table", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.scored_test</span></code>.test_resilience_distance", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.scored_test</span></code>.test_resilience_perf", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.scored_test</span></code>.test_resilience_shift_density", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.scored_test</span></code>.test_resilience_shift_histogram", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">piml.scored_test</span></code>.test_weakspot", "Welcome to PiML", "&lt;no title&gt;", "User guide: contents"], "terms": {"load": [0, 10, 21, 51, 67, 69, 70, 71, 72, 80, 87, 90, 95, 106, 108, 112, 116, 118, 120, 121, 123, 124, 127, 141, 142, 170], "built": [0, 8, 10, 21, 90, 96, 103, 113, 127, 132], "dataset": [0, 2, 4, 5, 6, 7, 8, 10, 21, 68, 69, 70, 71, 72, 81, 82, 83, 84, 85, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127, 141, 142, 146, 147], "panda": [0, 7, 10, 21, 69, 75, 76, 125, 127], "datafram": [0, 10, 21, 69, 127], "summari": [0, 10, 18, 21, 39, 40, 75, 76, 90, 109, 118, 123, 124, 127, 170], "eda": [0, 10, 21, 81, 82, 83, 84, 85, 91, 106, 127], "prepar": [0, 1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 71, 72, 75, 76, 80, 90, 94, 102, 105, 110, 113, 114, 127, 170], "qualiti": [0, 10, 21, 90, 106, 119, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 148, 149, 170], "check": [0, 10, 21, 68, 69, 70, 81, 82, 84, 89, 94, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "featur": [0, 4, 7, 9, 10, 11, 14, 18, 20, 21, 23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 71, 72, 75, 76, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 104, 106, 114, 118, 119, 120, 121, 122, 124, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170], "select": [0, 7, 10, 21, 43, 44, 75, 76, 83, 84, 87, 89, 90, 93, 94, 98, 111, 113, 114, 115, 118, 122, 123, 124, 127, 130, 131, 135, 136, 137, 141, 142, 148, 149, 157, 163, 164, 165, 166, 167, 170], "two": [0, 10, 21, 39, 40, 49, 50, 51, 52, 84, 88, 90, 91, 92, 93, 94, 95, 96, 99, 100, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 123, 127, 132, 133, 170], "sampl": [0, 3, 6, 7, 10, 21, 55, 56, 57, 58, 62, 63, 67, 71, 72, 75, 76, 81, 82, 84, 90, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 157, 159, 163, 164, 165, 166, 167, 170], "test": [0, 6, 7, 8, 10, 13, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 55, 56, 60, 67, 68, 69, 70, 73, 75, 78, 79, 80, 87, 89, 90, 92, 98, 99, 100, 101, 102, 103, 106, 112, 118, 119, 120, 121, 122, 124, 127, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170], "go": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76], "end": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 96, 97, 98, 99, 101, 103, 106, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 121, 148, 149], "download": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76], "full": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 88, 91, 92, 93, 94, 95, 96, 97, 98, 100, 106, 108, 110, 111, 112, 113, 115, 116, 119, 121, 123, 126, 127, 135], "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 80, 81, 82, 83, 84, 85, 86, 90, 104, 106, 107, 117, 170], "code": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 80, 81, 82, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127], "run": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 81, 82, 83, 84, 85, 96, 106, 120, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 148, 149, 170], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 163, 165, 166], "your": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 84, 92, 93, 95, 115, 122, 125], "browser": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76], "via": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 92, 96, 108, 113, 116, 127, 132, 135, 136, 137], "binder": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76], "experi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 75, 76, 79, 81, 82, 83, 84, 85, 92, 96, 105, 106, 119, 123, 125], "initi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 75, 76, 96, 105, 106, 115, 119, 124, 127, 136, 137, 141, 142, 146, 147], "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 147, 149, 150, 151, 153], "piml": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126], "import": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 81, 82, 83, 84, 85, 87, 88, 89, 90, 93, 94, 104, 105, 106, 114, 118, 121, 122, 123, 124, 127, 141, 142, 148, 149], "exp": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 75, 76, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127], "data_load": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 75, 76, 81, 82, 83, 84, 85, 92, 105, 106, 127], "cocircl": [1, 21, 22, 41, 92, 127, 150], "x0": [1, 3, 14, 25, 31, 40, 68, 92, 115, 127], "x1": [1, 3, 14, 25, 31, 68, 71, 83, 92, 115, 127], "target": [1, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 69, 70, 71, 72, 75, 76, 84, 87, 89, 92, 93, 97, 98, 101, 102, 105, 112, 115, 118, 123, 127, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "0": [1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 82, 84, 85, 87, 88, 89, 92, 93, 94, 95, 96, 98, 100, 101, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "783526": [1, 92], "502161": [1, 92], "1": [1, 2, 3, 6, 7, 8, 10, 12, 13, 14, 17, 21, 22, 23, 24, 26, 28, 29, 30, 39, 40, 41, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 67, 68, 69, 71, 72, 75, 76, 80, 81, 82, 84, 85, 88, 93, 94, 95, 96, 97, 106, 107, 119, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 170], "297809": [1, 92], "658405": [1, 92], "2": [1, 2, 3, 6, 7, 8, 14, 21, 22, 25, 26, 27, 28, 39, 40, 41, 43, 44, 49, 50, 51, 52, 55, 56, 57, 59, 60, 63, 64, 65, 67, 68, 70, 71, 72, 73, 80, 81, 85, 93, 94, 95, 96, 106, 107, 119, 125, 127, 132, 133, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 157, 163, 165, 166, 167, 170], "468272": [1, 92], "500653": [1, 92], "3": [1, 2, 3, 6, 7, 14, 27, 28, 29, 30, 39, 40, 43, 44, 49, 50, 51, 52, 55, 56, 57, 58, 59, 62, 63, 64, 65, 67, 71, 72, 81, 82, 83, 84, 85, 87, 89, 93, 95, 98, 99, 103, 109, 110, 111, 113, 114, 115, 118, 122, 123, 124, 125, 127, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "134700": 1, "887973": 1, "4": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 67, 68, 69, 70, 71, 75, 76, 81, 82, 83, 84, 85, 87, 88, 89, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 132, 136, 137, 141, 142, 148], "337202": 1, "780797": 1, "1995": 1, "498109": 1, "889060": 1, "1996": 1, "312980": 1, "724953": 1, "1997": [1, 92], "542930": [1, 92], "583517": [1, 92], "1998": [1, 92], "871481": [1, 92], "491301": [1, 92], "1999": [1, 92], "323963": [1, 92], "719150": [1, 92], "2000": [1, 14, 71, 96, 101, 127], "row": [1, 2, 3, 39, 43, 44, 67, 113, 127], "x": [1, 2, 3, 23, 24, 39, 67, 68, 71, 72, 87, 89, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 115, 116, 118, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "column": [1, 2, 3, 6, 7, 39, 43, 44, 67, 69, 84, 93, 109, 118, 124, 127, 148], "total": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 112, 113, 115, 118, 127, 132, 136, 137, 139, 142, 147, 148, 149, 150, 151, 152, 153], "time": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 84, 96, 102, 103, 106, 109, 113, 120, 121, 123, 136, 137, 141, 142], "script": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76], "minut": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76], "098": [], "second": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 87, 89, 91, 93, 95, 98, 99, 100, 101, 102, 103, 108, 109, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 136, 137, 141, 142], "python": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 98, 103, 106, 109, 110, 113, 115, 116, 125], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76], "plot_0_data_loader_builtin": [1, 10], "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 125], "jupyt": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 106], "notebook": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 81, 82, 85, 106], "ipynb": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 81, 82, 83, 84, 85], "galleri": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76], "gener": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 87, 89, 92, 93, 96, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 127, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 153, 157, 167, 170], "sphinx": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76], "pd": [2, 3, 69, 92, 101, 127], "read_csv": [2, 92], "http": [2, 92, 96, 106, 127, 135, 138, 139], "github": [2, 70, 71, 72, 92, 106, 127, 138, 139], "com": [2, 92, 106, 127, 138, 139], "selfexplainml": [2, 92, 106], "toolbox": [2, 92, 170], "blob": [2, 92], "main": [2, 81, 82, 85, 92, 96, 98, 113, 136, 137, 140, 141, 142, 143, 150, 151, 152, 153], "bikeshar": [2, 4, 5, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 24, 34, 36, 38, 43, 48, 50, 52, 54, 56, 58, 63, 76, 80, 92, 96, 98, 99, 100, 101, 102, 103, 112, 127, 170], "csv": [2, 92], "raw": [2, 56, 87, 89, 92, 115, 116, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 146, 147, 150, 151, 152, 153], "true": [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 68, 69, 70, 75, 76, 87, 88, 92, 98, 99, 100, 101, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153], "season": [2, 5, 7, 13, 24, 34, 36, 48, 91, 92, 95, 96, 101, 103, 108, 111, 112, 116, 118], "yr": [2, 4, 5, 7, 12, 13, 15, 16, 17, 18, 24, 34, 36, 38, 43, 48, 50, 52, 54, 56, 58, 63, 76, 81, 91, 92, 95, 96], "mnth": [2, 4, 7, 12, 13, 15, 16, 17, 18, 24, 34, 36, 38, 43, 48, 50, 52, 54, 56, 58, 63, 76, 81, 92, 95, 96], "hr": [2, 5, 7, 8, 13, 15, 16, 18, 34, 36, 38, 48, 50, 52, 54, 56, 58, 63, 76, 89, 91, 92, 95, 96, 98, 99, 100, 101, 102, 103, 108, 111, 112, 116, 118, 120, 121, 123], "holidai": [2, 7, 92, 95, 102], "weekdai": [2, 4, 7, 15, 38, 92, 95, 96, 111], "workingdai": [2, 7, 13, 50, 92, 95, 96, 101, 102, 108, 111, 116], "weathersit": [2, 7, 16, 92, 95, 96, 98], "temp": [2, 4, 5, 7, 8, 12, 13, 15, 16, 17, 18, 24, 34, 36, 38, 43, 48, 50, 52, 54, 56, 58, 63, 76, 81, 91, 92, 95, 96, 112], "6": [1, 2, 5, 6, 7, 10, 14, 25, 26, 27, 28, 40, 44, 49, 50, 52, 55, 56, 59, 60, 64, 67, 71, 72, 73, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 98, 99, 100, 106, 110, 114, 118, 119, 123, 124, 125, 127, 132, 140, 143, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167], "24": [2, 14, 40, 51, 59, 67, 72, 73, 92, 94, 99, 125], "22": [2, 14, 40, 59, 67, 92, 106], "17374": 2, "12": [2, 14, 15, 20, 29, 30, 40, 59, 60, 82, 84, 92, 95, 106, 109, 122, 123, 125], "19": [2, 10, 14, 40, 59, 73], "26": [2, 7, 14, 40, 92], "17375": 2, "20": [2, 3, 6, 14, 16, 20, 25, 26, 31, 32, 40, 51, 59, 60, 69, 82, 84, 93, 96, 103, 109, 110, 113, 114, 115, 120, 121, 122, 124, 125, 127, 138, 139, 140, 141, 142, 143, 146, 147, 150, 151, 152, 153, 157, 167], "17376": 2, "21": [2, 3, 14, 40, 50, 59, 67, 92, 125], "17377": [2, 92], "17378": [2, 92], "23": [2, 5, 10, 14, 40, 53, 59, 60, 64, 67, 73, 77, 92, 95, 106, 137, 139, 142, 147, 149, 151, 153], "atemp": [2, 7, 9, 15, 16, 34, 52, 56, 76, 92, 95, 97, 98, 100, 102, 103, 108, 111, 116, 120, 123], "hum": [2, 7, 76, 92, 95, 96, 100, 103, 108, 112, 116], "windspe": [2, 7, 92, 95, 111], "cnt": [2, 5, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 24, 34, 36, 38, 43, 48, 50, 52, 54, 56, 58, 63, 76, 81, 89, 91, 92, 93, 95, 98, 99, 100, 101, 102, 103, 108, 111, 112, 115, 116, 118, 120, 121, 123, 124], "2879": [2, 92], "81": [2, 43, 92], "0000": [2, 7, 24, 39, 40, 92, 95], "16": [2, 7, 14, 18, 20, 27, 28, 29, 30, 40, 59, 67, 68, 73, 76, 77, 92, 108, 109, 111, 114, 116], "2727": [2, 7, 92], "80": [2, 43, 92, 135], "40": [2, 14, 39, 40, 51, 57, 59, 60, 64, 89, 92, 95, 113, 121, 123, 146, 147], "32": [2, 14, 40, 59, 67, 92, 102, 106, 119, 136, 137], "75": [2, 51, 124], "13": [2, 4, 7, 10, 14, 40, 59, 84, 95], "2576": [2, 7, 92], "60": [2, 84, 92], "1642": [2, 92], "119": 2, "89": 2, "90": [2, 59, 64, 84, 89, 92, 121, 128, 129, 130, 131, 132, 133, 134, 135], "56": [2, 57, 92], "1343": [2, 92], "61": [2, 59, 64, 92], "65": [2, 7, 40, 92, 99], "49": [2, 47, 67, 92], "17379": [2, 6, 92, 93, 95], "10": [7, 12, 13, 14, 16, 26, 27, 28, 29, 30, 35, 36, 40, 41, 47, 49, 53, 54, 57, 58, 59, 62, 63, 71, 72, 73, 75, 76, 81, 82, 84, 85, 87, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 120, 121, 122, 123, 124, 127, 128, 130, 132, 136, 137, 141, 142, 157, 160, 161, 163, 165, 166, 167], "456": [], "plot_0_data_loader_datafram": [2, 10], "parquet": 3, "demonstr": [3, 68, 69, 70, 81, 82, 83, 84, 85, 87, 88, 89, 93, 96, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124], "numpi": [3, 6, 39, 40, 68, 69, 71, 72, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 150, 151, 152, 153], "np": [3, 6, 68, 69, 71, 72, 93, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "original_df": 3, "hstack": [3, 69], "random": [3, 6, 8, 21, 42, 45, 67, 68, 90, 94, 100, 102, 118, 122, 127, 128, 131, 132, 135, 136, 137, 138, 139, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "randint": [3, 127], "size": [3, 7, 14, 55, 56, 68, 84, 87, 89, 94, 96, 101, 106, 113, 114, 115, 120, 123, 124, 127, 128, 132, 133, 134, 136, 137, 141, 142, 146, 147, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167], "100000": [3, 51, 127], "uniform": [3, 9, 44, 59, 68, 76, 97, 119, 121, 123, 127, 163], "y": [3, 68, 71, 72, 87, 88, 89, 96, 100, 103, 105, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 121, 123, 124, 127, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "str": [3, 127, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "i": [3, 7, 8, 39, 40, 68, 70, 71, 72, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "rang": [3, 91, 94, 96, 98, 113, 115, 116, 118, 119, 120, 122, 124, 127, 133], "to_parquet": 3, "myfil": 3, "10000": [3, 13, 93, 101, 141, 142, 146, 147], "purli": 3, "randomli": [3, 89, 93, 94, 100, 102, 103, 127, 131, 148, 149], "spark": [3, 127], "spark_sample_s": [3, 127], "traceback": 125, "most": [93, 96, 99, 100, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 120, 125, 127, 133, 141, 142, 157, 167], "recent": [109, 125], "call": [89, 95, 96, 98, 99, 101, 106, 108, 112, 113, 115, 119, 125, 127, 131, 135, 137, 139, 142, 147, 149, 151, 153], "last": [84, 87, 93, 96, 98, 122, 125, 127, 136, 137, 141, 142, 146, 147], "file": [10, 20, 41, 45, 60, 65, 67, 69, 73, 77, 105, 127, 141, 142], "e": [39, 40, 84, 94, 96, 97, 98, 99, 101, 103, 106, 108, 109, 110, 111, 112, 113, 115, 116, 122, 123, 124, 127, 131, 132, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "well": [84, 96, 109, 110, 112, 114, 115, 116, 118, 121, 124, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "fargo": [], "relat": [87, 89, 96, 97, 109, 111, 115, 116, 122, 125, 131, 134, 163, 164, 165, 166], "doc": [], "plot_0_data_loader_spark": [3, 10], "line": [89, 91, 94, 96, 98, 99, 106, 113, 116, 118, 119, 121, 122, 124, 127], "modul": [92, 93, 94, 95, 96, 105, 106, 112, 114, 125, 127, 141, 142], "api": [68, 70, 78, 83, 87, 89, 94, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127], "233": 121, "util": [59, 84, 88, 89, 93, 94, 109, 118, 120, 121, 122, 123, 124, 127, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "11": [1, 7, 10, 14, 40, 59, 73, 81, 82, 84, 95, 100, 125], "safe_execut": [], "executor": [], "workflow": [69, 70, 71, 72, 106, 113, 115, 127], "data_api": [], "59": 41, "dataapi": [], "load_spark_data": [], "202": [], "d": [96, 97, 110, 112, 113, 123], "anaconda": [], "env": [], "py37": 125, "lib": [], "site": 102, "packag": [96, 98, 99, 100, 101, 103, 106, 108, 109, 110, 112, 113, 115, 116, 125], "pyspark": [], "sql": [], "session": [], "228": [59, 60], "getorcr": [], "sc": [], "sparkcontext": [], "sparkconf": [], "context": [94, 101, 103, 114, 116, 118, 119, 121, 127, 131, 134], "392": [], "conf": [], "144": [], "__init__": [], "_ensure_initi": [], "self": [132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "gatewai": [], "339": [], "_gatewai": [], "launch_gatewai": [], "java_gatewai": [], "108": [], "rais": [127, 134, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "runtimeerror": 125, "java": [], "process": [89, 93, 94, 100, 101, 106, 109, 113, 115, 116, 118, 119, 121, 123, 124, 131, 134, 148, 149], "exit": [], "befor": [39, 40, 93, 96, 112, 122, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 146, 147, 148, 149, 152], "send": [], "its": [81, 82, 85, 89, 94, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 127, 141, 142, 148], "port": [], "number": [84, 87, 89, 93, 94, 95, 96, 97, 98, 101, 102, 103, 108, 109, 110, 113, 115, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 157, 160, 161, 163, 165, 166, 167], "stratifi": [3, 127], "spark_sample_by_featur": [3, 127], "spark_random_st": [3, 127], "given": [3, 53, 54, 75, 76, 94, 96, 100, 103, 108, 109, 111, 113, 115, 116, 120, 127, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 160, 167], "uneven": 3, "ratio": [3, 6, 7, 67, 69, 84, 88, 89, 93, 119, 120, 121, 122, 124, 127, 141, 142, 146, 147, 163, 165, 166], "spark_sample_fract": [3, 127], "5": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 110, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 130, 131, 133, 134, 137, 141, 142, 146, 147, 148, 149], "084": [], "show": [4, 5, 7, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 83, 84, 87, 88, 89, 91, 93, 94, 96, 98, 99, 100, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127, 163], "result": [4, 6, 7, 49, 50, 51, 52, 54, 86, 87, 88, 89, 94, 96, 98, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 121, 123, 124, 127, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 160, 164, 167], "us": [4, 5, 6, 7, 8, 13, 19, 43, 44, 49, 50, 52, 67, 68, 69, 70, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 155, 157, 163, 164, 165, 166, 167], "highcode_onli": [4, 68, 69, 70, 127], "silent": [4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 75, 76, 127], "remov": [4, 7, 39, 40, 84, 94, 96, 102, 103, 112, 113, 116, 127, 135], "data_summari": [4, 7, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 27, 29, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 75, 76, 81, 82, 83, 84, 85, 95, 106, 127], "feature_exclud": [4, 7, 12, 13, 15, 16, 17, 18, 19, 23, 24, 27, 29, 33, 34, 35, 36, 37, 38, 39, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 75, 76, 95, 127], "chang": [4, 71, 72, 89, 94, 96, 97, 99, 100, 106, 112, 113, 118, 122, 123, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "type": [4, 6, 7, 59, 67, 91, 93, 94, 97, 106, 115, 119, 123, 127, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "feature_typ": [4, 70, 71, 72, 95, 127, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "categor": [4, 7, 24, 71, 72, 84, 87, 89, 91, 93, 96, 98, 101, 112, 118, 119, 127, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "220": [], "plot_1_data_summari": [4, 10], "plot": [5, 7, 9, 11, 12, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 48, 53, 54, 57, 58, 71, 72, 87, 88, 89, 90, 94, 98, 99, 100, 102, 104, 106, 109, 112, 114, 119, 121, 122, 123, 127, 141, 142, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167], "data": [5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 69, 70, 71, 72, 75, 76, 78, 79, 80, 87, 89, 91, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 127, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170], "histogram": [5, 49, 50, 51, 52, 53, 54, 57, 58, 62, 63, 71, 72, 87, 89, 91, 108, 110, 111, 115, 116, 120, 124, 127, 130, 136, 137, 150, 151, 152, 153, 157, 166, 167], "densiti": [5, 57, 58, 71, 72, 75, 76, 91, 98, 124, 127, 141, 142, 165], "univari": [5, 90, 115, 127], "uni_featur": [5, 13, 15, 16, 18, 19, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 67, 68, 91, 98, 99, 101, 103, 105, 108, 110, 111, 112, 113, 115, 116, 127], "figsiz": [5, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 87, 88, 89, 91, 96, 97, 98, 99, 100, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127, 132, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167], "bar": [5, 87, 88, 89, 91, 96, 98, 100, 101, 103, 110, 112, 113, 115, 118], "scatter": [5, 18, 91, 103, 118, 127], "bivari": [5, 90, 127], "bi_featur": [5, 13, 16, 34, 36, 38, 39, 40, 91, 98, 101, 108, 111, 113, 116, 127], "box": [5, 78, 89, 91, 106, 108, 113, 114, 116, 123, 170], "stack": [5, 91], "correl": [5, 7, 8, 81, 82, 90, 91, 94, 98, 101, 103, 115, 118, 121, 127], "heatmap": [5, 29, 30, 91, 101, 116, 127], "multivari": [5, 90, 94, 101, 127], "multi_typ": [5, 91, 127], "correlation_heatmap": [5, 91, 127], "graph": [5, 91, 133, 136, 137], "correlation_graph": [5, 91, 127], "ad": [87, 89, 96, 116, 123, 141, 142], "an": [84, 87, 89, 91, 93, 94, 95, 96, 98, 99, 100, 101, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 127, 130, 131, 134, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 157, 163, 164, 165, 166, 167], "ax": 119, "same": [68, 70, 89, 94, 106, 108, 109, 111, 113, 116, 119, 122, 123, 127, 136, 137, 148, 163, 164, 165, 166], "argument": [87, 89, 96, 97, 98, 99, 100, 101, 102, 103, 109, 111, 115, 118, 120, 121, 123, 124, 133], "previou": [89, 98, 99, 121, 122, 131], "current": [84, 121, 125, 148, 149], "reus": 131, "earlier": 118, "instanc": [94, 95, 99, 100, 103, 108, 109, 112, 118, 121, 122, 124, 127, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "In": [70, 71, 72, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127, 136, 138, 141, 142, 146, 148, 150, 152], "futur": [39, 40, 102, 105, 170], "version": [39, 40, 82, 97, 106, 121, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "new": [7, 92, 94, 106, 109, 110, 127, 131, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "alwai": [96, 110, 118, 120, 127, 137, 139, 142, 147, 148, 149, 151, 153], "creat": [98, 100, 113, 119, 122, 124, 131, 136, 137, 148, 149], "return": [68, 103, 110, 119, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "meanwhil": [], "warn": [120, 124, 134, 148, 149], "can": [7, 68, 69, 79, 82, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 131, 133, 135, 136, 137, 139, 142, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "suppress": [], "behavior": [94, 112, 120], "ensur": [93, 95, 110, 114, 115, 116, 119, 120, 135], "pass": [127, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "uniqu": [94, 95, 106, 113, 115, 116, 119, 124, 136, 137, 148, 149], "label": [83, 87, 92, 93, 95, 118, 122, 124, 127, 136, 137, 138, 140, 141, 146, 148, 149, 150, 152], "each": [7, 53, 54, 85, 87, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 163, 164, 165, 166], "424": [], "plot_2_data_eda": [5, 10], "displai": [6, 87, 88, 89, 91, 94, 97, 103, 108, 109, 110, 111, 112, 115, 116, 118, 119, 120, 122, 123, 124, 127, 146, 147], "split": [6, 29, 30, 67, 79, 90, 94, 98, 106, 109, 114, 115, 116, 124, 127, 131, 132, 138, 139, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "data_prepar": [6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 75, 76, 81, 82, 83, 84, 85, 93, 96, 105, 106, 127], "task_typ": [6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 71, 72, 75, 76, 93, 105, 127, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "regress": [6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 21, 22, 41, 43, 46, 60, 61, 65, 66, 67, 69, 73, 74, 77, 81, 82, 86, 92, 93, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124, 127, 137, 138, 139, 142, 143, 145, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170], "sample_weight": [6, 93, 127, 131, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "none": [6, 39, 40, 56, 58, 62, 63, 67, 70, 71, 72, 87, 89, 93, 109, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "split_method": [6, 93, 127], "test_ratio": [6, 43, 44, 93, 127], "random_st": [6, 67, 70, 71, 72, 93, 105, 127, 128, 131, 132, 135, 136, 137, 138, 139, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "config": [6, 67, 93, 127], "valu": [6, 7, 31, 32, 59, 67, 69, 84, 88, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "exclud": [6, 67, 81, 83, 84, 85, 93, 98, 119, 127, 136, 137, 141, 142], "variabl": [6, 67, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 96, 97, 99, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 124, 127], "weight": [6, 31, 32, 67, 83, 93, 100, 103, 112, 113, 118, 127, 128, 131, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "task": [6, 54, 67, 87, 93, 94, 98, 99, 101, 102, 103, 106, 114, 117, 119, 120, 122, 123, 124, 127, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "method": [6, 7, 8, 43, 44, 55, 56, 67, 81, 84, 86, 87, 89, 93, 96, 97, 98, 101, 102, 103, 106, 110, 114, 115, 116, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 163, 164, 165, 166, 167], "state": [6, 67, 92, 93, 103, 106, 113, 119, 124, 127, 136, 137, 145], "outer": [6, 57, 58, 122, 127, 136, 137, 163, 164, 165, 166], "base": [6, 49, 50, 51, 52, 83, 87, 88, 95, 96, 97, 98, 100, 101, 102, 103, 106, 110, 111, 112, 114, 115, 118, 119, 120, 121, 122, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 148, 149, 150, 151, 152, 153, 155, 157, 160, 167], "kmean": [6, 127, 128, 132], "421888": [], "custom": [6, 55, 56, 59, 79, 81, 82, 85, 93, 95, 110, 119, 122, 124, 127, 132], "custom_train_idx": [6, 93], "arang": [6, 71, 72, 93], "16000": [6, 93], "custom_test_idx": [6, 93], "train_idx": [6, 71, 72, 93, 127, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "test_idx": [6, 71, 72, 93, 127, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "manual": [6, 84, 95, 106, 110, 115, 141, 142], "079349": [6, 93], "437": [], "plot_3_data_prepar": [6, 10], "analysi": [7, 75, 76, 81, 82, 83, 84, 90, 93, 99, 102, 106, 120, 121, 124, 127, 170], "outlier_detect": [7, 94, 127], "pca": [7, 94, 127, 132], "cblof": [7, 127], "isolationforest": [7, 94, 127], "kmeanstre": [7, 127], "oneclasssvm": [7, 127], "knn": [7, 127], "hbo": [7, 127], "ecod": [7, 127], "integr": [7, 83, 100, 101, 106, 108, 112, 113, 127], "re": [7, 14, 71, 72, 75, 76, 109, 115, 138, 139, 148, 149], "data_qu": [7, 94, 106, 127], "integrity_single_column_check": [7, 127], "return_data": [7, 14, 49, 50, 51, 52, 54, 59, 64, 75, 76, 88, 100, 108, 110, 111, 112, 115, 116, 119, 120, 121, 124, 127], "io": [7, 75, 76], "format": [7, 75, 76, 95, 115], "style": [7, 21, 66, 68, 73, 75, 76, 93, 95, 105, 127], "styler": [7, 75, 76], "object": [7, 71, 72, 75, 76, 105, 110, 112, 124, 127, 128, 132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "0x000001ae91219a48": [], "nbsp": [7, 95], "singl": [7, 9, 49, 50, 51, 52, 87, 89, 91, 96, 98, 101, 103, 109, 112, 113, 118, 122, 124, 127, 140, 143, 148, 149], "null": [7, 96, 118], "mix": 7, "long": [7, 113, 123], "string": [7, 87, 89, 95, 127, 130, 131, 132, 133, 134, 135, 141, 142, 148, 149], "special": [7, 109, 113, 115], "charact": [7, 96], "categori": [7, 59, 64, 83, 84, 91, 93, 94, 95, 98, 112, 119, 123, 127, 141, 142], "numer": [7, 23, 24, 71, 72, 84, 87, 89, 91, 93, 96, 98, 101, 112, 118, 119, 127, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "num": [7, 84], "index": [7, 39, 40, 59, 64, 93, 97, 98, 109, 113, 121, 122, 127, 136, 137, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 159, 163], "fals": [7, 13, 16, 17, 23, 24, 34, 39, 40, 47, 48, 69, 70, 71, 72, 98, 100, 101, 112, 113, 116, 118, 124, 127, 128, 131, 134, 135, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 155, 167], "000000": [7, 49, 50, 51], "duplic": [7, 127], "integrity_duplicated_sampl": [7, 127], "leakag": 7, "1507": 7, "9867": 7, "9822": 7, "17336": 7, "13559": 7, "13727": 7, "5598": 7, "14639": 7, "7958": 7, "8126": 7, "64": [7, 132], "2273": 7, "48": [5, 7, 10, 40, 59, 60, 67, 73], "2985": 7, "6061": 7, "83": 7, "0896": 7, "5606": 7, "88": [7, 67, 124], "8": [7, 14, 40, 49, 50, 52, 59, 60, 64, 67, 69, 77, 81, 82, 83, 84, 85, 87, 88, 99, 103, 108, 111, 119, 123, 124, 125, 127, 136, 137, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167], "1045": [7, 95], "integrity_highly_correlated_featur": [7, 127], "0x000001ae914c9b88": [], "00": [7, 10, 20, 41, 45, 60, 73], "01": [7, 10, 20, 31, 32, 41, 45, 60, 65, 73, 77, 108, 115, 136, 137, 141, 142, 150, 151], "77": [7, 43, 49], "05": [7, 10, 41, 51, 52, 60, 73, 120, 146, 147], "28": [7, 9, 14, 40, 52, 60, 77], "14": [7, 8, 10, 14, 20, 40, 49, 59, 84], "51": [7, 38, 41, 43, 45], "09": [7, 10, 14, 41, 60, 67], "03": [7, 14, 41], "04": [7, 14, 20, 41, 65, 103], "02": [7, 14, 41, 77], "42": [7, 14, 48, 51, 60, 136, 137], "08": [7, 14], "15": [7, 10, 14, 40, 59, 75, 77, 84, 103, 136, 137], "29": [7, 14, 40, 59, 64, 75, 106], "36": [7, 9, 10, 14, 40, 54, 56, 60, 70, 73, 96], "score": [7, 21, 53, 66, 73, 98, 102, 103, 106, 111, 118, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "distribut": [7, 9, 53, 54, 57, 58, 71, 72, 75, 76, 81, 82, 84, 87, 89, 91, 93, 96, 97, 103, 106, 113, 118, 121, 122, 123, 125, 127, 129, 134, 165, 166], "od_score_distribut": [7, 94, 127], "threshold": [7, 8, 49, 50, 51, 52, 53, 54, 59, 71, 72, 84, 92, 94, 96, 106, 117, 118, 120, 121, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 141, 142, 146, 147, 157, 159, 160, 167], "999": [7, 94], "support": [39, 40, 71, 89, 91, 92, 93, 98, 103, 106, 115, 116, 118, 119, 121, 122, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 148, 149, 154], "multi": [39, 40, 136, 138, 141, 146, 147, 148, 150, 152], "dimension": [39, 40, 91, 94, 112, 134], "g": [39, 40, 84, 96, 97, 103, 106, 108, 109, 110, 111, 112, 115, 116, 121, 122, 123, 127, 132, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "obj": [39, 40], "deprec": [39, 40], "convert": [39, 40, 112, 123, 127, 135, 136, 137, 148, 149], "arrai": [39, 40, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "instead": [39, 40, 87, 89, 95, 96, 98, 99, 101, 103, 106, 108, 109, 112, 115, 116, 121, 122, 127, 135, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "od_marginal_outlier_distribut": [7, 94, 127], "compar": [7, 43, 44, 70, 86, 87, 88, 89, 94, 96, 97, 98, 100, 106, 109, 110, 111, 112, 115, 118, 121, 122, 123, 124, 127, 159, 163, 165, 166], "differ": [7, 68, 70, 84, 86, 87, 88, 89, 91, 93, 96, 97, 98, 100, 101, 102, 103, 106, 108, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127, 131, 148, 149, 163, 164, 165, 166], "outlier": [7, 89, 91, 108, 127, 128, 129, 130, 131, 132, 133, 134, 135], "detect": [7, 71, 72, 87, 89, 91, 94, 106, 108, 120, 124, 127, 128, 129, 130, 131, 133, 134, 135], "algorithm": [7, 87, 89, 93, 94, 96, 104, 106, 108, 109, 113, 114, 116, 117, 119, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 148, 149, 150, 151, 152, 153], "od_tsne_comparison": [7, 94, 127], "The": [81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "default": [13, 19, 43, 44, 55, 62, 63, 67, 81, 82, 83, 84, 85, 87, 89, 92, 93, 94, 96, 98, 99, 101, 102, 103, 106, 108, 109, 113, 114, 118, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "tsne": [], "learn": [81, 82, 85, 86, 88, 89, 92, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 121, 123, 124, 125, 127, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "rate": [108, 113, 118, 119, 127, 136, 137, 138, 139, 141, 142, 146, 147, 150, 151, 152, 153, 158, 159, 160, 161, 162], "200": 134, "auto": [75, 127, 130, 131, 133, 134, 135, 136, 137, 141, 142, 148, 149, 150, 151, 152, 153], "appli": [7, 84, 87, 89, 93, 103, 113, 115, 121, 122, 123, 124, 148, 149], "you": [7, 92, 93, 95, 96, 98, 100, 103, 105, 106, 108, 110, 111, 112, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 127, 132, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "also": [7, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 122, 123, 124, 132, 141, 142, 148, 149], "specifi": [7, 67, 87, 89, 93, 95, 96, 98, 101, 102, 103, 106, 108, 109, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127, 134, 135, 148, 150, 151, 152, 153], "train": [7, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 68, 69, 70, 71, 72, 73, 75, 76, 79, 80, 87, 89, 90, 96, 97, 100, 101, 102, 103, 106, 107, 118, 119, 120, 121, 122, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170], "all": [7, 21, 23, 24, 56, 75, 76, 84, 85, 87, 89, 93, 94, 96, 98, 99, 102, 103, 105, 108, 109, 110, 111, 112, 113, 116, 118, 122, 123, 127, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "remove_outli": [7, 127], "final": [7, 94, 96, 98, 99, 102, 103, 108, 110, 111, 113, 115, 116, 123, 150, 151], "drift": [7, 123, 127], "inform": [7, 31, 32, 87, 92, 93, 95, 106, 108, 109, 111, 112, 113, 114, 116, 118, 120, 121, 122, 123, 124, 127, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "drift_test_info": [7, 127], "energi": [7, 93, 127], "distanc": [7, 8, 9, 53, 54, 57, 58, 62, 63, 71, 72, 75, 76, 84, 90, 93, 94, 98, 127, 132, 133, 148, 149, 159, 163, 164, 165, 166], "13889": 7, "3476": 7, "00051": [], "drift_test_dist": [7, 127], "175": [], "plot_4_data_qu": [7, 10], "four": [8, 93, 94, 96, 98, 106, 112, 122, 132, 148], "strategi": [8, 96, 119, 120, 127, 138, 139, 148, 149, 163], "pearson": [8, 91, 96, 127], "feature_select": [8, 81, 82, 96, 106, 127], "cor": [8, 96, 127], "corr_algorithm": [8, 96, 127], "spearman": [8, 96, 127], "dcor": [8, 96, 125, 127], "permut": [8, 11, 20, 21, 82, 85, 96, 104, 106, 127, 148, 149], "pfi": [8, 12, 19, 68, 69, 81, 96, 104, 106, 127], "95": [8, 96], "condit": [8, 11, 20, 21, 90, 91, 94, 103, 104, 116, 119, 122, 124, 127], "independ": [8, 90, 94, 101, 103, 113, 115, 122, 127, 130, 134], "rcit": [8, 127], "001": [8, 39, 40, 96, 113, 134, 141, 142, 146, 147], "n_forward_phas": [8, 96, 127], "kernel_s": [8, 96, 127], "100": [8, 13, 14, 18, 19, 29, 30, 31, 43, 44, 49, 50, 52, 56, 57, 58, 59, 70, 71, 72, 96, 103, 105, 109, 115, 119, 120, 124, 127, 131, 140, 141, 142, 143, 150, 151, 152, 153], "where": [8, 88, 91, 92, 93, 94, 96, 98, 101, 103, 106, 108, 109, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 136, 137, 139, 142, 147, 148, 149, 151, 153], "markov": [8, 96], "boundari": [8, 92, 96, 118, 127], "non": [8, 57, 84, 96, 101, 110, 116, 118, 134, 136, 137, 140, 143, 144, 145, 148, 149], "empti": [8, 96, 127, 141, 142, 163, 164, 165, 166], "preset": [8, 96, 127], "664": [31, 41, 68, 73], "plot_5_feature_select": [8, 10], "shift": [9, 53, 54, 71, 72, 84, 87, 89, 97, 121, 123, 127], "psi": [9, 53, 54, 57, 58, 84, 97, 121, 122, 127, 132, 159, 163], "twosample_test": [9, 97, 127], "distance_metr": [9, 53, 54, 57, 58, 121, 122, 127, 159, 163], "psi_bucket": [9, 97, 121, 122, 127, 163], "wd1": [9, 57, 58, 97, 121, 122, 127, 132, 159, 163], "k": [9, 93, 94, 96, 97, 98, 102, 106, 108, 109, 111, 116, 121, 122, 127, 128, 132, 133, 159, 163, 164, 165, 166], "quantil": [9, 55, 56, 59, 84, 92, 94, 97, 98, 119, 121, 122, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 163], "show_featur": [9, 47, 48, 53, 54, 57, 58, 71, 72, 75, 76, 118, 121, 122, 127, 155, 160, 165, 166], "014": [], "plot_6_twosample_test": [9, 10], "27": [10, 14, 40], "571": [], "execut": [10, 20, 41, 45, 60, 65, 73, 77, 96, 106, 127], "auto_examples_data": 10, "mb": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 134], "partial": [11, 20, 21, 96, 104, 106, 127, 136, 137, 140, 141, 142, 143, 150, 151, 152, 153], "depend": [11, 20, 21, 96, 98, 99, 100, 102, 104, 106, 115, 122, 123, 127, 133, 136, 137, 140, 141, 142, 143, 150, 151, 152, 153], "h": [11, 19, 20, 21, 98, 106, 108, 111, 116, 127], "statist": [11, 19, 20, 21, 90, 96, 97, 99, 106, 112, 113, 118, 127, 146, 147], "individu": [11, 20, 21, 93, 94, 98, 100, 102, 103, 104, 112, 121, 124, 127, 131, 141, 142], "expect": [11, 20, 21, 89, 91, 94, 103, 104, 109, 112, 121, 123, 127, 131, 135, 137, 139, 142, 147, 149, 151, 153], "accumul": [11, 20, 21, 96, 104, 106, 115, 116, 127, 147], "local": [11, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 81, 101, 103, 106, 107, 118, 127, 128, 141, 142, 147, 170], "effect": [11, 20, 21, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 81, 82, 85, 93, 94, 99, 100, 101, 103, 104, 106, 112, 113, 118, 119, 120, 122, 124, 127, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "interpret": [11, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 78, 80, 96, 98, 104, 127, 129, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 170], "model": [11, 12, 13, 14, 15, 16, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 71, 72, 73, 75, 76, 78, 79, 80, 87, 88, 89, 92, 93, 94, 96, 98, 99, 101, 102, 104, 118, 119, 120, 121, 122, 123, 124, 127, 128, 131, 132, 133, 134, 135, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170], "agnost": [11, 20, 21, 81, 82, 85, 98, 101, 104, 106, 121, 122], "explan": [11, 20, 21, 67, 68, 69, 81, 82, 85, 86, 98, 99, 101, 102, 104, 105, 106, 127], "shaplei": [11, 20, 21, 104], "addit": [11, 20, 21, 87, 88, 89, 93, 94, 95, 98, 100, 101, 104, 106, 107, 108, 109, 111, 114, 115, 116, 118, 119, 120, 122, 123, 124, 127, 133, 136, 137, 138, 139, 140, 141, 142, 143, 170], "xgb2regressor": [12, 13, 14, 15, 17, 18, 34, 43, 48, 50, 52, 54, 58, 76, 116, 127], "model_train": [12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 75, 76, 81, 82, 83, 84, 85, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 127], "name": [12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 75, 76, 83, 84, 87, 89, 93, 94, 95, 96, 98, 99, 101, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 123, 127, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "xgb2": [12, 13, 14, 15, 17, 18, 19, 21, 33, 34, 43, 46, 47, 48, 49, 50, 51, 52, 54, 57, 58, 60, 62, 63, 70, 71, 72, 75, 76, 84, 87, 89, 99, 100, 101, 102, 103, 106, 108, 111, 116, 118, 119, 120, 121, 122, 124, 127, 152], "model_explain": [12, 13, 14, 15, 16, 17, 18, 19, 67, 68, 69, 81, 82, 85, 98, 99, 100, 101, 102, 103, 105, 106, 127], "n_repeat": [12, 102, 127], "597": [12, 20], "plot_0_pfi": [12, 20], "n_estim": [13, 14, 19, 31, 32, 43, 57, 58, 59, 70, 71, 72, 105, 115, 116, 127, 131, 150, 151, 152, 153], "1d": [13, 16, 82, 85, 97, 98, 101, 106, 116, 127, 133, 159, 163], "pdp": [13, 19, 67, 68, 81, 82, 85, 98, 99, 103, 104, 105, 106, 116, 127], "grid_siz": [13, 14, 16, 19, 98, 101, 127], "50": [13, 16, 19, 98, 101, 116, 123, 132, 136, 137, 146, 147], "original_scal": [13, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 48, 51, 53, 54, 57, 58, 62, 63, 87, 98, 99, 100, 101, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 121, 122, 124, 127], "use_test": [13, 19, 47, 48, 49, 50, 51, 101, 118, 120, 124, 127, 155, 167], "2d": [13, 16, 82, 85, 94, 101, 106, 116, 127], "sample_s": [13, 14, 18, 103, 127, 141, 142], "sliced_lin": [13, 16, 34, 98, 101, 116, 127], "470": [13, 20], "plot_1_pdp": [13, 20], "friedman": [14, 21, 22, 41, 83, 92, 106, 127, 147, 149], "subsampl": [14, 93, 94, 101, 103, 127, 131], "grid": [14, 21, 42, 44, 45, 98, 101, 119, 127], "hstat": [14, 19, 127], "354665e": 14, "x3": [3, 14], "772886e": 14, "x4": [3, 14], "769194e": 14, "488876e": 14, "939141e": 14, "x2": [3, 14, 40, 71, 83, 92, 127], "891201e": 14, "615382e": 14, "7": [10, 14, 29, 30, 40, 49, 50, 52, 59, 60, 63, 64, 67, 70, 73, 76, 81, 82, 83, 84, 85, 87, 95, 96, 105, 108, 116, 122, 123, 125], "110027e": 14, "9": [4, 10, 14, 40, 52, 55, 59, 60, 64, 67, 81, 82, 84, 85, 94, 99, 109, 110, 114, 115, 122, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 163, 165, 166], "062784e": 14, "224594e": 14, "x7": [3, 14], "187721e": 14, "x6": [3, 14], "x9": [3, 14], "826716e": 14, "798646e": 14, "139691e": 14, "499676e": 14, "367038e": 14, "256837e": 14, "17": [2, 10, 14, 19, 20, 40, 59, 60, 65, 67, 81, 89, 94, 98, 99, 100, 101, 102, 103, 108, 111, 112, 115, 116, 118, 120, 121, 123, 124, 125, 148, 149], "022405e": 14, "18": [14, 40, 48, 58, 59, 60, 67, 95, 99, 106, 148, 149], "017541e": 14, "x5": [3, 14, 83, 92, 127], "553405e": 14, "06": [10, 14, 45, 108, 111, 116], "510080e": 14, "003126e": 14, "001398e": 14, "x8": [3, 14], "355216e": 14, "07": [14, 41, 77, 103, 111], "842721e": 14, "25": [14, 35, 40, 41, 49, 59, 64, 65, 67, 71], "703580e": 14, "405027e": 14, "302398e": 14, "020537e": 14, "266068e": 14, "30": [14, 40, 51, 54, 60, 84, 85, 87, 93, 95, 97, 106, 108, 109, 111, 112, 113, 114, 116, 118, 120, 121, 122, 123, 124, 133], "271688e": 14, "31": [14, 40, 70, 71, 73], "382035e": 14, "910548e": 14, "33": [14, 40, 58, 60], "166214e": 14, "34": [14, 40], "757503e": 14, "35": [14, 40, 60], "158681e": 14, "689033e": 14, "37": [14, 40, 47, 59, 60, 62, 65, 67, 84], "289872e": 14, "38": [6, 10, 14, 60, 63, 65], "034555e": 14, "39": [14, 51, 67, 106, 125], "418748e": 14, "989873e": 14, "41": [3, 10, 14, 49, 51, 52, 60, 67], "310739e": 14, "203739e": 14, "43": [14, 40, 67], "804507e": 14, "44": [14, 39, 41, 60, 99], "885018e": 14, "040": [14, 20], "plot_1_pdp_hstat": [14, 20], "ic": [15, 19, 92, 104, 127], "230": [15, 20, 96], "plot_2_ic": [15, 20], "reludnnregressor": [16, 40, 113, 127], "reludnn": [16, 39, 55, 98, 113, 146, 147], "al": [16, 19, 68, 81, 82, 85, 103, 104, 116, 127, 135], "648": [16, 20], "plot_3_al": [16, 20], "lime": [17, 19, 81, 82, 85, 104, 106, 125, 127], "without": [17, 23, 24, 39, 40, 71, 72, 103, 109, 112, 131], "center": [17, 23, 24, 39, 40, 93, 96, 98, 100, 113, 127, 128, 141, 142], "sample_id": [17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 100, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 127], "060": [17, 20], "plot_4_lim": [17, 20], "shap": [18, 19, 81, 82, 85, 104, 106, 125, 127], "waterfal": 18, "shap_waterfal": [18, 19, 103, 127], "shap_fi": [18, 103, 127], "shap_summari": [18, 103, 127], "shap_scatt": [18, 103, 127], "703": [18, 20], "plot_5_shap": [18, 20], "xgb2classifi": [19, 33, 47, 49, 51, 57, 59, 62, 75, 116, 127], "simucredit": [19, 21, 42, 45, 59, 64, 75, 84, 88, 92, 127], "gender": [19, 44, 59, 64, 75, 84, 88, 119], "race": [19, 44, 59, 64, 75, 83, 84, 88, 119], "approv": [19, 44, 59, 64, 75, 84], "classif": [19, 21, 22, 23, 41, 44, 46, 59, 60, 61, 64, 65, 66, 68, 73, 74, 77, 83, 84, 85, 86, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124, 127, 136, 138, 140, 141, 146, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170], "balanc": [19, 59, 64, 75, 84, 88, 115, 118, 119, 127, 148], "018": [19, 20], "plot_6_data_dependent_explain": [19, 20], "766": 20, "auto_examples_explain": 20, "glm": [21, 22, 41, 42, 45, 63, 64, 68, 82, 84, 88, 89, 100, 106, 110, 112, 113, 115, 127, 150, 151], "logist": [21, 22, 41, 106, 112], "taiwan": [21, 22, 41, 85, 141], "credit": [21, 22, 41, 59, 84, 85, 92, 119, 127, 141], "linear": [21, 22, 39, 40, 41, 96, 100, 101, 103, 106, 107, 109, 110, 111, 127, 132, 134, 136, 137, 144, 145, 170], "bike": [21, 22, 41, 42, 45, 81, 89, 92, 108, 111, 115, 116, 118, 120, 121, 123, 124, 127, 137, 142], "share": [21, 22, 41, 42, 45, 92, 108, 111, 116, 118, 120, 127, 137, 142], "gam": [21, 22, 41, 53, 83, 106, 108, 110, 115, 116, 121, 127, 140, 141, 142, 143], "california": [21, 22, 41, 92, 108, 109, 114, 115, 122, 127, 143, 149, 151], "hous": [21, 22, 41, 82, 92, 108, 109, 114, 115, 122, 127, 143, 149, 151], "tree": [21, 22, 29, 30, 41, 49, 50, 62, 87, 94, 100, 101, 103, 106, 107, 108, 110, 115, 116, 124, 127, 131, 132, 133, 136, 137, 138, 139, 148, 149, 150, 151, 152, 153, 157, 167, 170], "taiwancredit": [21, 22, 23, 29, 33, 35, 37, 39, 41, 47, 49, 51, 53, 55, 57, 62, 80, 87, 92, 108, 109, 111, 112, 113, 114, 116, 118, 120, 121, 122, 123, 124, 127, 170], "fig": [21, 22, 41, 56, 62, 87, 106, 109, 123, 127, 138, 139], "xgb": [21, 22, 41, 42, 45, 70, 84, 96, 111, 115, 116, 122, 127, 150, 151, 152, 153, 163, 164, 165, 166], "ebm": [21, 22, 41, 64, 85, 88, 106, 108, 111, 116, 127, 137], "gami": [21, 22, 41, 106, 107, 108, 116, 127, 141, 142, 170], "net": [21, 22, 41, 106, 107, 108, 112, 116, 127, 141, 142, 148, 149, 170], "relu": [21, 22, 41, 82, 85, 106, 107, 111, 127, 141, 142, 146, 147, 170], "dnn": [21, 22, 41, 82, 85, 106, 113, 127, 147], "hpo": [21, 42, 45, 127], "search": [21, 42, 45, 109, 119, 127, 133, 148, 149], "accuraci": [21, 46, 60, 62, 63, 71, 72, 75, 86, 96, 103, 106, 117, 121, 123, 124, 127, 135, 136, 138, 140, 141, 146, 148, 150, 152, 153, 156, 170], "weakspot": [21, 46, 60, 69, 71, 72, 75, 76, 106, 117, 120, 121, 127, 152, 153, 157, 167, 170], "overfit": [21, 46, 60, 62, 63, 71, 72, 86, 96, 106, 108, 110, 113, 114, 115, 117, 118, 124, 127, 152, 153, 157, 167, 170], "reliabl": [21, 46, 60, 62, 63, 71, 72, 86, 94, 98, 106, 117, 124, 127, 140, 153, 159, 160, 161, 170], "robust": [21, 46, 60, 62, 63, 70, 86, 106, 108, 117, 127, 139, 146, 170], "resili": [21, 46, 60, 62, 63, 70, 71, 72, 86, 106, 117, 127, 152, 153, 164, 170], "fair": [21, 46, 60, 61, 65, 80, 86, 92, 106, 117, 127, 136, 144, 152, 170], "regist": [21, 43, 44, 66, 67, 73, 79, 81, 83, 84, 85, 106, 109, 111, 127, 170], "arbitrari": [21, 66, 73, 96, 106, 112, 127, 133, 170], "h2o": [21, 66, 68, 73, 127], "sklearn": [21, 66, 68, 69, 71, 72, 73, 82, 94, 96, 105, 106, 109, 110, 112, 114, 118, 121, 122, 127, 128, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "auto_examples_python": 21, "zip": 21, "auto_examples_jupyt": 21, "glmclassifi": [23, 44, 64, 88, 112, 127], "limit_b": [23, 27, 29, 33, 35, 37, 39, 47, 49, 51, 53, 55, 57, 62], "sex": [23, 27, 29, 33, 35, 37, 39, 47, 49, 51, 53, 55, 57, 62], "educ": [23, 27, 29, 33, 35, 37, 39, 47, 49, 51, 53, 55, 57, 62], "marriag": [23, 27, 29, 33, 35, 37, 39, 47, 49, 51, 53, 55, 57, 62], "ag": [23, 27, 29, 33, 35, 37, 39, 47, 49, 51, 53, 55, 57, 62, 83, 122], "flagdefault": [23, 27, 29, 33, 35, 37, 39, 47, 49, 51, 53, 55, 57, 62, 85, 87, 108, 109, 111, 112, 113, 114, 116, 118, 120, 121, 122, 123, 124], "evalu": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 84, 87, 88, 96, 100, 102, 103, 106, 111, 118, 119, 120, 121, 122, 123, 124, 127], "predict": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 48, 53, 68, 71, 72, 79, 87, 89, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "perform": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 57, 58, 68, 69, 70, 71, 72, 75, 76, 84, 88, 93, 94, 102, 106, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 127, 128, 131, 135, 136, 137, 141, 142, 146, 147, 148, 149, 157, 163, 164, 165, 166, 167], "model_diagnos": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 70, 81, 82, 85, 106, 112, 118, 120, 121, 122, 123, 124, 127], "accuracy_t": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 68, 69, 70, 75, 112, 118, 127], "acc": [23, 25, 27, 29, 31, 33, 35, 37, 39, 44, 47, 49, 59, 62, 68, 71, 75, 84, 87, 106, 118, 119, 120, 122, 123, 124, 127, 157, 163, 164, 165, 166, 167], "auc": [23, 25, 27, 29, 31, 33, 35, 37, 39, 44, 47, 49, 55, 62, 68, 71, 75, 102, 106, 113, 118, 122, 123, 124, 127, 157, 163, 164, 165, 166, 167], "f1": [23, 25, 27, 29, 31, 33, 35, 37, 39, 44, 47, 59, 62, 68, 71, 75, 84, 106, 118, 119, 122, 123, 124, 127, 157, 163, 164, 165, 166, 167], "logloss": [23, 25, 27, 29, 31, 33, 35, 37, 39, 44, 47, 68, 71, 75, 87, 118, 124, 127, 157, 163, 164, 165, 166, 167], "brier": [23, 25, 27, 29, 31, 33, 35, 37, 39, 44, 47, 53, 68, 71, 75, 87, 118, 124, 127, 157, 162, 163, 164, 165, 166, 167], "8083": 23, "7375": 23, "3745": 23, "4585": 23, "1431": 23, "8150": 23, "7356": 23, "3764": 23, "4458": 23, "1385": 23, "gap": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 50, 51, 52, 68, 69, 70, 71, 72, 75, 87, 89, 106, 118, 120, 124, 127, 148, 149, 157, 167], "0067": 23, "0019": [23, 34, 43, 48, 118], "0127": [23, 24], "0046": [23, 69], "coeffici": [23, 24, 91, 96, 100, 103, 106, 110, 113, 115, 127, 134, 137, 139, 142, 147, 149, 151, 153], "model_interpret": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 81, 82, 85, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 127], "glm_coef_plot": [23, 24, 112, 127], "tabl": [23, 24, 47, 48, 71, 72, 83, 84, 93, 96, 112, 119, 123, 124, 127], "glm_coef_tabl": [23, 24, 112, 127], "global_fi": [23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 108, 110, 111, 112, 113, 115, 116, 127], "local_fi": [23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 108, 110, 111, 112, 113, 115, 116, 127], "origin": [23, 24, 53, 59, 71, 94, 96, 98, 100, 101, 102, 103, 109, 115, 119, 121, 123, 124, 127, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 158], "scale": [23, 24, 82, 89, 101, 109, 115, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135], "721": [23, 41], "plot_0_glm_cl": [23, 41], "glmregressor": [24, 63, 112, 127], "mse": [24, 26, 28, 30, 32, 34, 36, 38, 40, 43, 48, 56, 63, 69, 70, 72, 76, 89, 102, 106, 118, 120, 121, 122, 123, 124, 127, 157, 163, 164, 165, 166, 167], "mae": [24, 26, 28, 30, 32, 34, 36, 38, 40, 43, 48, 50, 52, 63, 69, 70, 72, 89, 106, 118, 120, 122, 123, 124, 127, 157, 163, 164, 165, 166, 167], "r2": [24, 26, 28, 30, 32, 34, 36, 38, 40, 43, 48, 56, 63, 69, 70, 72, 89, 118, 122, 123, 124, 127, 143, 157, 163, 164, 165, 166, 167], "0225": 24, "1105": 24, "3467": 24, "1090": 24, "3593": 24, "0015": [24, 120], "311": [24, 41], "plot_0_glm_reg": [24, 41], "gamclassifi": [25, 53, 110, 127], "spline_ord": [25, 26, 110, 140, 143], "n_spline": [25, 26, 110, 140, 143], "lam": [25, 26, 110, 140, 143], "8363": 25, "9226": 25, "8387": 25, "3512": 25, "1130": 25, "8475": 25, "9306": 25, "8432": 25, "3406": 25, "1062": 25, "0112": 25, "0080": [25, 28], "0045": [25, 29], "0105": 25, "0068": 25, "global": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 81, 101, 106, 107, 127, 141, 142, 170], "global_effect_plot": [25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 108, 110, 111, 113, 115, 116, 127], "521": [25, 41, 67], "plot_1_gam_cl": [25, 41], "gamregressor": [26, 110, 127], "californiahousing_trim2": [26, 28, 30, 32, 82, 92, 127], "medhousev": [26, 28, 30, 32, 67, 82, 105, 109, 110, 114, 122], "0145": 26, "0867": 26, "7453": 26, "0152": 26, "0883": 26, "7257": 26, "0007": [26, 27, 40], "0017": [26, 35, 38], "0196": 26, "medinc": [26, 32, 67, 69, 72, 105, 109, 110, 115], "271": [26, 41], "plot_1_gam_reg": [26, 41], "treeclassifi": [27, 62, 103, 114, 127], "max_depth": [27, 28, 29, 30, 56, 57, 59, 63, 67, 70, 71, 72, 84, 105, 109, 114, 124, 127, 132, 138, 139, 148, 149, 152, 153], "8248": 27, "7716": 27, "4872": 27, "4281": 27, "1334": [27, 37], "8255": 27, "7605": 27, "4715": 27, "4527": 27, "1342": 27, "0111": 27, "0157": 27, "0246": 27, "0008": [27, 40, 44, 85, 112], "start": [27, 28, 92, 96, 109, 113, 114, 115, 125, 127, 132], "root": [27, 28, 29, 30, 87, 109, 114, 127, 131, 132, 135, 148, 149], "node": [27, 28, 91, 94, 103, 109, 113, 114, 115, 116, 127, 131, 132, 138, 139, 148, 149, 150, 151, 152, 153], "tree_glob": [27, 28, 29, 30, 109, 114, 127], "depth": [27, 28, 29, 30, 94, 106, 107, 108, 109, 114, 119, 121, 127, 132, 138, 139, 148, 149, 150, 151, 152, 153, 170], "th": [27, 94, 96, 98, 101, 103, 109, 110, 113, 115], "tree_loc": [27, 28, 29, 30, 109, 114, 127], "415": [27, 41], "plot_2_tree_cl": [27, 41], "treeregressor": [28, 103, 114, 127], "0184": 28, "0979": 28, "6762": 28, "0212": 28, "1059": [28, 106], "6178": 28, "0028": [28, 29], "0584": 28, "539": [28, 41], "plot_2_tree_reg": [28, 41], "figsclassifi": [29, 62, 109, 127], "max_it": [29, 30, 56, 108, 109, 134, 138, 139, 140, 143], "8246": 29, "7891": 29, "4926": 29, "4205": 29, "1312": [29, 35], "8218": [29, 35], "7637": 29, "4636": 29, "4378": 29, "1357": 29, "0255": 29, "0290": [29, 68], "0173": 29, "figs_heatmap": [29, 30, 109, 127], "tree_idx": [29, 30, 109, 127], "first": [7, 29, 30, 82, 83, 84, 87, 89, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 135, 136, 137, 141, 142, 148, 149], "775": [29, 41], "plot_3_figs_cl": [29, 41], "figsregressor": [30, 56, 109, 127], "0103": 30, "0705": 30, "8196": 30, "0114": 30, "0739": 30, "7941": 30, "0012": 30, "0034": 30, "0256": 30, "251": [30, 41], "plot_3_figs_reg": [30, 41], "xgb1classifi": [31, 115, 127], "max_bin": [31, 32, 70, 71, 72, 108, 115, 116, 136, 137, 150, 151, 152, 153], "min_bin_s": [31, 32, 115, 150, 151], "xgb1": [31, 32, 106, 115, 116, 127], "8512": [31, 75], "9311": 31, "8499": 31, "3327": 31, "1052": 31, "8450": 31, "9028": 31, "8368": 31, "4084": 31, "1214": 31, "0062": [31, 38], "0283": 31, "0131": [31, 32], "0758": 31, "0162": 31, "evid": [31, 32, 118, 121, 122, 127], "xgb1_woe": [31, 32, 115, 127], "xgb1_iv": [31, 32, 115, 127], "plot_4_xgb1_cl": [31, 41], "xgb1regressor": [32, 115, 127], "500": [32, 43, 95, 103, 127, 146, 147], "0816": 32, "7704": 32, "0136": 32, "0822": 32, "7546": 32, "0005": [32, 34, 38, 40, 43, 48, 82, 118], "0006": [32, 36, 43], "0159": 32, "849": [32, 41], "plot_4_xgb1_reg": [32, 41], "8219": [33, 47, 118], "7978": [33, 47, 118], "4759": [33, 47, 118], "4196": [33, 47, 118], "1316": [33, 47, 118], "8290": [33, 47, 118], "7728": [33, 47, 118], "4797": [33, 47, 118], "4252": [33, 47, 118], "1319": [33, 47, 118], "0071": [33, 47, 118], "0251": [33, 47, 118], "0038": [33, 44, 47, 118], "0057": [33, 38, 43, 47, 118], "0004": [33, 40, 44, 47, 118, 120], "pay_1": [33, 35, 37, 39, 47, 49, 51, 53, 57, 62, 85, 87, 113, 118, 121, 122, 124], "global_ei": [33, 34, 35, 36, 37, 38, 108, 111, 116, 127], "local_ei": [33, 34, 35, 36, 37, 38, 108, 111, 116, 127], "236": [33, 41], "plot_5_xgb2_cl": [33, 41], "0090": [34, 43, 48, 118], "0669": [34, 43, 48, 118], "7382": [34, 43, 48, 118], "0095": [34, 43, 48, 118], "0688": [34, 43, 48, 118], "7287": [34, 43, 48, 118], "643": [34, 41], "plot_5_xgb2_reg": [34, 41], "explainableboostingclassifi": [35, 64, 88, 108, 127], "interact": [35, 36, 81, 82, 85, 94, 98, 99, 101, 103, 106, 112, 113, 136, 137, 140, 141, 142, 143, 152, 153], "7896": 35, "4778": 35, "4239": 35, "1327": 35, "8272": 35, "7753": 35, "4792": 35, "4222": 35, "0054": 35, "0143": 35, "0013": [35, 40], "0016": [35, 40, 68], "641": [35, 41], "plot_6_ebm_cl": [35, 41], "explainableboostingregressor": [36, 108, 127], "0072": 36, "0589": 36, "7918": 36, "0078": 36, "0615": 36, "7779": 36, "0025": 36, "0140": 36, "821": [36, 41], "plot_6_ebm_reg": [36, 41], "gaminetclassifi": [37, 111, 127], "8168": 37, "7732": 37, "4473": 37, "4354": 37, "1366": 37, "8228": 37, "7667": 37, "4484": 37, "4292": 37, "0060": 37, "0065": 37, "0011": [37, 44], "0061": [37, 43], "0033": [37, 69], "58": [37, 41, 68, 73], "145": [37, 41], "plot_7_gaminet_cl": [37, 41], "gaminetregressor": [38, 111, 127], "0535": [38, 43], "8352": 38, "0552": 38, "8235": 38, "0116": [38, 43], "892": [38, 41], "plot_7_gaminet_reg": [38, 41], "reludnnclassifi": [39, 55, 113, 127], "hidden_layer_s": [39, 40, 113, 146, 147], "l1_reg": [39, 40, 113, 146, 147], "0002": [39, 40, 113], "learning_r": [39, 40, 70, 71, 72, 108, 113, 136, 137, 138, 139, 141, 142, 146, 147], "8201": 39, "7727": 39, "4750": 39, "4331": 39, "1356": 39, "8298": 39, "7708": 39, "4836": 39, "4251": 39, "1318": 39, "0097": 39, "0020": 39, "0086": 39, "0081": 39, "0039": 39, "llm": [39, 40, 127], "llm_summari": [39, 40, 113, 127], "count": [39, 40, 81, 89, 95, 98, 99, 100, 101, 102, 103, 108, 111, 112, 113, 115, 116, 118, 120, 121, 123, 124, 127, 136, 137, 146, 147], "respons": [39, 40, 47, 81, 82, 83, 84, 85, 87, 89, 92, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 127, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "mean": [39, 40, 93, 94, 95, 96, 98, 100, 102, 103, 109, 110, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127, 128, 131, 133, 135, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 163, 164, 165, 166], "std": [39, 40, 95, 127], "4462": 39, "1024": 39, "3032": 39, "6443": 39, "6252": 39, "4379": 39, "1103": 39, "3133": 39, "5791": 39, "7350": 39, "2345": 39, "1164": 39, "3208": 39, "5766": 39, "7346": 39, "1361": 39, "2307": 39, "4214": 39, "6007": 39, "4976": 39, "992": 39, "1704": 39, "3761": 39, "5924": 39, "5489": 39, "321": [3, 10, 39], "nan": [39, 49, 70, 71, 72, 136, 137], "7268": 39, "322": [39, 49, 67], "7370": 39, "323": 39, "6499": 39, "324": 39, "6726": 39, "325": 39, "7215": 39, "326": 39, "parallel": [39, 40, 127, 129, 131, 133, 136, 137, 141, 142], "coordin": [39, 40, 127], "llm_pc": [39, 40, 113, 127], "violin": [39, 40, 127], "llm_violin": [39, 40, 113, 127], "one": [39, 40, 71, 72, 75, 76, 81, 83, 84, 89, 91, 94, 95, 96, 98, 101, 102, 106, 108, 111, 112, 113, 114, 115, 116, 118, 119, 124, 125, 132, 133, 141, 142, 148, 149], "pay_3": [39, 113], "109": [39, 41], "plot_8_reludnn_cl": [39, 41], "0192": 40, "9784": 40, "0009": [40, 44], "0199": 40, "9709": 40, "0075": 40, "215": [40, 96, 106], "4711": 40, "1584": 40, "0309": 40, "207": 40, "4700": 40, "1648": 40, "0327": 40, "185": 40, "4592": 40, "1754": 40, "0324": [40, 111], "148": 40, "4698": 40, "1601": 40, "0003": 40, "0340": 40, "126": 40, "3969": 40, "1574": 40, "0186": 40, "106": 40, "3815": 40, "1582": 40, "0218": 40, "6136": 40, "1315": 40, "0783": 40, "62": [40, 49, 59, 64, 83], "6301": 40, "1698": 40, "0750": 40, "3266": 40, "1242": 40, "0542": 40, "45": [40, 102], "2920": 40, "1354": [40, 49], "0551": 40, "6213": 40, "1345": 40, "6046": 40, "1563": 40, "2811": 40, "1128": 40, "0560": 40, "5604": 40, "1171": [40, 50, 52], "0014": 40, "0784": 40, "2250": 40, "1211": 40, "0288": 40, "2636": 40, "1341": 40, "0604": 40, "5663": 40, "1579": 40, "0037": [40, 69, 95], "5213": 40, "1795": 40, "0010": 40, "0441": 40, "5491": 40, "1967": 40, "0451": 40, "6115": 40, "1256": 40, "0023": 40, "5365": 40, "1195": 40, "4459": 40, "1685": 40, "0024": [40, 43], "2393": 40, "1061": 40, "0342": 40, "3573": 40, "1770": 40, "0404": 40, "4821": 40, "1186": 40, "0135": 40, "0625": [40, 44], "0238": 40, "5134": 40, "0839": 40, "0138": 40, "4321": 40, "1450": 40, "0164": 40, "2187": 40, "1037": 40, "0203": 40, "0751": 40, "4558": 40, "0107": 40, "0240": 40, "1400": 40, "0890": 40, "0040": 40, "0302": 40, "1801": 40, "0305": 40, "0385": 40, "5209": 40, "0035": 40, "0884": 40, "4773": 40, "0875": 40, "6258": 40, "0943": 40, "274": [40, 41], "plot_8_reludnn_reg": [40, 41], "078": 41, "auto_examples_model": 41, "defin": [43, 44, 93, 96, 97, 99, 101, 102, 103, 113, 118, 119, 121, 122, 127, 131, 132, 134, 136, 137, 139, 142, 147, 148, 149, 151, 153], "hyperparamet": [43, 44, 108, 109, 110, 111, 112, 113, 114, 115, 116, 127], "space": [43, 44, 91, 94, 96, 97, 109, 110, 119, 123, 124, 127, 133, 136, 137, 141, 142, 157, 167], "paramet": [43, 44, 89, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "300": [43, 127], "eta": [43, 113, 115, 116, 150, 151, 152, 153], "reg_lambda": [43, 115, 116, 150, 151, 152, 153], "reg_alpha": [43, 115, 116, 150, 151, 152, 153], "tune": [43, 44, 111, 115, 127, 141, 142], "grid_result": 43, "model_tun": [43, 44, 127], "metric": [43, 44, 49, 50, 52, 55, 56, 59, 62, 63, 64, 71, 72, 75, 76, 83, 84, 86, 87, 89, 90, 93, 102, 106, 117, 118, 120, 121, 122, 123, 124, 127, 133, 136, 138, 140, 141, 143, 146, 148, 150, 152, 157, 159, 163, 164, 165, 166, 167], "rank": [43, 44, 87, 89, 96, 102, 106, 112, 115, 122, 127], "param": [43, 44, 68, 127, 132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "1667": 43, "0063": 43, "1035": 43, "9468": 43, "4156": 43, "0064": 43, "3481": 43, "4897": 43, "78": [43, 63, 65], "0117": 43, "4079": 43, "79": 43, "4491": 43, "0118": 43, "4244": 43, "4082": 43, "refit": [43, 44, 115, 127, 150, 151], "get_params_rank": [43, 44], "gridsearch": [43, 44], "8346": 43, "0559": 43, "8193": 43, "0153": 43, "768": [43, 45], "plot_0_grid": [43, 45], "scipi": [44, 97, 125, 127, 133, 135], "l1_regular": [44, 85, 112, 144, 145], "stat": [44, 97, 127], "l2_regular": [44, 112, 144, 145], "rs_result": 44, "n_run": [44, 127], "025155116205562347": 44, "07370657821383614": 44, "6086": 44, "0469": 44, "09163982314016503": 44, "07232520009689224": 44, "0629": 44, "08589738748866935": 44, "06606431654102282": 44, "07558524321360338": 44, "059096426804477166": 44, "09285538910944417": 44, "06192882360213872": 44, "0470": 44, "0801649627572255": 44, "0009505206902733599": 44, "96": 44, "0473": 44, "07054458515086691": 44, "002443422808146689": 44, "97": [44, 50, 59, 64], "0474": [44, 71], "0200826243066503": 44, "0038925653368613645": 44, "98": [44, 92, 127], "020239411195815772": 44, "002493911719174813": 44, "99": [44, 127], "004021232911187034": 44, "007049361449564151": 44, "6722": 44, "7309": 44, "6965": 44, "6047": 44, "2088": 44, "6690": 44, "7318": 44, "6976": 44, "6073": 44, "2095": 44, "0032": 44, "0026": 44, "6723": 44, "7308": 44, "6968": 44, "6685": 44, "7317": 44, "6973": 44, "2096": 44, "092": [44, 45], "plot_0_random": [44, 45], "57": 45, "860": 45, "auto_examples_models_hpo": 45, "confus": [47, 71, 118, 127, 154], "matrix": [47, 71, 91, 94, 96, 98, 113, 116, 118, 127, 133, 134, 137, 139, 142, 146, 147, 148, 149, 151, 153, 154], "roc": [47, 71, 118, 127, 154], "recal": [47, 71, 106, 118, 119, 127, 154], "precis": [47, 71, 94, 106, 118, 119, 121, 127, 154], "accuracy_plot": [47, 62, 63, 87, 89, 118, 127], "residu": [47, 48, 71, 72, 75, 76, 106, 108, 109, 111, 121, 122, 123, 127, 137, 139, 142, 147, 149, 151, 153, 155], "respect": [47, 48, 93, 96, 97, 100, 103, 109, 113, 119, 121, 123, 124, 127, 135, 141, 142], "accuracy_residu": [47, 48, 75, 76, 118, 127], "flagdefault_predict": 47, "217": [], "plot_0_accuracy_cl": [47, 60], "cnt_predict": [48, 118], "567": [], "plot_0_accuracy_reg": [48, 60], "slice_method": [49, 50, 51, 52, 62, 63, 87, 89, 120, 124, 127, 157, 167], "slice_featur": [49, 50, 51, 52, 62, 63, 69, 71, 72, 75, 76, 87, 89, 120, 124, 127, 157, 167], "min_sampl": [49, 50, 51, 52, 120, 124, 127, 157, 167], "test_acc": [49, 51], "train_acc": [49, 51], "1350": 49, "5440": 49, "7052": [], "6888": [], "pay_2": [49, 124], "3750": [], "5625": [], "69": [3, 49, 51], "244": 49, "8551": [], "7336": [], "1215": [], "2500": [], "191": [49, 124], "800": [49, 68, 124], "6963": [], "6675": [], "1111": [], "2222": [], "268": 49, "956": 49, "7276": [], "7207": [], "0069": [], "6250": [], "7205": [], "7164": [], "0041": [], "3333": 95, "5556": [], "351": 49, "1430": [7, 10, 49], "6154": [], "6119": [], "357": 49, "6234": [], "6303": [], "set": [49, 50, 51, 55, 62, 63, 81, 82, 83, 84, 85, 87, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "4444": [], "1265": 49, "5090": 49, "6964": [], "6876": [], "0088": [], "test_auc": 49, "train_auc": 49, "752": 49, "2936": 49, "6478": [], "7071": [], "0593": [], "3521": 49, "13975": 49, "6350": [], "6970": [], "0620": [], "513": 49, "2154": 49, "5481": [], "6325": [], "0844": [], "5250": [], "7179": [], "1929": 95, "6314": [], "4400": [], "2778": [], "602": 49, "2528": 49, "6994": [], "0282": [], "6862": [], "6798": [], "plot_1_weakspot_cl": [49, 60], "test_ms": [50, 52], "train_ms": [50, 52], "445": [50, 52], "1736": [50, 52], "0219": [], "0197": [], "0022": [], "290": 50, "1168": 50, "0307": [], "0304": [], "2042e": [], "85": [50, 67], "377": 50, "0207": [], "1186e": [], "0630e": [], "155": 50, "538": 50, "0158": [], "2337e": [], "365": 50, "0110": [], "7680e": [], "test_ma": [50, 52], "train_ma": [50, 52], "1163": [], "1106": [], "0058": 95, "735": 50, "2911": 50, "1046": [], "1031": [], "2826": [], "3696": [], "283": 50, "1495": [], "1352": [], "2214": 50, "8710": 50, "0749": [], "0747": [], "plot_1_weakspot_reg": [50, 60], "bill_amt1": [51, 55, 85], "3781": [], "131": 51, "7561": [], "8473": [], "0912": [], "7167": [], "8037": [], "117": 51, "6333": [], "7094": [], "0761": [], "7311": [], "7953": [], "160": 51, "6000": [], "7000": 67, "1000": [68, 109, 127, 141, 142, 146, 147], "9237": [], "9558": [], "338": 51, "5797": [], "6834": [], "2814": [], "3685": [], "7083": [], "8133": [], "1050": [], "6715": [], "73": 51, "6500": [], "7808": [], "1308": [], "832": [], "plot_2_overfit_cl": [51, 60], "1743": 52, "0096": [], "285": 52, "5000": [95, 96, 136, 137, 141, 142], "6636": [], "103": 52, "366": 52, "0421": [], "0350": [], "2318": [], "173": 52, "645": 52, "0250": [], "0198": [], "0052": [], "1364": [], "240": 52, "882": 52, "2546": [], "3940": [], "105": 52, "432": 52, "197": 106, "4924": 52, "1649": 52, "6580": 52, "0639": [], "005": [], "507": [], "plot_2_overfit_reg": [52, 60], "calcul": [53, 54, 87, 89, 93, 94, 96, 97, 98, 100, 102, 103, 108, 109, 110, 111, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 141, 142], "between": [53, 54, 57, 58, 71, 72, 75, 76, 84, 87, 89, 91, 93, 94, 96, 97, 98, 99, 101, 102, 103, 108, 110, 111, 112, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127, 131, 133, 135, 148, 149, 159, 163, 165, 166], "un": [53, 54], "reliability_dist": [53, 54, 121, 127, 163], "bandwidth": [53, 54, 62, 63, 72, 99, 127, 162], "against": [53, 54, 57, 58, 71, 72, 87, 88, 89, 94, 108, 111, 116, 118, 121, 123, 125, 127], "reliability_margin": [53, 54, 121, 127], "bin": [53, 54, 59, 62, 63, 71, 72, 84, 87, 89, 97, 98, 106, 108, 115, 116, 117, 120, 121, 122, 124, 127, 130, 136, 137, 150, 151, 152, 153, 157, 160, 161, 167], "calibr": [53, 71, 87, 127, 158], "probabl": [53, 87, 98, 99, 101, 103, 113, 118, 121, 122, 123, 127, 136, 138, 140, 141, 146, 147, 148, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "v": [53, 82, 85, 96, 127, 137, 139, 142, 147, 149, 151, 153, 158], "reliability_calibr": [53, 121, 127], "diagram": [53, 62, 71, 114, 127, 132, 161], "reliability_perf": [53, 62, 87, 121, 127], "reliability_t": [53, 54, 121, 127], "1258": 53, "1276": 53, "261": [], "plot_3_reliability_cl": [53, 60], "empir": [54, 72, 93, 116, 127, 129, 162], "coverag": [54, 63, 71, 72, 127, 159, 162], "averag": [54, 71, 72, 84, 89, 94, 96, 98, 99, 100, 101, 102, 103, 109, 112, 113, 114, 115, 118, 120, 121, 124, 127, 131, 133, 141, 142, 162], "alpha": [54, 55, 56, 57, 58, 62, 63, 71, 72, 87, 89, 121, 122, 123, 127, 130, 132, 135, 148, 149, 158, 159, 160, 161, 162, 163, 165, 166], "9065": [], "2391": [], "902": [75, 77], "plot_3_reliability_reg": [54, 60], "robustness_perf": [55, 56, 62, 63, 70, 87, 89, 123, 127], "perturb": [55, 56, 87, 89, 100, 106, 127], "perturb_featur": [55, 56, 87, 89, 123, 127], "bill_amt2": 55, "bill_amt3": 55, "perturb_s": [55, 56, 87, 89, 123, 127], "perturb_method": [55, 56, 87, 89, 123, 127], "worst": [55, 56, 57, 58, 62, 63, 71, 72, 75, 76, 121, 122, 127, 163, 164, 165, 166], "percent": [55, 56, 62, 63, 93, 127], "robustness_perf_worst": [55, 56, 62, 63, 87, 89, 123, 127], "plot_4_robustness_cl": [55, 60], "being": [56, 98, 102, 103, 106, 115, 119, 122], "555": [], "plot_4_robustness_reg": [56, 60], "scenario": [57, 58, 62, 63, 87, 89, 93, 106, 121, 122], "resilience_perf": [57, 58, 62, 63, 70, 87, 89, 122, 127], "resilience_method": [57, 58, 62, 63, 87, 89, 122, 127, 163, 164, 165, 166], "hard": [57, 58, 113, 122, 123, 127, 134, 135, 146, 147, 163, 164, 165, 166], "cluster": [57, 58, 93, 109, 122, 127, 128, 132, 163, 164, 165, 166], "margin": [57, 58, 91, 100, 103, 106, 111, 112, 113, 127, 141, 142, 155, 157, 160, 165, 166, 167], "resilience_dist": [57, 58, 62, 63, 87, 89, 122, 127, 163], "immut": [57, 58, 122, 127, 163, 164, 165, 166], "immu_featur": [57, 58, 62, 63, 87, 89, 122, 127, 163, 164, 165, 166], "n_cluster": [57, 58, 122, 127, 128, 163, 165, 166], "resilience_shift_histogram": [57, 58, 122, 127], "resilience_shift_dens": [57, 58, 122, 127], "762": [], "plot_5_resilience_cl": [57, 60], "653": [], "plot_5_resilience_reg": [58, 60], "mono_increasing_list": [59, 115, 116, 141, 142, 150, 151, 152, 153], "mortgag": [59, 75, 84, 92, 119, 127], "mono_decreasing_list": [59, 115, 141, 142, 150, 151, 152, 153], "amount": [59, 84, 119, 123, 135], "past": [59, 84, 119], "due": [59, 84, 96, 97, 106, 110, 113, 116, 119, 123, 124], "delinqu": [59, 84], "inquiri": [59, 84], "open": [59, 84, 106], "trade": [59, 84, 119, 127], "xgb2_monoton": [59, 119], "metrics_result": [59, 64, 88, 119], "model_fair": [59, 84, 119, 127], "air": [59, 64, 84, 88, 119, 127], "group_categori": [59, 64, 88, 119, 127], "reference_group": [59, 64, 88, 119, 127], "protected_group": [59, 64, 88, 119, 127], "favorable_threshold": [59, 64, 88, 119, 127], "performance_metr": [59, 119, 127], "group": [59, 64, 83, 84, 88, 100, 113, 119, 121, 122, 127], "refer": [59, 64, 78, 83, 84, 88, 92, 98, 101, 109, 110, 115, 119, 121, 122, 127, 148, 149], "protect": [59, 64, 83, 84, 88, 119, 127], "612": [], "745": [], "segment": [59, 64, 77, 83, 84, 86, 91, 92, 106, 117, 122, 124, 127, 152, 153], "segmented_result": [59, 64, 88, 119], "segment_featur": [59, 64, 75, 76, 88, 119, 127], "segment_bin": [59, 64, 76, 88, 119, 127], "lower": [59, 64, 84, 88, 89, 99, 110, 118, 121, 124, 134, 135], "bound": [59, 64, 108, 124, 134, 136, 137], "upper": [59, 64, 92, 96, 108, 124, 127, 134], "306": [59, 64], "4485": [], "6607": [], "601": [59, 64], "4767": [], "6426": [], "47": [59, 64], "1027": [59, 64], "6319": [], "6556": [], "1864": [59, 64], "6486": [], "94": [59, 64], "20384": [59, 64], "87": [59, 64], "8781": [], "8266": [], "binning_result": [59, 119], "binning_dict": [59, 119, 127], "id": [59, 109, 112, 114, 127, 132], "configur": [59, 93, 99, 118, 119, 124, 127], "7450": [], "6120": [], "7163": [], "5049": [], "5064": [], "9776": [], "5127": [], "0048": [], "9273": [], "5276": [], "0160": [], "8439": [], "5374": [], "5674": [], "9873": [], "3577": [], "5718": [], "9743": [], "3611": [], "5805": [], "9321": [], "3713": [], "5921": [], "8310": [], "3991": [], "5918": [], "6627": [], "4014": [], "4346": [], "3877": [], "4388": 95, "9928": 68, "3915": [], "4569": [], "9530": [], "4011": [], "4852": [], "8571": [], "4290": [], "5129": [], "7078": [], "4340": [], "4720": [], "9962": [], "4153": [], "4746": [], "9865": [], "4179": [], "4921": [], "9476": [], "4276": [], "5191": [], "8632": [], "4516": [], "5259": [], "6781": [], "4835": [], "0036": [], "4054": [], "4873": [], "9920": [], "4087": [], "5048": [], "9508": [], "4186": [], "5227": [], "8739": [], "4412": [], "5172": [], "7055": [], "4302": [], "thresholding_result": [59, 119], "3324": [], "8862": [], "6757": [], "8917": [], "765": [], "plot_6_fair": [59, 60], "553": [], "auto_examples_test": 60, "model_compar": [62, 63, 70, 81, 82, 85, 87, 89, 106, 127], "reliability_bandwidth": [62, 63, 87, 89, 127], "064": [], "plot_0_compare_classif": [62, 65], "xgboost": [63, 70, 71, 72, 84, 94, 106, 107, 119, 122, 125, 127, 170], "xgbregressor": [63, 70, 72], "xgb7": [63, 70, 84, 89], "reliability_coverag": [63, 89, 127], "466": [69, 73], "plot_0_compare_regress": [63, 65], "model_fairness_compar": [64, 84, 88, 127], "glm_air": 64, "ebm_air": 64, "7124": [], "6453": [], "8326": [], "7819": [], "8251": [], "4405": [], "9017": [], "6953": [], "6900": [], "5457": [], "7452": [], "6506": [], "6338": [], "7080": [], "6135": [], "7131": [], "6028": [], "8209": [], "7490": [], "8734": 95, "7147": [], "8212": [], "291": [], "plot_1_compare_fair": [64, 65], "auto_examples_testing_compar": 65, "comparison": [65, 75, 76, 78, 80, 90, 106, 124, 127, 136, 138, 144, 145, 148, 152, 170], "californiahousing_raw": [67, 92, 105, 127], "houseag": 67, "averoom": [67, 82, 92, 115, 127], "avebedrm": [67, 82, 92, 127], "popul": [67, 82, 92, 97, 100, 112, 115, 121, 122, 124, 127, 159, 163], "aveoccup": [67, 82, 92, 109, 110, 115, 127], "latitud": [67, 110, 115], "3252": 67, "9841": [], "3014": 67, "2381": [], "9719": [], "2401": 67, "1098": [], "86": 67, "2574": 67, "52": [67, 96], "2881": [], "0734": [], "496": 67, "8023": [], "6431": 67, "8174": [], "0731": [], "558": [51, 60, 67], "5479": [], "8462": 67, "2819": [], "0811": [], "565": 67, "1815": [], "20635": 67, "5603": 67, "0455": [], "1333": [], "845": 67, "20636": 67, "5568": 67, "1140": [], "3158": [], "356": 67, "1228": [], "20637": 67, "2055": [], "1201": [], "1007": 67, "3256": [], "20638": 67, "8672": 67, "3295": [], "1719": 95, "741": 67, "1232": 106, "20639": 67, "3886": 67, "2547": [], "1623": [], "1387": 67, "6170": [], "longitud": [67, 110, 115], "122": 67, "526": 67, "585": 67, "413": [67, 94], "422": [67, 94], "121": 67, "781": 67, "771": 67, "923": 67, "847": 67, "894": 67, "20640": 67, "lightgbm": [67, 105], "lgbmregressor": [67, 105], "lgbm2": [67, 105], "lgbm_2": [67, 105], "save": [67, 69, 127, 141, 142, 170], "fit": [67, 68, 69, 70, 71, 72, 93, 94, 96, 98, 99, 100, 101, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 163, 164, 165, 166, 167, 170], "model_sav": [67, 105, 127], "ch_lgbm_2": [67, 105], "pkl": [67, 105, 127], "system": [67, 69, 81, 89, 98, 99, 100, 101, 102, 103, 106, 108, 111, 112, 115, 116, 118, 120, 121, 123, 124], "pipelin": [67, 68, 69, 70, 78, 105, 106, 127, 132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 170], "make_pipelin": [67, 68, 69, 70, 105, 127], "lgbm_2_load": [67, 105], "post": [67, 68, 69, 78, 81, 82, 85, 96, 102, 106, 127, 170], "hoc": [67, 68, 69, 78, 81, 82, 85, 96, 102, 106, 127, 170], "595": [], "plot_0_model_train": [67, 73], "If": [68, 84, 93, 94, 98, 99, 101, 105, 109, 112, 115, 119, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "neither": 68, "nor": 68, "we": [68, 69, 70, 71, 72, 84, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127, 131, 132, 134, 141, 142], "still": [68, 94, 98, 99, 108, 111, 113, 115, 116, 122], "For": [68, 69, 70, 84, 87, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 147, 148, 149, 151, 153, 157, 163, 164, 165, 166, 167], "simul": [68, 80, 92, 100, 103, 110, 115, 119, 127, 170], "simpl": [68, 98, 113, 124, 132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "binari": [68, 83, 84, 85, 87, 92, 93, 98, 99, 100, 101, 102, 103, 106, 110, 112, 113, 114, 115, 117, 119, 122, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "statsmodel": [68, 96, 125], "sm": 68, "sum": [68, 84, 94, 96, 97, 106, 107, 108, 110, 111, 112, 113, 115, 116, 123, 127, 137, 138, 139, 142, 147, 148, 149, 151, 153, 170], "axi": [68, 87, 88, 89, 100, 103, 108, 109, 111, 112, 113, 115, 116, 121, 122, 123, 124, 127, 155, 165, 166], "normal": [68, 87, 89, 94, 96, 103, 109, 110, 112, 113, 115, 116, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 148, 149], "glm_binom": 68, "famili": 68, "binomi": 68, "glm_result": 68, "next": [68, 102, 109, 110, 114, 115, 121, 122, 123, 124], "def": 68, "predict_proba_func": [68, 127], "proba": [68, 138, 141, 148, 150, 152], "exog": 68, "vstack": 68, "t": [68, 94, 105, 127, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "predict_func": [68, 127], "pleas": [68, 70, 71, 72, 94, 98, 99, 102, 103, 111, 113, 126, 132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "make": [68, 70, 94, 96, 99, 100, 102, 106, 108, 110, 111, 112, 113, 114, 116, 118, 119, 124, 135, 141, 142, 150, 151, 152, 153], "sure": [68, 70], "ar": [68, 70, 83, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "train_x": [68, 69, 70, 71, 72, 105, 127], "train_i": [68, 69, 70, 71, 72, 105, 127], "test_x": [68, 69, 70, 71, 72, 105, 127], "test_i": [68, 69, 70, 71, 72, 105, 127], "feature_nam": [68, 69, 70, 71, 72, 115, 124, 127, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "target_nam": [68, 69, 70, 71, 72, 127, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "9550": 68, "9547": 68, "1088": 68, "0337": 68, "9600": 68, "9944": [3, 68], "0899": 68, "0050": 68, "0053": 68, "0189": 68, "0047": 68, "explain": [68, 69, 78, 80, 94, 98, 99, 100, 101, 102, 103, 106, 107, 115, 118, 127, 135, 136, 137, 170], "tool": [68, 69, 100, 101, 103, 105, 106, 118, 127], "validataion": [68, 69], "624": [], "plot_1_register_arbitrari": [68, 73], "assum": [69, 70, 71, 72, 93, 96, 101, 102, 103, 105, 110, 113, 114, 121, 123, 124, 130, 133, 141, 142], "have": [69, 70, 71, 72, 87, 89, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 108, 109, 110, 111, 113, 114, 118, 120, 121, 122, 123, 124, 127, 131, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "outsid": [69, 70, 71, 72, 89, 98, 101, 121, 127, 130, 159], "no_progress": 69, "init": [69, 141, 142], "verbos": [69, 131, 134, 141, 142, 146, 147], "fetch_california_h": [69, 70, 72], "estim": [1, 2, 3, 4, 5, 6, 7, 8, 9, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 89, 98, 101, 103, 108, 109, 110, 111, 112, 115, 116, 118, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "h2ogradientboostingestim": 69, "h2o_data": 69, "h2ofram": 69, "reshap": 69, "h2o_data_train": 69, "h2o_data_test": 69, "split_fram": 69, "seed": [69, 93, 127, 128, 132, 135, 138, 139, 141, 142, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "2023": [69, 106], "glm_model": 69, "training_fram": 69, "mojo_file_path": 69, "save_mojo": 69, "path": [69, 94, 103, 106, 109, 114, 127, 131, 132, 141, 142, 148, 149], "Then": [69, 82, 87, 89, 93, 96, 97, 105, 113, 122, 123], "mojo": 69, "memori": [1, 2, 3, 4, 5, 6, 7, 8, 9, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 133, 141, 142, 146, 147], "imported_model": 69, "import_mojo": 69, "as_data_fram": 69, "ravel": [69, 70, 105], "gbm": 69, "2423": 69, "3396": 69, "8180": 69, "2377": 69, "3429": 69, "8216": 69, "239": [], "plot_1_register_h2o": [69, 73], "": [70, 80, 81, 87, 94, 96, 97, 98, 99, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "model_select": [70, 71, 72, 105], "train_test_split": [70, 71, 72, 105], "test_siz": [70, 71, 72, 105], "base_scor": [70, 71, 72], "booster": [70, 71, 72], "gbtree": [], "callback": [70, 71, 72], "colsample_bylevel": [70, 71, 72], "colsample_bynod": [70, 71, 72], "colsample_bytre": [70, 71, 72], "early_stopping_round": [70, 71, 72, 136, 137], "enable_categor": [70, 71, 72], "eval_metr": [70, 71, 72], "gamma": [70, 71, 72, 96, 115, 116, 134, 150, 151, 152, 153], "gpu_id": [70, 71, 72], "grow_polici": [70, 71, 72], "depthwis": [], "importance_typ": [70, 71, 72], "interaction_constraint": [70, 71, 72], "300000012": [], "256": [108, 131, 136, 137, 150, 151, 152, 153], "max_cat_to_onehot": [70, 71, 72], "max_delta_step": [70, 71, 72], "max_leav": [70, 71, 72, 132, 136, 137], "min_child_weight": [70, 71, 72], "miss": [70, 71, 72, 95, 103, 108], "monotone_constraint": [70, 71, 72], "n_job": [70, 71, 72, 127, 129, 131, 133, 136, 137, 141, 142], "num_parallel_tre": [70, 71, 72], "predictor": [70, 71, 72, 88, 93, 99, 100, 101, 102, 106, 108, 110, 111, 112, 116, 124], "pipeline_xgb2": 70, "extern": [70, 71, 72, 73, 90, 105, 127], "pipeline_xgb7": 70, "2533": 70, "3524": 70, "8102": 70, "2780": 70, "3617": 70, "7894": 70, "0247": 70, "0092": 70, "0208": 70, "0491": 70, "1565": 70, "9632": 70, "2224": 70, "3040": 70, "8315": 70, "1733": 70, "1475": [70, 71], "1317": [70, 71], "292": [], "plot_1_register_sklearn": [70, 73], "input": [71, 72, 87, 89, 92, 98, 99, 100, 101, 102, 103, 111, 112, 113, 118, 122, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "xgbclassifi": [71, 84], "make_circl": 71, "n_sampl": [71, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "nois": [71, 87, 89, 100, 106, 123, 127], "shape": [71, 72, 95, 108, 110, 111, 115, 116, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "prediction_proba": [71, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "predict_proba": [71, 100, 127, 136, 138, 140, 141, 146, 148, 150, 152], "data_param": [71, 72], "scored_test": [71, 72], "test_accuracy_t": [71, 72], "8756": 71, "9539": 71, "8722": 71, "2946": 71, "0889": 71, "8050": 71, "8920": 71, "8152": 71, "4262": 71, "1363": 71, "0706": 71, "0619": 71, "0570": 71, "onli": [71, 82, 85, 89, 94, 97, 100, 102, 103, 106, 108, 110, 111, 112, 113, 114, 115, 116, 119, 120, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 159, 160, 161, 162, 163, 165, 166], "classifi": [71, 94, 106, 112, 118, 122, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 144, 146, 148, 154, 158, 161], "test_accuracy_plot": 71, "interest": [71, 72, 87, 89, 94, 98, 99, 100, 101, 106, 118, 119, 120, 121, 124, 127, 155, 165, 166], "test_accuracy_residu": [71, 72], "weak": [71, 72, 106, 120, 124, 127], "region": [71, 72, 87, 89, 106, 113, 120, 124, 127, 157, 163, 165, 166, 167], "test_weakspot": [71, 72], "test_overfit": [71, 72], "test_reliability_perf": 71, "unreli": [71, 72, 98, 121, 127, 159], "test_reliability_calibr": 71, "interv": [71, 72, 87, 89, 98, 113, 121, 134], "test_reliability_t": [71, 72], "1443": 71, "test_reliability_dist": [71, 72], "relationship": [71, 72, 91, 94, 96, 98, 99, 101, 102, 103, 110, 112, 113, 115, 118, 121, 123], "width": [71, 72, 93, 95, 97, 118, 119, 121, 127], "test_reliability_margin": [71, 72], "how": [71, 72, 79, 81, 82, 85, 87, 89, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "under": [71, 72, 87, 89, 94, 96, 106, 112, 118, 121, 122, 123, 124, 127], "test_resilience_perf": [71, 72], "remain": [71, 72, 75, 76, 87, 89, 93, 96, 99, 100, 103, 112, 113, 121, 122, 123, 163, 165, 166], "test_resilience_dist": [71, 72], "test_resilience_shift_dens": [71, 72], "test_resilience_shift_histogram": [71, 72], "258": [], "plot_2_test_wo_model_cl": [71, 73], "2586": 72, "3557": 72, "8070": 72, "2709": 72, "3669": 72, "7916": 72, "0123": 72, "0113": 72, "0154": 72, "8910": [], "4683": [], "738": [], "plot_2_test_wo_model_reg": [72, 73], "747": [], "auto_examples_testing_extern": 73, "top": [75, 76, 87, 89, 95, 96, 97, 100, 108, 110, 111, 112, 113, 115, 116, 118, 122, 123, 135, 141, 142], "segmented_diagnos": [75, 76, 127], "segment_t": [75, 76, 127], "segment_method": [75, 76, 127], "0x000001af08a14888": [], "0x000001aea2985f88": [], "talb": 75, "segment_id": [75, 76, 127], "7563": 75, "7622": 75, "4899": 75, "1604": 75, "5397": 75, "5777": 75, "5538": 75, "7566": 75, "2760": 75, "2166": 75, "2735": 75, "2084": 75, "2667": 75, "1156": 75, "specif": [75, 76, 81, 82, 85, 87, 88, 89, 93, 94, 95, 97, 98, 99, 101, 102, 106, 111, 112, 113, 114, 115, 116, 118, 119, 121, 122, 123, 124, 126, 127], "distribution_shift": [75, 76, 127], "566": [], "plot_0_classif": [75, 77], "0x000001ae92af5bc8": [], "0x000001af088b8d08": [], "317": [], "plot_0_regress": [76, 77], "883": [], "auto_examples_testing_seg": 77, "diagnos": [77, 127, 152, 153], "welcom": 78, "outcom": [78, 80, 106, 118, 119, 121, 127], "user": [78, 93, 94, 95, 96, 106, 109, 116, 119, 124, 125, 126, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "guid": [78, 106, 126, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "introduct": [78, 93, 96, 113, 170], "black": [78, 106, 108, 113, 116, 170], "diagnost": [78, 80, 86, 127, 163, 165, 166, 170], "suit": [78, 95, 170], "case": [78, 83, 84, 93, 95, 100, 102, 109, 112, 115, 118, 120, 122, 123, 124, 127, 133, 134, 148, 149, 170], "studi": [78, 170], "frequent": 78, "ask": 78, "question": 78, "read": [79, 106], "my": 79, "own": [79, 93, 148], "frame": [79, 110, 112], "get": [79, 84, 96, 97, 98, 100, 103, 108, 109, 110, 111, 112, 113, 115, 116, 119, 121, 125, 127, 132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 164, 167], "chapter": 80, "includ": [80, 82, 85, 87, 89, 92, 93, 94, 95, 96, 97, 101, 106, 108, 110, 111, 114, 115, 116, 118, 119, 121, 122, 124, 125, 127, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "multipl": [80, 86, 94, 103, 106, 109, 111, 115, 119, 124, 127, 131], "low": [80, 81, 82, 84, 85, 92, 102, 103, 106, 110, 114, 118, 127], "experiment": [80, 106, 127], "intepret": 80, "benchmark": 80, "californiah": [80, 110, 170], "ml": [80, 92, 96, 106, 112, 127], "descript": [80, 92, 106, 127], "mode": [81, 82, 85, 87, 92, 102, 106, 127, 141, 142, 148], "develop": [81, 82, 85, 89, 92, 98, 99, 100, 101, 102, 103, 106, 108, 111, 112, 113, 115, 116, 118, 120, 121, 123, 124, 127], "machin": [81, 82, 85, 86, 88, 89, 92, 96, 98, 99, 100, 101, 102, 103, 106, 107, 109, 111, 112, 115, 116, 118, 119, 120, 121, 123, 124, 127, 170], "uci": [81, 85, 87, 89, 92, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 127], "repositori": [81, 85, 87, 89, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124], "which": [81, 82, 85, 87, 89, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127, 132, 133, 136, 138, 139, 141, 142, 146, 148, 149, 150, 151, 152, 153, 163, 165, 166], "consist": [81, 82, 85, 89, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 142, 147, 149, 151, 153], "389": [81, 89, 98, 99, 100, 101, 102, 103, 108, 111, 112, 115, 116, 118, 120, 121, 123, 124], "hourli": [81, 89, 98, 99, 100, 101, 102, 103, 108, 111, 112, 115, 116, 118, 120, 121, 123, 124], "rental": [81, 89, 98, 99, 100, 101, 102, 103, 108, 111, 112, 115, 116, 118, 120, 121, 123, 124], "capit": [81, 89, 98, 99, 100, 101, 102, 103, 108, 111, 112, 115, 116, 118, 120, 121, 123, 124], "see": [81, 82, 85, 88, 89, 94, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 127, 134, 135, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "detail": [81, 82, 85, 87, 89, 94, 96, 104, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 126, 127, 148, 149], "here": [81, 82, 85, 87, 89, 93, 94, 96, 97, 98, 99, 101, 102, 108, 109, 111, 112, 116, 118, 122, 123, 127, 132], "continu": [81, 82, 89, 93, 94, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 114, 115, 116, 118, 120, 121, 122, 123, 124, 136, 137, 141, 142], "problem": [81, 82, 83, 84, 85, 87, 89, 92, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 127, 133, 134, 148], "click": [81, 82, 83, 84, 85, 92, 125], "link": [81, 82, 83, 84, 85, 88, 91, 92, 93, 94, 95, 96, 97, 112, 119, 136, 137], "googl": [81, 82, 83, 84, 85, 92, 127], "colab": [81, 82, 83, 84, 85], "choos": [81, 82, 83, 84, 85, 92, 94, 115, 120, 122, 123, 124, 138, 139, 148, 149], "exploratori": [81, 82, 83, 84, 90, 127, 170], "need": [7, 81, 89, 94, 95, 96, 98, 99, 101, 103, 106, 109, 115, 116, 118, 119, 124, 125, 135, 136, 137, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "inher": [81, 82, 85, 106, 111, 113, 127], "pairwis": [81, 82, 85, 91, 96, 98, 106, 108, 111, 116, 133, 136, 137, 140, 141, 142, 143, 152, 153], "640": [82, 109, 110, 114, 122], "fetch": [82, 109, 110, 114, 122], "three": [82, 87, 89, 91, 93, 95, 96, 106, 111, 112, 118, 119, 121, 122, 123, 124], "_raw": 82, "_trim1": 82, "trim": [82, 92, 127], "_trim2": 82, "median": [82, 95, 109, 110, 114, 122, 133, 149], "price": [82, 110], "per": [82, 98, 103, 108, 113, 132, 134, 136, 137, 141, 142, 150, 151, 152, 153], "block": [82, 141, 142], "log": [82, 98, 99, 101, 112, 115, 118, 124, 137, 141, 142, 148], "l1": [82, 112, 113, 133, 144, 145, 146, 147, 149, 150, 151, 152, 153], "reigster": 82, "sola": [83, 92, 125, 127], "ai": [83, 92, 106, 125, 127], "solassimu1": [83, 92, 127], "modifi": [83, 92, 95, 108, 127], "demo": [83, 124, 127, 141, 142], "covari": [83, 92, 94, 96, 106, 123, 127, 128, 129, 130, 131, 132, 133, 134, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "rest": [83, 92, 94, 98, 99, 102, 108, 109, 111, 115, 127], "demograph": [83, 84, 88, 92, 119, 127], "contribut": [83, 92, 94, 99, 100, 102, 103, 110, 112, 115, 127], "minor": [83, 108], "major": 83, "grei": [83, 84], "color": [83, 84, 109], "when": [83, 84, 87, 88, 94, 96, 98, 99, 100, 102, 103, 109, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 127, 131, 132, 133, 134, 135, 137, 139, 141, 142, 146, 147, 148, 149, 151, 153, 163, 165, 166], "finish": 83, "suggest": [83, 89, 94, 98, 101, 103, 106, 110, 112, 121, 122], "procudur": 83, "add": [83, 84, 106, 116, 123, 127, 131], "By": [83, 87, 89, 93, 94, 95, 96, 97, 99, 100, 102, 106, 108, 109, 110, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 127, 134, 148, 149], "enter": [83, 95], "button": [83, 84, 92], "switch": [83, 115, 124], "other": [83, 85, 88, 93, 94, 95, 96, 98, 99, 101, 103, 106, 109, 110, 111, 112, 115, 118, 121, 124, 127, 134, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "tab": [83, 84], "view": [83, 98, 101, 102, 103, 108, 109, 111, 114, 116, 121], "breakdown": 83, "model_fairness_sola": [83, 127], "decis": [84, 92, 100, 103, 106, 107, 109, 119, 124, 127, 131, 132, 134, 148, 149, 157, 167, 170], "hypothes": 84, "statu": [84, 124, 132, 146, 147], "indic": [84, 87, 88, 92, 93, 94, 98, 99, 101, 102, 103, 108, 109, 110, 111, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 148, 149, 150, 151, 152, 153], "20k": 84, "applic": [84, 92, 96, 106, 127], "month": 84, "card": [84, 85, 87, 92, 93, 95, 108, 109, 111, 112, 113, 114, 116, 118, 120, 121, 122, 123, 124, 127], "minimum": [84, 94, 95, 106, 115, 118, 120, 124, 125, 131, 132, 136, 137, 138, 139, 148, 149, 150, 151, 152, 153], "requir": [84, 87, 93, 94, 95, 96, 98, 101, 103, 106, 108, 112, 116, 118, 120, 121, 122, 123, 124, 127, 131, 133, 135, 136, 137, 138, 139, 141, 146, 147, 148, 149, 150, 151, 152, 153], "payment": [84, 85], "wa": [84, 136, 137], "account": [84, 94, 103, 115, 121, 123], "date": 84, "ordin": [84, 93, 115, 127, 136, 137], "dai": [84, 98, 99, 101, 108, 111, 116, 118], "so": [84, 89, 95, 96, 100, 102, 103, 109, 110, 112, 116, 122, 127, 132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "divid": [84, 91, 93, 94, 98, 108, 111, 114, 116, 118, 121, 124, 135], "limit": [84, 89, 96, 97, 98, 101, 109, 110, 113, 114, 134, 135], "cannot": [84, 88, 96, 112, 135], "kind": [84, 127], "should": [84, 96, 98, 101, 102, 106, 112, 113, 118, 120, 121, 127, 134, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "nearli": [84, 92, 127], "depth2": 84, "depth7": 84, "To": [84, 89, 93, 96, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 148, 149], "favor": [84, 111, 127], "defaut": 84, "class": [7, 84, 112, 118, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "find": [84, 108, 111, 113, 115, 121, 148, 149], "higher": [84, 88, 89, 94, 101, 109, 110, 118, 122, 135], "debias": 84, "unfair": [84, 88, 119], "mitig": [84, 94, 96, 119, 120], "attribut": [84, 85, 88, 95, 100, 103, 122, 127, 128, 131, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "repeat": [84, 94, 96, 100, 102, 116, 136, 137, 140, 143], "mani": [84, 94, 98, 106, 112, 113, 118, 136, 137, 148, 149], "clear": [84, 98, 122], "could": [84, 92, 103, 111, 122, 141, 142], "record": [84, 87, 89, 99, 102, 123, 136, 137, 150, 151], "adjust": [84, 95, 98, 114, 120, 121, 122, 148], "vari": [84, 96, 99, 100, 118, 122, 148, 149], "both": [84, 88, 89, 91, 94, 96, 98, 99, 102, 103, 106, 108, 109, 110, 111, 112, 115, 116, 118, 121, 123, 129, 131, 141, 142, 148], "good": [84, 113, 122, 124], "000": [85, 87, 108, 109, 111, 112, 113, 114, 116, 118, 120, 121, 122, 123, 124], "client": [85, 87, 92, 108, 109, 111, 112, 113, 114, 116, 118, 120, 121, 122, 123, 124, 127], "200504": 85, "200509": 85, "subject": [85, 96, 106, 112, 123, 141, 142, 150, 151, 152, 153], "slight": [85, 89, 122], "preprocess": [85, 87, 92, 93, 108, 109, 112, 116, 118, 120, 121, 123, 124, 127, 135], "histori": [85, 141, 142], "pay_amt1": [85, 113], "keep": [85, 98, 102, 113, 127, 135, 137, 139, 142, 147, 149, 151, 153], "while": [85, 94, 96, 98, 99, 102, 103, 106, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 121, 122, 123, 124, 130, 148, 149], "section": [87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 103, 113, 118, 119, 123], "describ": [87, 94, 96, 98, 101, 132], "done": [87, 98, 100, 116], "function": [87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 127, 129, 131, 132, 133, 134, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "illustr": [87, 89, 98, 99, 101, 103, 115, 116, 118, 119, 121, 123, 124], "chosen": [87, 93, 109, 110, 111, 115, 124, 127, 148, 149], "chart": [87, 89, 91, 101, 112, 118], "below": [87, 88, 89, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127], "As": [87, 95, 96, 98, 102, 103, 105, 108, 110, 111, 113, 114, 115, 116, 121, 122, 123, 127, 141, 142], "legend": 87, "similar": [87, 96, 98, 99, 100, 103, 108, 109, 110, 111, 113, 115, 116, 118, 120, 121, 122, 141, 142], "ha": [87, 89, 94, 96, 97, 98, 100, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 127, 131, 134, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 163, 165, 166], "slightli": [87, 96, 108, 111, 116, 120], "better": [87, 89, 94, 99, 102, 108, 113, 114, 115, 118, 119, 121, 124], "present": [87, 88, 89, 95, 103, 118, 119, 124], "variou": [87, 89, 93, 94, 103, 106, 108, 111, 112, 118, 119, 122, 125, 127], "found": [87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 108, 109, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 137, 148, 149], "It": [87, 88, 89, 94, 95, 96, 97, 98, 100, 103, 106, 108, 109, 110, 111, 112, 114, 115, 116, 118, 121, 122, 123, 124, 127, 130, 134, 135, 141, 142, 146, 147, 148, 149, 163, 165, 166], "note": [87, 88, 89, 93, 94, 96, 97, 98, 100, 101, 102, 103, 108, 109, 110, 111, 112, 114, 115, 116, 118, 121, 122, 123, 124, 127, 131, 133, 134, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "unlik": [87, 89, 103, 109, 120], "slice": [87, 89, 98, 101, 106, 116, 120, 124, 127, 157, 160, 167], "repres": [87, 88, 89, 91, 94, 96, 98, 99, 100, 101, 103, 109, 110, 112, 113, 114, 115, 116, 118, 121, 122, 123, 124, 131, 133, 146, 147], "keyword": [87, 89, 94, 96, 98, 100, 101, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 133], "reveal": [87, 89, 94, 102, 108, 116, 118, 120, 124], "within": [87, 88, 91, 93, 94, 109, 114, 116, 120, 121, 122, 124, 127, 134, 136, 137, 141, 142, 148, 149], "greater": [87, 93, 94, 95, 96, 99, 120, 121, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 142, 148, 149], "than": [87, 88, 89, 94, 95, 96, 98, 99, 100, 101, 103, 106, 109, 110, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 148, 149], "quantifi": [87, 93, 94, 103, 121], "squar": [87, 94, 96, 112, 113, 118, 120, 121, 123, 124, 132, 133, 135, 137, 139, 142, 145, 147, 149, 151, 153], "hat": [87, 96, 98, 99, 101, 108, 109, 110, 111, 115, 116, 118, 121, 123], "p": [7, 87, 97, 101, 103, 115, 119, 121, 123, 127, 133], "henc": [87, 96, 108, 113, 115, 127, 131], "shown": [87, 96, 97, 98, 103, 108, 109, 111, 112, 113, 114, 116, 119, 121], "actual": [87, 93, 94, 108, 110, 111, 114, 115, 116, 118, 121, 122, 123, 127, 131, 141, 142, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "involv": [87, 89, 95, 102, 112, 115, 120, 122, 123, 124, 127], "undergo": [87, 89], "unless": [87, 89, 127, 131, 148, 149], "otherwis": [87, 89, 95, 103, 109, 115, 120, 124, 127, 131, 134, 135, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "abov": [87, 89, 94, 96, 98, 101, 102, 103, 108, 110, 111, 113, 115, 116, 119, 120, 121, 122, 123, 124], "On": [70, 71, 72, 87, 89, 93, 98, 109, 118, 123, 124], "best": [87, 115, 116, 137, 138, 139, 141, 142, 147, 148, 149, 151, 153], "follow": [87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 131, 136, 137, 148, 149], "option": [87, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 106, 113, 115, 118, 120, 121, 122, 123, 124, 125, 127, 129, 130, 135, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "proport": [87, 89, 97, 112, 118, 121, 122, 123, 148], "consid": [87, 88, 94, 101, 102, 103, 106, 111, 113, 114, 115, 116, 118, 120, 122, 123, 124, 127, 133, 136, 137, 138, 139, 148, 149], "largest": [87, 89, 97, 100, 108, 110, 111, 112, 113, 115, 116, 121, 122, 123, 148, 149], "high": [87, 89, 92, 94, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 127, 134, 148, 149], "compris": [87, 108, 109, 111, 112, 113, 114, 116, 118, 120, 121, 122, 123, 124], "april": [87, 106, 108, 109, 111, 112, 113, 114, 116, 118, 120, 121, 122, 123, 124], "2005": [87, 108, 109, 111, 112, 113, 114, 116, 118, 120, 121, 122, 123, 124], "septemb": [87, 108, 109, 111, 112, 113, 114, 116, 118, 120, 121, 122, 123, 124], "more": [87, 88, 89, 93, 94, 96, 97, 99, 101, 102, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127, 131, 135, 136, 137, 148, 149], "taiwancreditdata": [87, 108, 109, 111, 112, 113, 114, 116, 118, 120, 121, 122, 123, 124], "websit": [87, 108, 109, 111, 112, 113, 114, 116, 118, 120, 121, 122, 123, 124], "directli": [87, 88, 91, 102, 103, 108, 112, 113, 115, 116, 118, 120, 121, 123, 124, 125, 127], "although": [87, 94, 98, 108, 111, 112, 116, 118, 120, 121, 123, 124], "some": [87, 96, 101, 102, 108, 110, 111, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 127, 135, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "serv": [87, 94, 108, 109, 111, 112, 113, 114, 116, 118, 120, 121, 122, 123, 124], "dedic": [88, 121], "bia": [88, 106, 113, 146, 147], "superior": [88, 116], "sinc": [88, 89, 106, 109, 115, 118, 131, 136, 138, 141, 146, 148, 150, 152], "former": [88, 103, 123], "intric": [88, 110], "howev": [88, 89, 93, 94, 96, 99, 100, 101, 102, 103, 106, 108, 109, 110, 112, 113, 115, 116, 118, 121, 122, 123, 124, 127], "observ": [88, 94, 96, 99, 101, 108, 109, 110, 111, 112, 116, 118, 119, 120, 121, 122, 123, 131], "distinct": [88, 93, 94, 122], "perspect": [88, 108], "assess": [88, 89, 91, 93, 102, 110, 118, 120, 121, 122, 123, 124], "focus": [88, 94], "consequ": [88, 106, 124], "ani": [88, 99, 102, 103, 106, 108, 109, 110, 116, 118, 121, 138, 139, 148, 149], "like": [88, 94, 98, 106, 108, 111, 113, 118, 124, 127, 131, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "influenc": [88, 102, 110, 122, 137, 139, 142, 147, 149, 151, 153], "associ": [88, 112, 121, 148], "depict": [88, 118, 122], "advers": [88, 119, 123, 127], "impact": [88, 94, 98, 103, 115, 116, 119, 120, 127], "left": [88, 93, 95, 96, 103, 108, 109, 111, 116, 118, 132, 138, 139, 148, 149], "convers": [88, 110], "right": [88, 96, 100, 103, 108, 109, 111, 112, 115, 116, 118, 132, 138, 139, 148, 149], "signifi": [88, 122], "discrimin": 88, "practic": [88, 103, 109, 113], "term": [88, 100, 103, 106, 109, 110, 112, 113, 116, 118, 134, 136, 137, 138, 139, 150, 151, 152, 153], "provid": [88, 93, 94, 95, 97, 99, 101, 102, 103, 106, 109, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 131, 132, 134, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "figur": [88, 96, 97, 106, 108, 110, 111, 113, 115, 116, 119, 121, 123, 127, 132, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167], "impli": [88, 113, 122], "notabl": [88, 118], "those": [88, 89, 119, 133], "level": [88, 94, 96, 103, 106, 108, 111, 116, 119, 121, 123, 136, 137], "overal": [88, 94, 96, 98, 106, 109, 112, 114, 118, 123, 127, 150, 151], "entir": [88, 89, 101, 103, 114, 122, 124], "possibl": [88, 103, 112, 118, 119, 125, 127, 132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "appropri": [88, 93, 106, 114, 120, 133], "subset": [88, 94, 96, 99, 101, 114, 121, 131, 136, 138, 141, 146, 148, 150, 152], "offer": [88, 89, 95, 98, 103, 113, 114, 118, 122, 124], "veri": [88, 96, 98, 100, 102, 111, 141, 142, 146, 147], "explor": [89, 91], "conveni": [89, 106], "wai": [89, 92, 96, 103, 106, 110, 111, 113, 116, 127, 131], "through": [89, 106, 109, 111, 113, 148, 149], "obtain": [89, 94, 95, 101, 103, 108, 113, 115, 118, 121, 123, 131, 141, 142, 148, 149, 150, 151], "list": [89, 93, 95, 96, 106, 111, 113, 120, 123, 124, 127, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "too": [89, 98, 103, 113, 115], "crowd": 89, "These": [89, 91, 92, 93, 96, 118, 123, 124, 127], "boxplot": 89, "summar": [89, 95, 109, 123, 127], "mark": [89, 94, 96, 113, 122], "circl": [89, 94], "lowest": [89, 122], "rel": [89, 94, 96, 108, 110, 112, 113, 115, 118, 122, 123, 124, 135, 148, 149], "sensit": [89, 95, 103, 112, 113, 118, 119], "lead": [89, 98, 100, 106, 108, 110, 112, 115, 119, 131, 135], "conclus": [89, 121], "significantli": [89, 98, 100, 112, 118, 122], "larger": [89, 94, 98, 99, 102, 109, 110, 112, 113, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143], "less": [89, 95, 98, 99, 101, 103, 110, 115, 121, 122, 124, 127, 131, 133, 148, 149], "similarli": [89, 108, 109, 113, 116, 121], "furthermor": [89, 106, 109, 118], "deriv": [89, 115, 134, 141, 142], "metricmetr": 89, "suffer": [89, 114], "issu": [89, 112, 119, 120, 123, 141, 142, 146, 147], "especi": [89, 96, 109, 110, 112, 138, 139, 148, 149], "aim": [89, 94, 96, 98, 121, 122], "uncertainti": [89, 106, 121], "dot": [89, 94, 121, 122, 124, 127], "close": [89, 100, 108, 112, 113, 118, 121, 131], "fall": [89, 94, 121, 124, 130], "smallest": [89, 135, 136, 137], "certain": [89, 93, 94, 95, 101, 103, 111, 124], "signific": [89, 93, 96, 102, 103, 106, 108, 111, 120, 122, 134], "degrad": [89, 102, 106, 123], "increas": [89, 94, 96, 99, 102, 103, 106, 108, 110, 111, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 141, 142, 150, 151, 152, 153], "emploi": [89, 118, 119, 120, 121, 122, 124], "extra": 89, "taken": [89, 115, 134], "consider": [89, 96, 118], "much": [89, 98, 99, 103, 109, 112, 118, 122, 123], "manipul": 90, "basic": [90, 95, 127, 136, 137], "methodologi": [90, 106], "usag": [1, 2, 3, 4, 5, 6, 7, 8, 9, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 90, 94, 96, 104, 109, 115, 116, 117, 118], "allow": [91, 93, 94, 95, 101, 103, 110, 115, 118, 119, 120, 121, 122, 124, 127, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "visual": [91, 94, 98, 99, 101, 106, 108, 109, 111, 112, 113, 116, 121, 122, 124], "identif": [91, 106, 120, 122], "potenti": [91, 94, 110, 118, 119, 122, 149], "aid": [91, 115], "understand": [91, 99, 106, 110, 112, 113, 115, 119, 120, 121, 122], "deviat": [91, 94, 95, 122, 123, 127, 136, 137, 141, 142], "pattern": [91, 94, 99, 106, 108, 110, 113, 118, 120, 123], "presenc": [91, 94, 124], "frequenc": [91, 95, 121, 123, 148], "graphic": [91, 99, 106], "represent": [70, 71, 72, 91, 94, 110, 111, 113, 116, 124], "combin": [91, 94, 96, 103, 109, 112, 118, 119], "collect": [91, 109, 115, 116, 131], "point": [91, 94, 96, 98, 100, 101, 103, 110, 113, 115, 118, 121, 123, 124, 127, 136, 137, 138, 139, 141, 142, 148, 149, 150, 151, 152, 153], "There": [91, 92, 96, 106, 112, 119], "altern": [91, 96, 97, 98, 101, 103, 123, 148, 149], "connect": [91, 124], "introduc": [92, 94, 103, 110, 113, 118, 119, 122], "loader": [92, 141, 142], "usual": [92, 98, 102, 103, 106, 109, 119, 122, 127, 155, 165, 166], "step": [92, 94, 96, 102, 103, 108, 109, 111, 113, 114, 115, 116, 121, 122, 123, 124, 127, 131, 136, 137, 138, 139, 164], "whole": [92, 93, 127, 128, 129, 130, 131, 132, 133, 134, 135], "sever": [92, 96, 103, 111, 115, 121, 127, 148, 149], "alreadi": [92, 102, 105, 113], "upload": 92, "gaussian": [92, 94, 96, 123, 127, 128], "spheric": [92, 127], "scikit": [92, 96, 99, 101, 102, 106, 112, 113, 125, 127, 135, 136, 137, 144, 145, 148, 149], "archiv": [92, 127], "edu": [92, 127], "crash": [92, 127], "cours": [92, 127], "californiahousing_trim1": [92, 127], "A": [92, 94, 96, 101, 106, 112, 113, 118, 121, 122, 123, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "solasai": [92, 127], "dispar": [92, 106, 118, 119, 127], "solashmda": [92, 127], "2018": [92, 103, 106, 127], "home": [92, 109, 110, 114, 122, 127], "disclosur": [92, 127], "act": [92, 127], "hmda": [92, 127], "about": [92, 98, 106, 127], "everi": [92, 109, 127, 140, 143, 148], "unit": [92, 112, 113, 127, 135], "just": [92, 98, 103, 127, 131, 136, 137], "wrap": [92, 96], "abil": [93, 94, 118, 120], "aspect": [93, 94, 106, 111], "addition": [93, 95, 115, 116, 118, 120, 121], "control": [93, 95, 101, 109, 110, 113, 114, 115, 119, 122, 131, 135, 148, 149], "flexibl": [93, 95, 102, 106, 110, 111, 115, 124, 130], "accord": [93, 106, 113, 115, 119, 122, 127, 141, 142, 163, 164, 165, 166], "prefer": 93, "typic": [93, 102, 112], "locat": [93, 94], "explicitli": [93, 95, 103], "identifi": [93, 94, 96, 99, 103, 106, 110, 112, 115, 116, 118, 120, 122, 123, 124, 127], "desir": [93, 94, 115, 118, 119, 121, 124, 127], "correct": [93, 108, 118, 124, 125], "automat": [93, 95, 96, 106, 115, 127, 130, 136, 137, 148], "determin": [93, 94, 95, 96, 97, 101, 103, 109, 110, 118, 120, 121, 122, 123, 124, 127, 136, 137, 139, 142, 146, 147, 149, 151, 153, 159, 163, 165, 166], "hand": [93, 98, 106, 109, 118, 121], "suitabl": [93, 94, 112, 115, 123, 124], "handl": [93, 94, 96, 118, 122], "assign": [93, 100, 112, 114, 119, 122, 128, 129, 130, 131, 132, 133, 134, 135], "carri": [93, 148, 149], "html": [7, 70, 71, 72, 93, 95, 96, 135], "n": [93, 95, 96, 98, 101, 103, 118, 121, 123, 127, 148, 149], "pa": [93, 95], "encod": [93, 106, 112, 115, 127], "standard": [93, 95, 96, 98, 106, 108, 112, 119, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142], "min": [93, 95, 127, 131, 135, 136, 137, 141, 142, 150, 151], "max": [93, 95, 108, 109, 113, 121, 127, 131, 132, 133, 136, 137, 138, 139, 141, 142, 148, 149, 150, 151, 152, 153], "scaler": 93, "onc": [93, 98, 109, 114, 116, 119], "conduct": [93, 96, 120, 124], "dissimilar": [93, 94], "edf": 93, "reduc": [93, 94, 96, 98, 102, 103, 109, 113, 116], "comput": [93, 94, 96, 98, 99, 101, 102, 103, 113, 115, 118, 121, 122, 124, 127, 133, 134, 135, 141, 142, 146, 147, 148, 149], "burden": [93, 94, 96], "transform": [93, 94, 96, 103, 110, 112, 113, 115, 123, 135], "would": [93, 96, 112, 113, 114, 118, 119, 121, 124, 127, 137, 139, 141, 142, 147, 148, 149, 151, 153], "output": [93, 96, 98, 99, 100, 101, 103, 110, 113, 116, 119, 123, 127, 134, 135, 141, 142, 148, 149], "euclidean": [93, 94, 96, 122, 127, 132, 133, 163, 164, 165, 166], "far": [93, 94, 101], "awai": 93, "farthest": 93, "length": [93, 94, 113, 127, 131, 136, 137, 140, 143], "contain": [93, 94, 96, 102, 110, 112, 124, 127, 132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "element": [93, 98, 100, 118, 127, 133, 146, 147, 148, 149], "third": [93, 95, 113, 122, 141, 142], "characterist": [93, 94, 122], "over": [93, 95, 96, 98, 103, 108, 111, 116, 127, 131, 146, 147], "aforement": [93, 124], "composit": 93, "address": [94, 112, 119, 120, 124], "after": [94, 98, 105, 106, 112, 113, 121, 122, 123, 125, 127, 141, 142], "help": [94, 96, 101, 103, 110, 112, 113, 115, 118, 124, 136, 137], "enhanc": [94, 96, 106, 113, 120, 122, 124], "subsequ": [94, 122, 124], "adopt": [94, 106], "approach": [94, 96, 103, 106, 109, 112, 118, 120, 121, 122, 124], "liu2008": 94, "begin": [94, 96, 97, 98, 99, 101, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 124, 132], "maximum": [94, 95, 96, 97, 108, 109, 114, 115, 116, 131, 133, 136, 137, 140, 143, 148, 149, 150, 151, 152, 153], "recurs": [94, 101, 113, 114, 131, 132], "construct": [94, 121, 133], "until": [94, 108, 116, 136, 137, 148, 149], "measur": [94, 96, 97, 102, 112, 115, 118, 120, 121, 122, 131, 132, 148, 149], "anomali": [94, 128, 129, 130, 131, 132, 133, 134, 135], "shorter": [94, 131], "thei": [94, 96, 101, 103, 106, 108, 115, 116, 118, 121, 122, 123, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 148, 149], "easier": [94, 114, 115], "separ": [94, 95, 112, 115, 118, 136, 137], "contrast": [94, 108, 109, 112, 115, 116, 118], "longer": [94, 112, 131], "effici": [94, 106, 130, 133, 135], "doe": [94, 100, 102, 120, 121, 124, 127, 148, 149], "reli": [94, 95, 118], "wrapper": [94, 114, 116, 129, 130, 131, 133, 134, 135, 140, 143, 144, 145, 148, 149], "implement": [94, 96, 99, 100, 109, 112, 113, 120, 122, 134, 138, 139], "ensembl": [94, 103, 109, 110, 131], "propos": [94, 108, 109, 116], "he2003": 94, "partit": [94, 99, 101, 124, 131, 148, 149, 150, 151, 152, 153], "mixtur": [94, 96, 128], "larg": [94, 96, 100, 103, 109, 110, 112, 113, 118, 128, 141, 142, 146, 147], "small": [94, 98, 103, 108, 109, 111, 113, 118, 123, 128], "belong": [94, 113, 121], "correspond": [94, 96, 103, 108, 109, 110, 111, 112, 113, 115, 116, 118, 123, 124, 127, 146, 147, 148, 149], "centroid": 94, "nearest": [94, 123, 133], "multipli": [94, 121, 134, 135, 136, 137, 148], "emphas": 94, "neighbor": [94, 133], "comprehens": [94, 106, 118, 119, 122], "reduct": [94, 103, 132, 148, 149, 150, 151, 152, 153], "techniqu": [94, 106, 115, 120, 124], "mahalanobi": [94, 135], "error": [7, 94, 106, 118, 120, 121, 123, 124, 125, 127, 134, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 167], "reconstruct": 94, "elabor": 94, "take": [94, 96, 103, 106, 108, 111, 115, 116, 120, 123, 124, 133, 134], "structur": [94, 103, 106, 108, 111, 113, 118, 131], "got": [94, 125], "easili": [94, 106, 109], "formula": [94, 96, 98, 103, 113, 118, 121, 136, 137], "shyu2003": 94, "md": 94, "z_": [94, 98], "lambda_": 94, "eigenvalu": 94, "varianc": [94, 103, 108, 109, 110, 111, 112, 115, 116, 118, 135, 141, 142, 149], "But": [94, 148, 149], "give": [94, 102, 113, 115, 126, 141, 142], "u": [94, 98, 101, 102, 115, 118, 121, 122, 123, 124, 125, 137, 139, 142, 147, 149, 151, 153], "x_": [94, 98, 99, 101, 108, 110, 111, 113, 115, 116, 121], "among": [94, 96, 103, 112, 148, 149], "mutual": [94, 111], "author": [94, 109], "advantag": [94, 96, 106, 108, 109, 134], "outlin": [94, 119, 122], "iter": [94, 96, 102, 108, 109, 113, 116, 123, 127, 134, 135, 138, 139, 140, 141, 142, 143, 146, 147], "met": 94, "reach": [94, 98, 122, 136, 137], "child": [94, 131, 132, 148, 149], "leav": [94, 132, 136, 137, 138, 139, 148, 149], "capabl": [94, 96, 106, 112, 122], "homogen": 94, "further": [94, 96, 111, 115, 121, 126, 150, 151, 152, 153], "subsect": 94, "briefli": [94, 110, 113], "kei": [94, 101, 108, 110, 111, 115, 119], "decid": [94, 127, 130, 133, 155], "whether": [94, 96, 101, 109, 115, 118, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 142, 145, 146, 147, 150, 151, 152, 153, 155, 159, 167], "red": [94, 103, 109, 121, 122, 124], "mai": [94, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 112, 113, 114, 115, 118, 119, 121, 122, 123, 125, 126, 127, 132, 133, 134, 137, 138, 139, 142, 147, 148, 149, 151, 153], "phenomenon": 94, "highlight": [94, 96, 114, 120, 122], "sne": [94, 127], "dimens": [94, 124, 132, 134, 135, 136, 137], "worth": [94, 103, 109], "purpos": [94, 96, 98, 101, 103, 106, 112, 116, 121, 122, 124], "complex": [94, 96, 101, 108, 109, 110, 113, 114, 115, 120, 122, 124, 148, 149], "meaning": [94, 118, 121], "insight": [94, 102, 111, 118, 120, 122, 124], "mention": [94, 106], "notic": [94, 118, 122, 131], "discrep": [94, 118, 123, 124], "fei": 94, "toni": 94, "liu": [94, 96], "kai": 94, "ming": 94, "ting": 94, "zhi": 94, "hua": 94, "zhou": 94, "2008": 94, "eighth": 94, "ieee": [94, 106], "intern": [94, 106, 146, 147, 148, 149], "confer": [94, 106], "mine": [94, 106], "pisa": 94, "itali": 94, "pp": [94, 96, 106], "doi": [94, 106], "1109": 94, "icdm": 94, "zengyou": 94, "he": [94, 106], "xiaofei": 94, "xu": 94, "shengchun": 94, "deng": 94, "2003": 94, "discov": 94, "recognit": [94, 106], "letter": 94, "1641": 94, "1650": 94, "mei": 94, "ling": [94, 96], "shyu": 94, "shu": 94, "ching": 94, "chen": [94, 106], "kanoksri": 94, "sarinnapakorn": 94, "liwu": 94, "novel": 94, "scheme": [94, 97, 109], "miami": 94, "univ": 94, "coral": 94, "gabl": 94, "fl": 94, "dept": 94, "electr": 94, "engin": [94, 106], "meta": [95, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "overview": [95, 113, 123], "enabl": [95, 106, 114, 115, 120, 131, 134, 135], "panel": [95, 106], "anoth": [95, 98, 108, 115, 118, 122, 132], "regard": [95, 106, 121, 124], "n_miss": 95, "q1": 95, "quartil": 95, "q3": 95, "n_uniqu": 95, "top1": 95, "highest": [95, 98, 103, 122, 123], "top2": 95, "top3": 95, "n_other": 95, "5378": 95, "5468": 95, "9144": 95, "4970": 95, "1926": 95, "0200": 95, "3400": 95, "6600": 95, "4758": 95, "4848": 95, "6212": 95, "6272": 95, "4800": 95, "6300": 95, "7800": 95, "1901": 95, "1223": 95, "1940": 95, "2537": 95, "8507": 95, "189": 95, "4631": 95, "181": 95, "3876": 95, "142": 95, "281": 95, "977": 95, "4496": 95, "4409": 95, "4242": 95, "4232": 95, "8645": 95, "16879": 95, "11865": 95, "5514": 95, "11413": 95, "4544": 95, "1419": 95, "must": [95, 98, 100, 133, 134, 140, 143, 144, 145], "sole": [95, 103, 118, 124], "avail": [95, 99, 101, 103, 106, 115, 119, 120, 121, 122, 123, 124, 127, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "want": [95, 98, 99, 101, 103, 105, 109, 112, 116, 123, 124], "do": [95, 96, 98, 102, 103, 112, 119, 121, 122, 127, 148, 149], "2512": 95, "2502": 95, "2487": 95, "9878": 95, "align": [95, 96, 97, 98, 99, 101, 103, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 121], "relev": [96, 99, 112, 114, 121, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "avoid": [96, 112, 113, 141, 142, 146, 147], "moreov": [96, 98, 103, 122, 124], "benefici": 96, "distinguish": [96, 109, 111, 118, 121, 124, 127, 163, 164, 165, 166], "treatment": 96, "rigor": 96, "mathemat": [96, 106], "rho_": 96, "frac": [96, 97, 98, 101, 103, 115, 116, 118, 119, 121, 127, 137, 139, 142, 147, 149, 151, 153], "sum_": [96, 97, 98, 101, 103, 109, 113, 118], "x_i": 96, "y_i": 96, "sqrt": [96, 121, 137, 148, 149], "sign": [96, 120], "denot": [96, 99, 102, 103, 113, 119, 121, 122], "direct": [96, 110, 112, 115, 118], "magnitud": [96, 106, 112, 118, 123], "strength": [96, 110, 112, 113, 115, 127, 140, 141, 142, 143, 144, 145], "straightforward": [96, 100, 101], "up": [96, 98, 101, 106, 116, 127, 148, 149], "command": [96, 106, 112, 125], "blue": [96, 103, 109], "orang": 96, "posit": [96, 108, 110, 111, 112, 113, 116, 118, 119, 127, 140, 141, 142, 143, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "neg": [96, 98, 102, 108, 110, 111, 112, 115, 116, 118, 134, 136, 137, 139, 140, 142, 143, 144, 145, 147, 148, 149, 151, 153], "bottom": [96, 100, 108, 110, 111, 115], "text": 96, "easi": [96, 106, 114, 127, 163, 164, 165, 166], "One": [96, 106, 125], "deal": [96, 124, 130, 141, 142, 146, 147], "r_": 96, "mathrm": [96, 99, 101, 115], "r": [96, 106, 113, 118, 119, 123, 124, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "d_i": 96, "them": [96, 109, 110, 115, 120, 124, 148, 149], "monoton": [96, 101, 111, 113, 115, 116, 119, 122, 141, 142, 150, 151, 152, 153], "perfect": [96, 118], "occur": [96, 116, 120, 123, 136, 137], "except": [96, 103, 116, 136, 137, 139, 142, 147, 149, 151, 153], "replac": [96, 103, 119, 131], "pair": [96, 116, 119, 136, 137, 141, 142, 148], "vector": [96, 98, 103, 113, 116, 133, 134, 135, 146, 147], "a_": 96, "j": [96, 98, 103, 108, 110, 111, 112, 115, 116], "x_j": [96, 108, 112], "x_k": 96, "quad": 96, "ldot": [96, 103, 110, 112, 113, 121, 122], "b_": 96, "y_j": 96, "y_k": 96, "matric": [96, 128, 129, 130, 131, 132, 133, 134, 135], "_": [96, 97, 98, 99, 101, 108, 111, 116, 118, 121], "cdot": [96, 112, 118], "b": [96, 97, 106, 113, 121, 122, 123, 141, 142], "arithmet": 96, "product": [96, 141, 142], "dcov": 96, "dvar": 96, "operatornam": 96, "absolut": [96, 97, 103, 112, 113, 118, 122, 123, 124, 127, 149], "captur": [96, 100, 108, 110, 111, 112, 118, 123], "computation": 96, "expens": [96, 127], "scalabl": [96, 141, 142], "big": 96, "downsampl": [96, 103], "instal": [96, 106], "speed": [96, 101, 133], "compos": 96, "sort": [96, 122], "descend": [96, 113, 122], "order": [96, 98, 106, 110, 112, 113, 115, 121, 122, 124, 140, 141, 142, 143, 148], "pre": [96, 103, 106], "org": [70, 71, 72, 96, 135], "stabl": [96, 110, 112, 115, 135], "inspect": [96, 106, 148, 149], "permutation_import": [96, 102, 148, 149], "valid": [96, 106, 111, 121, 127, 136, 137, 141, 142, 146, 147, 148, 149], "percentag": [96, 135, 136, 137], "concern": 96, "ii": 96, "particular": [96, 97, 100, 103, 106, 110, 112, 113, 114, 115, 116, 120, 121, 122, 124, 131], "iii": 96, "underfit": [96, 106, 108], "ones": [96, 101, 111], "minim": [96, 118, 123, 127, 148, 149, 157, 167], "power": [96, 106, 113, 114, 115, 135, 137], "probabilist": [96, 118], "incorpor": [96, 111, 121, 122], "z": [96, 103, 113, 116], "goal": [96, 103, 106, 120], "perp": 96, "mid": 96, "highli": [96, 98, 101, 103, 114, 115, 127, 129, 131, 136, 137], "kcit": 96, "zhang2012": 96, "kernel": [96, 103, 134, 137, 139, 142, 147, 149, 151, 153], "work": [96, 101, 103, 106, 115, 116, 118, 119, 127, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "strobl2019": 96, "fast": [96, 106, 107, 108, 111, 113, 127, 138, 139, 170], "approxim": [96, 101, 103, 106, 108, 109, 111, 115, 118, 120, 122, 124], "fourier": [96, 127], "reproduc": [96, 127, 131], "hibert": 96, "therefor": [96, 98, 100, 103, 112, 113, 122, 127], "hypothesi": 96, "equival": [96, 113, 116, 131, 133], "zero": [96, 98, 102, 108, 109, 110, 112, 113, 116, 118, 135, 148, 149], "cross": [96, 118, 127], "sigma_": 96, "sigma": [96, 113], "_f": 96, "asymptot": 96, "lambda_i": 96, "z_i": 96, "lindsai": 96, "pilla": 96, "basak": 96, "lpb": 96, "lindsayl2000": 96, "cdf": [96, 129], "finit": 96, "borboudakis2019": 96, "elimin": [96, 136, 137], "delet": 96, "insignific": 96, "predefin": [96, 121], "candid": [96, 111, 124], "p_valu": 96, "stop": [96, 106, 109, 127, 134, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149], "phase": [96, 146, 147], "recommend": [96, 113], "yu2020": 96, "twice": 96, "temporarili": 96, "temporari": [96, 121], "perman": 96, "formul": [96, 106, 107], "smaller": [96, 109, 113, 114, 115, 118, 121, 122, 123, 124, 127, 141, 142, 148, 149], "fewer": [96, 141, 142], "procedur": [96, 115], "seven": 96, "deep": [96, 106, 109, 113, 114, 127, 132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 163, 164, 165, 166], "causal": [96, 121], "disadvantag": 96, "sequenti": [96, 141, 142], "kun": 96, "zhang": [96, 106], "jona": 96, "peter": [96, 106, 112], "dominik": 96, "janz": 96, "bernhard": 96, "schoelkopf": 96, "2012": 96, "discoveri": [96, 106], "arxiv": [96, 103, 106], "preprint": [96, 103, 106], "1202": 96, "3775": 96, "eric": 96, "strobl": 96, "shyam": 96, "visweswaran": 96, "2019": [96, 106], "parametr": [96, 110], "journal": [96, 99, 106], "infer": [96, 115, 141, 142, 146, 147, 148, 149], "bruce": 96, "ramani": 96, "prasanta": 96, "moment": [96, 103], "theori": 96, "annal": [96, 106], "institut": 96, "giorgo": 96, "borboudaki": 96, "ioanni": 96, "tsamardino": 96, "research": [96, 106, 108], "276": 96, "314": 96, "kui": 96, "yu": [96, 106], "xianji": 96, "guo": 96, "lin": 96, "jiuyong": 96, "li": [96, 106, 116], "hao": [96, 106], "wang": [96, 106], "zhaolong": 96, "xindong": 96, "wu": [96, 106], "2020": [96, 106], "acm": [96, 106], "survei": 96, "csur": 96, "53": 96, "stabil": [97, 121, 122, 127, 159, 163], "extent": [97, 123], "discret": [97, 119, 121, 123], "kullback": 97, "leibler": 97, "l": [97, 102, 113], "q": [97, 121], "d_": 97, "kl": 97, "p_i": 97, "ln": 97, "q_i": 97, "asymmetr": 97, "resect": 97, "equal": [97, 103, 108, 110, 112, 113, 118, 119, 121, 122, 124, 127, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 157, 167], "fix": [97, 98, 103, 125, 141, 142, 148, 149], "wasserstein": [97, 127, 159, 163], "cumul": [97, 129, 135], "f": [97, 98, 99, 101, 102, 103, 110, 111, 115, 116, 121, 123], "w": [97, 106, 113, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "int": [97, 101, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "dx": 97, "kolmogorov": [97, 127, 159, 163], "smirnov": [97, 127, 159, 163], "wasserstein_dist": 97, "ks_2samp": 97, "sup_x": 97, "apley2016": [98, 106], "Its": [98, 118, 121], "bias": [98, 113, 119, 124], "overcom": 98, "quicker": 98, "unbias": 98, "definit": [98, 108, 111, 113, 121], "let": [98, 99, 113, 121, 123, 124], "n_": [98, 113, 119], "uncent": [98, 100, 112], "k_": 98, "textbf": [98, 108, 109, 110, 111, 112, 113, 115, 116], "tag": [98, 101, 103, 108, 109, 110, 111, 112, 113, 115, 116, 118], "faster": [98, 101, 108, 109], "might": [98, 114], "accur": [98, 106, 114, 115, 118, 124], "curv": [98, 118, 121, 122, 123, 124], "down": [98, 103], "paper": [98, 106], "pyal": 98, "strongli": 98, "across": [98, 99, 103, 112, 118, 119, 122, 127, 131, 148, 149], "That": [98, 122, 148, 149], "becaus": [98, 100, 112, 115, 118, 123, 137, 139, 142, 147, 149, 151, 153], "extrapol": [98, 101], "beyond": [98, 106], "envelop": [98, 101], "move": 98, "word": 98, "odd": [98, 99, 101, 112, 127], "exist": [98, 99, 101, 106, 108, 109, 111, 112, 116, 118, 124, 127, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "response_method": [98, 99, 101, 127], "decision_funct": [98, 99, 101, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 146, 150, 152], "tell": [98, 109, 115, 123], "peak": [98, 108, 111, 116, 118, 122], "rush": [98, 108, 111, 118, 121], "hour": [98, 108, 111, 112, 116, 118, 121], "around": [98, 99, 108, 111, 116, 118, 122, 124], "draw": [98, 103, 108, 109, 111, 115, 116, 121, 122, 127, 131, 132], "light": 98, "rain": 98, "etc": [98, 115], "heavi": 98, "technic": 98, "subtract": [98, 100, 112, 116, 127], "lighter": 98, "shade": [98, 109], "darker": [98, 109], "quit": [98, 108, 115, 116], "mind": 98, "dure": [98, 99, 100, 101, 109, 111, 115, 118, 121, 124, 131, 133, 134, 136, 137, 148, 149], "alex2015": 99, "focu": [99, 112, 120, 122, 124], "complement": [99, 101], "c": [99, 101, 113, 123, 125, 134], "document": [99, 102, 122], "snippet": 99, "global_ic": 99, "produc": [99, 131], "constant": [99, 108, 110, 112, 115, 116, 118, 134, 137, 139, 142, 147, 149, 151, 153], "examin": [99, 118, 121], "our": [99, 100, 102, 106, 109, 120, 122, 124, 131], "apart": 99, "period": [99, 121], "goldstein": 99, "alex": 99, "adam": [99, 141, 142], "kapeln": 99, "justin": 99, "bleich": 99, "emil": 99, "pitkin": 99, "2015": [99, 106], "ribeiro2016": [100, 106], "surrog": [100, 103, 122, 127, 163, 164, 165, 166], "lasso": [100, 106, 112, 145], "proxim": 100, "greatli": [100, 103], "judgment": 100, "sens": 100, "stem": [100, 113], "crucial": [100, 114, 118, 120, 121, 122], "itself": [100, 112], "unchang": [100, 102, 112, 123, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "essenti": [100, 112, 118, 119, 124], "rather": [100, 112], "becom": [100, 103, 106, 109, 110, 112, 118, 122, 123, 124], "neglig": [100, 112], "am": [100, 108, 111], "now": [100, 112, 120], "mainli": [100, 112], "intercept": [100, 109, 112, 113, 115, 116, 136, 137, 138, 139, 145, 150, 151], "friedman2001": [101, 106], "assumpt": [101, 110, 112, 115, 123, 135], "suppos": [101, 103, 148], "x_c": 101, "mathbb": [101, 108, 109, 110, 111, 112, 113, 115, 116], "dx_": 101, "commonli": [101, 114, 115, 116, 118], "brute": [101, 133], "partial_depend": [101, 136, 137, 140, 141, 142, 143, 150, 151, 152, 153], "few": [101, 115], "inaccur": 101, "inconsist": 101, "accomplish": [101, 121], "trigger": [101, 112, 113, 115, 136, 137, 138, 139, 141, 142], "tend": [101, 106, 110, 113, 116, 122], "substanti": 101, "4th": 101, "joint": 101, "pdp_size": 101, "daytim": 101, "nighttim": 101, "loss": [102, 109, 115, 118, 124, 127, 141, 142, 146, 147, 149, 150, 151, 152, 153, 162, 163, 164, 165, 166], "l2001": 102, "shuffl": [102, 127], "broken": 102, "drop": [102, 112, 123, 124, 136], "relianc": 102, "fulli": [102, 106, 121], "either": [102, 106, 108, 109, 114, 116, 118, 121, 127, 136, 137, 148, 149], "releas": 102, "achiev": [102, 111, 113, 115, 118, 121, 122, 123, 141, 142], "truncat": [102, 135], "repetit": [102, 123, 127], "valuabl": [102, 115, 118, 122], "appear": [102, 115, 118], "seem": [102, 103], "surpris": 102, "breiman": 102, "2001": [102, 106], "forest": [102, 131], "lundberg2017": [103, 106], "lundberg2018": 103, "concept": 103, "sport": 103, "analogi": 103, "won": 103, "soccer": 103, "game": 103, "winner": 103, "bonu": 103, "fairli": 103, "team": 103, "member": 103, "know": [103, 112, 148, 149], "five": 103, "player": 103, "who": 103, "plai": 103, "role": [103, 108, 116], "victori": 103, "recogn": [103, 120], "come": [103, 106, 136, 137], "success": [103, 113, 136, 137], "imlbook": 103, "shapblog": 103, "possess": 103, "attract": 103, "properti": [103, 113, 134, 148, 149], "missing": 103, "decompos": [103, 116], "prime": 103, "phi_0": 103, "phi_j": 103, "z_j": 103, "coalit": 103, "off": [103, 113, 118, 119, 127, 132, 136, 137], "phi_": 103, "shap_": 103, "subseteq": 103, "backslash": 103, "val": 103, "cup": 103, "factor": [103, 115, 122, 124, 128], "accept": [103, 128, 129, 130, 131, 132, 133, 134, 135], "problemat": 103, "affect": [103, 112, 123, 124, 133], "common": [103, 110, 112], "background": 103, "mere": [103, 121], "challeng": [103, 118], "latter": [103, 123, 132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "break": 103, "interven": 103, "intervent": 103, "inspir": 103, "particularli": [103, 106, 118], "ignor": [103, 120, 124, 125, 127, 134, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "put": [103, 105, 136, 137], "guarante": 103, "lot": 103, "linearshap": 103, "treeshap": 103, "paragraph": 103, "benefit": 103, "math": 103, "coef": 103, "design": [103, 111, 122, 170], "leaf": [103, 109, 115, 116, 132, 133, 138, 139, 148, 149, 150, 151, 152, 153], "went": 103, "exactli": [103, 110, 115, 136, 137], "bit": 103, "slower": [103, 109], "ll": 103, "i_j": 103, "consum": 103, "place": 103, "had": 103, "greatest": 103, "pdf": 103, "spap": 103, "lundberg": [103, 106], "scott": [103, 106], "m": 103, "gabriel": 103, "erion": 103, "su": [103, 106], "lee": [103, 106], "1802": 103, "03888": 103, "abl": [105, 109, 110], "extract": [105, 113, 116, 135], "pickl": [105, 127], "don": [105, 148, 149], "lgbm7": 105, "lgbm_7": 105, "pi": [106, 113], "pai": 106, "em": 106, "el": 106, "access": 106, "grow": [106, 109, 148, 149], "mlop": 106, "platform": [106, 125], "assur": 106, "bank": 106, "project": 106, "supervis": [106, 124], "increasingli": 106, "domain": 106, "lack": 106, "difficult": 106, "trust": [70, 71, 72, 106], "emerg": 106, "pedregosa2011": 106, "kokhlikyan2020": 106, "klaise2021": 106, "baniecki2021": 106, "li2022": 106, "known": [106, 112, 113, 114, 118, 122, 148, 149], "pitfal": 106, "rudin2019": 106, "molnar2020": 106, "yang2021a": 106, "yang2021b": [106, 111], "sudjianto2020": [106, 113], "interpretml": 106, "nori2013": [106, 108], "microsoft": [106, 108], "promot": [106, 119], "boost": [106, 107, 109, 115, 127, 136, 137, 150, 151, 152, 153, 170], "ga2m": 106, "lou2013": [106, 108], "sudjianto2021": 106, "discuss": [106, 118, 123], "meantim": 106, "chung2019": 106, "pycaret": 106, "tensorflow": 106, "finra": 106, "toolkit": 106, "Such": [106, 113, 123], "sometim": [106, 135], "demand": [106, 118], "risk": [106, 115], "manag": [106, 127], "routin": [106, 134], "exercis": 106, "conceptu": 106, "sound": 106, "angl": 106, "been": [106, 109, 110, 113, 114], "launch": 106, "2022": 106, "interfac": [106, 127], "widget": 106, "dashboard": 106, "lab": 106, "choic": [106, 112, 113, 127], "parameter": 106, "action": 106, "cell": [70, 71, 72, 106], "termin": [106, 131, 149], "autom": [106, 135], "registr": [106, 127], "mandatori": 106, "unifi": 106, "glass": 106, "section_3": 106, "section_4": 106, "cover": 106, "treat": [106, 122], "even": [106, 109, 113, 122, 148, 149], "though": 106, "simplif": 106, "worthwhil": 106, "enough": [106, 113, 126], "backend": [106, 127], "simplic": 106, "v0": 106, "latest": 106, "updat": [106, 132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "ell_1": 106, "ell_2": 106, "regular": [106, 110, 111, 112, 113, 120, 130, 136, 137, 141, 142, 144, 145, 146, 147, 150, 151, 152, 153], "hastie2015": 106, "spline": [106, 110, 115, 140, 141, 142, 143], "serven2018": 106, "greedi": [106, 107, 127, 136, 137, 138, 139, 170], "tan2022": [106, 109], "extrem": [106, 109, 113], "gradient": [106, 108, 113, 150, 151, 152, 153], "optim": [106, 115, 118, 127, 130, 133, 134, 136, 137, 141, 142, 150, 151], "chen2015": 106, "guillermo2020": 106, "purifi": [106, 116], "lengerich2020": [106, 115, 116], "network": [106, 107, 110, 111, 141, 142, 146, 147, 170], "aletheia": [106, 113, 146, 147], "unwrapp": [106, 146, 147], "sparsif": 106, "brief": [106, 113], "popular": [106, 112, 118], "quantif": 106, "conform": [106, 121, 127, 158, 159, 160, 161, 162], "cui2023": 106, "out": [106, 113, 115, 122, 124, 141, 142, 146, 147], "de": [106, 113], "art": 106, "improv": [106, 115, 118, 120, 122, 135, 136, 137, 146, 147, 148, 149], "expand": [106, 148, 149], "track": 106, "report": 106, "fabian": 106, "pedregosa": 106, "ga\u00ebl": 106, "varoquaux": 106, "alexandr": 106, "gramfort": 106, "vincent": 106, "michel": 106, "bertrand": 106, "thirion": 106, "olivi": 106, "grisel": 106, "mathieu": 106, "blondel": 106, "prettenhof": 106, "ron": 106, "weiss": 106, "dubourg": 106, "jake": 106, "vanderpla": 106, "passo": 106, "david": 106, "cournapeau": 106, "matthieu": 106, "brucher": 106, "perrot": 106, "\u00e9douard": 106, "duchesnai": 106, "2011": 106, "2825": 106, "2830": 106, "narin": 106, "kokhlikyan": 106, "vivek": 106, "miglani": 106, "miguel": 106, "martin": 106, "edward": 106, "bilal": 106, "alsallakh": 106, "jonathan": 106, "reynold": 106, "alexand": 106, "melnikov": 106, "natalia": 106, "kliushkina": 106, "carlo": 106, "araya": 106, "siqi": 106, "yan": 106, "orion": 106, "reblitz": 106, "richardson": 106, "captum": 106, "librari": [106, 121], "pytorch": [106, 146, 147], "2009": 106, "07896": 106, "jani": 106, "klais": 106, "arnaud": 106, "van": 106, "looveren": 106, "giovanni": 106, "vacanti": 106, "alexandru": 106, "coca": 106, "2021": 106, "alibi": 106, "8194": 106, "8200": 106, "hubert": 106, "baniecki": 106, "wojciech": 106, "kretowicz": 106, "piotr": 106, "piatyszek": 106, "jakub": 106, "wisniewski": 106, "przemyslaw": 106, "biecek": 106, "dalex": 106, "9759": 106, "9765": 106, "xuhong": 106, "haoyi": 106, "xiong": 106, "xingjian": 106, "xuanyu": 106, "zeyu": 106, "deje": 106, "dou": 106, "interpretdl": 106, "paddlepaddl": 106, "cynthia": 106, "rudin": 106, "stake": 106, "natur": [106, 122, 124, 133], "ntellig": 106, "206": 106, "christoph": 106, "molnar": 106, "gunnar": 106, "k\u00f6nig": 106, "julia": 106, "herbing": 106, "timo": 106, "freiesleben": 106, "susann": 106, "dandl": 106, "christian": 106, "scholbeck": 106, "giusepp": 106, "casalicchio": 106, "moritz": 106, "gross": 106, "wentrup": 106, "bernd": 106, "bischl": 106, "xxai": 106, "workshop": 106, "held": 106, "conjunct": [106, 122], "icml": 106, "juli": 106, "vienna": 106, "austria": 106, "revis": 106, "extend": [106, 109], "68": [10, 106], "cham": 106, "springer": 106, "publish": 106, "harsha": 106, "nori": 106, "samuel": 106, "jenkin": 106, "paul": 106, "koch": 106, "rich": 106, "caruana": 106, "framework": [106, 121], "1909": 106, "09223": 106, "yin": 106, "lou": 106, "johann": 106, "gehrk": 106, "gile": 106, "hooker": 106, "2013": 106, "intellig": 106, "proceed": 106, "19th": 106, "sigkdd": 106, "knowledg": 106, "623": 106, "631": 106, "agu": 106, "sudjianto": 106, "aijun": 106, "2111": 106, "01743": 106, "yeounoh": 106, "chung": 106, "tim": 106, "kraska": 106, "neokli": 106, "polyzoti": 106, "ki": 106, "hyun": 106, "tae": 106, "steven": 106, "euijong": 106, "whang": 106, "finder": 106, "35th": 106, "icd": 106, "1550": 106, "1553": 106, "daniel": 106, "aplei": 106, "jingyu": 106, "zhu": 106, "2016": 106, "royal": 106, "societi": 106, "seri": 106, "82": [106, 123, 124], "1086": 106, "marco": 106, "tulio": 106, "ribeiro": 106, "sameer": 106, "singh": 106, "guestrin": 106, "why": [106, 115], "22nd": 106, "2017": 106, "advanc": 106, "neural": [106, 107, 110, 111, 170], "trevor": 106, "hasti": 106, "robert": 106, "tibshirani": 106, "wainwright": 106, "sparsiti": [106, 111, 132, 135], "crc": 106, "press": 106, "jerom": 106, "1189": 106, "serv\u00e9n": 106, "charli": 106, "brummitt": 106, "pygam": [106, 110, 125, 140, 143], "zenodo": 106, "5281": 106, "1208723": 106, "shuo": 106, "tan": 106, "chandan": 106, "keyan": 106, "nasseri": 106, "abhineet": 106, "agarw": 106, "2201": 106, "11931": 106, "benjamin": 106, "lengerich": 106, "sarah": 106, "chun": 106, "june": 106, "anova": [106, 116, 136, 137, 140, 141, 142, 143, 150, 151, 152, 153], "recov": 106, "artifici": 106, "2402": 106, "2412": 106, "pmlr": 106, "tianqi": 106, "tong": 106, "william": 106, "knauth": 106, "rahul": 106, "zebin": 106, "yang": 106, "unwrap": [106, 113], "04041": 106, "shiji": 106, "cui": 106, "runz": 106, "hot": [106, 112, 115], "2304": 106, "13761": 106, "architectur": [106, 141, 142], "constraint": [106, 111, 112, 115, 116, 124, 138, 139, 141, 142, 150, 151, 152, 153], "transact": 106, "2610": 106, "2621": 106, "120": 106, "108192": 106, "nava": 106, "palencia": 106, "guillermo": 106, "program": [106, 127], "08025": 106, "mu": [108, 109, 110, 111, 112, 115, 116], "limits_": [108, 111, 115, 116], "h_": [108, 111, 115, 116], "f_": [108, 109, 110, 111, 116], "jk": [108, 111, 116], "shallow": [108, 114], "round": [108, 123, 136, 137], "fashion": [108, 148, 149], "cut": [108, 127, 136, 137], "pick": [108, 127], "converg": [108, 113, 116, 140, 143], "piecewis": [108, 110, 111, 115, 116], "sacrific": [108, 119], "togeth": [108, 110, 111, 112, 113, 141, 142], "pm": [108, 111], "somehow": 108, "night": 108, "spring": 108, "domin": [108, 116], "part": [108, 109, 116], "titl": [108, 109, 111, 115, 116], "0818": 108, "complet": [108, 111, 118, 119], "almost": 108, "cart": 109, "f_k": 109, "mathbf": 109, "manner": [109, 122, 127], "pseudo": [109, 127, 131], "express": [109, 110, 113, 116, 141, 142], "form": [109, 112, 113, 114, 116, 118, 132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "whichev": 109, "imodel": [109, 138, 139], "integ": [109, 127, 131, 136, 137, 148, 149], "unlimit": [109, 148, 149], "criteria": [109, 122, 148, 149], "hardli": 109, "complic": [109, 113], "gain": [109, 118, 120, 122, 148], "along": [109, 118, 123, 124], "hierarch": 109, "dendrogram": 109, "subplot": [109, 113, 118], "middl": [109, 118], "thu": 109, "deeper": [109, 121], "rightmost": 109, "convei": 109, "necessari": [109, 119, 121], "decision_tre": 109, "099": 109, "094": 109, "primari": [110, 137], "equat": [110, 113, 148, 149], "unknown": 110, "smooth": [110, 111, 118, 136, 137, 138, 139, 140, 143, 148, 149], "varieti": 110, "degre": [110, 120, 130, 134], "polynomi": [110, 134], "quadrat": 110, "cubic": 110, "knot": 110, "anchor": 110, "With": [110, 112, 115, 122], "poorer": [110, 122], "penalti": [110, 112, 113, 140, 143], "prevent": [110, 120, 130], "encourag": 110, "simpler": [110, 113, 115], "generaliz": 110, "smoother": 110, "rougher": 110, "slope": 110, "flat": 110, "steep": 110, "sharp": 110, "incom": 110, "area": [110, 118, 119, 120, 122, 123, 124], "_j": [110, 115], "strongest": 110, "drive": 110, "3804": 110, "reformul": 111, "disentangl": [111, 113], "feedforward": [111, 113], "subnetwork": [111, 141, 142], "hidden": [111, 113, 141, 142, 146, 147], "layer": [111, 113, 141, 142, 146, 147], "parsimoni": [111, 116], "hered": [111, 141, 142], "least": [111, 113, 115, 138, 139, 145, 148, 149], "parent": 111, "clariti": [111, 141, 142], "purif": [111, 116], "constrain": [111, 115, 118], "decreas": [111, 115, 122, 138, 139, 141, 142, 148, 149, 150, 151, 152, 153], "impos": [111, 141, 142, 146, 147], "gaminet": 111, "prune": [111, 116, 141, 142, 148, 149], "trivial": [111, 113, 116], "retrain": 111, "simultan": 111, "fine": [111, 141, 142], "activ": [111, 113, 116, 141, 142, 146, 147], "saturdai": 111, "sundai": 111, "mondai": 111, "fridai": 111, "compon": [111, 113, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "aggreg": [111, 112, 116, 124, 133], "literatur": 112, "reader": 112, "consult": 112, "mccullagh1989": 112, "w_1": 112, "x_1": 112, "w_2": 112, "x_2": 112, "w_d": 112, "x_d": 112, "analyz": [112, 118, 119, 121, 124], "ident": [112, 113, 118, 121, 127, 137, 148, 149], "logit": [112, 136, 152], "l2": [112, 133, 144, 145, 149, 150, 151, 152, 153], "penal": [112, 113, 141, 142], "shrink": [112, 113, 134], "toward": [112, 113], "spars": [112, 128, 129, 130, 131, 132, 133, 134, 135, 148, 149], "shrunk": 112, "variant": [112, 115], "linear_model": 112, "linearregress": 112, "ridg": [112, 145], "elasticnet": [112, 145], "elast": 112, "logisticregress": 112, "hold": [112, 122], "adapt": [112, 115], "opposit": [112, 134], "temperatur": [112, 116], "humid": 112, "dummi": 112, "season_1": 112, "season_2": 112, "season_3": 112, "season_4": 112, "overparameter": 112, "fourth": 112, "nonlinear": [112, 113], "print": 112, "screen": [112, 141, 142], "export": 112, "w_j": 112, "absorb": 112, "unstabl": [112, 113, 123], "turn": [112, 115, 127, 136, 137, 141, 142], "mccullagh": 112, "john": 112, "nelder": 112, "1989": 112, "chapman": 112, "hall": 112, "edit": 112, "rectifi": 113, "remark": 113, "appeal": 113, "excel": 113, "intrins": 113, "neuron": 113, "chi": 113, "mbox": 113, "sigmoid": [113, 134, 141, 142], "despit": 113, "said": 113, "equiv": 113, "n_l": 113, "exhibit": [113, 118, 120, 122, 123], "simplifi": [113, 115], "tild": 113, "oper": [113, 114, 121], "tupl": [113, 127, 132, 134, 136, 137, 140, 141, 142, 143, 146, 147, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167], "poor": [113, 120, 122], "1e": [113, 127, 134, 136, 137, 141, 142, 146, 147], "descent": 113, "unpen": 113, "float": [113, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167], "critic": 113, "unnecessarili": 113, "wherea": 113, "5153": 113, "105570": 113, "584421": 113, "735054": 113, "static": 113, "wide": 113, "roughli": 113, "vice": [113, 136, 137], "versa": [113, 136, 137], "upon": [113, 118], "eleg": 113, "diagon": [113, 118], "decomposit": [113, 115], "uniformli": [113, 141, 142], "sin": 113, "epsilon": 113, "n_featur": [113, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "influenti": 114, "render": [70, 71, 72, 114], "decisiontreeregressor": 114, "often": 114, "rule": [114, 132, 138, 139], "criterion": [114, 134, 148, 149], "branch": [114, 131, 138, 139, 148, 149], "restrict": 115, "stump": 115, "stage": [115, 136, 137, 141, 142, 146, 147], "optbin": [115, 125], "woe": 115, "firstli": 115, "arrang": 115, "inherit": [115, 116], "tree_method": [115, 116, 150, 151, 152, 153], "correctli": [115, 118, 134, 136, 138, 141, 146, 148, 150, 152], "max_n_bin": 115, "strike": 115, "difficulti": [115, 122], "fit_method": 115, "iv": 115, "accompani": [115, 122, 124], "trend": [115, 118, 122], "plateau": 115, "geograph": 115, "amplifi": 115, "lontitud": 115, "restructur": 116, "proce": [116, 123], "enforc": [116, 140, 143], "feel": 116, "celsiu": 116, "comfort": 116, "outdoor": 116, "cooler": 116, "hotter": 116, "peopl": 116, "willing": 116, "ride": 116, "bicycl": 116, "0606": 116, "summat": 116, "plu": [116, 118], "y_": [118, 121], "regardless": 118, "showcas": 118, "ideal": [118, 121], "band": 118, "residual_plot": 118, "wider": 118, "logic": 118, "evenli": 118, "lastli": 118, "_predict": 118, "imbalanc": 118, "incorrect": [118, 123, 124], "guess": [118, 135], "harmon": 118, "2tp": 118, "fp": 118, "fn": 118, "entropi": [118, 148], "diverg": 118, "p_": 118, "scatterplot": 118, "lowess": 118, "match": [118, 125, 127], "tp": 118, "tn": 118, "mislabel": 118, "tpr": 118, "fpr": 118, "maxim": 118, "closer": 118, "corner": 118, "maintain": 118, "irrelev": 118, "tradeoff": 118, "imparti": 119, "ethnic": 119, "sexual": 119, "orient": 119, "disabl": [119, 127], "subscript": 119, "tp_": 119, "fp_": 119, "fn_": 119, "smd": [119, 127], "binar": [119, 127], "leverag": 119, "bucket": [119, 127, 163], "granular": 119, "span": 119, "dictionari": [119, 136, 137, 138, 139, 148, 149], "enumer": 119, "dash": 119, "preval": 120, "character": 120, "strong": 120, "unseen": 120, "allevi": 120, "empow": 120, "pinpoint": 120, "promin": 120, "tendenc": 120, "messag": [120, 124, 125], "emphasi": 120, "7am": 120, "9am": 120, "0171": 120, "0156": 120, "exce": [120, 121], "insuffici": [120, 124], "confid": 121, "crqr": 121, "interchang": 121, "epsilon_": 121, "s_": 121, "histgradientboostingregressor": 121, "gbdt": 121, "delv": 121, "clarifi": 121, "whose": 121, "wise": [121, 135], "2563": 121, "establish": 121, "notion": 121, "yet": 121, "matur": 121, "isoton": 121, "analog": 121, "sustain": 122, "face": 122, "verifi": 122, "unexpect": [122, 123], "facilit": 122, "At": 122, "divers": 122, "refin": 122, "likelihood": 122, "sophist": 122, "harder": 122, "inde": 122, "poorest": 122, "increment": 122, "tailor": 122, "hover": 122, "interestingli": 122, "gradual": 122, "declin": 122, "unsupervis": [122, 124, 129, 130, 132], "plausibl": 122, "outperform": 122, "fluctuat": 122, "variat": [122, 123], "55": [7, 10, 60, 69, 73, 122], "thought": 122, "recalcul": 122, "moder": 122, "encount": 123, "noisi": 123, "alter": 123, "underli": [123, 148, 149], "delta": [123, 136, 137], "ten": 123, "made": 123, "throughout": 123, "forthcom": 123, "lambda": [123, 146, 147], "var": [123, 134], "invalid": 123, "skew": 123, "tail": 123, "solv": 123, "yield": [123, 127, 135], "back": 123, "kept": [123, 135], "were": 123, "previous": 123, "wors": [123, 137, 139, 142, 147, 149, 151, 153], "poorli": 123, "prone": 124, "underperform": 124, "aris": 124, "inadequ": 124, "unsuit": 124, "filter": 124, "suffici": 124, "merg": 124, "min_samples_leaf": [124, 132, 136, 137, 138, 139, 148, 149], "accordingli": 124, "simpli": 124, "723": 124, "boolean": [124, 138, 139], "annot": 124, "test_metr": 124, "train_metr": 124, "sai": 124, "No": [124, 125, 146, 147], "retain": [124, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "o": 125, "py38": 125, "py39": 125, "py310": 125, "win": 125, "linux": 125, "maco": 125, "mac": 125, "m1": 125, "environ": [70, 71, 72, 125], "pip": 125, "cmake": 125, "conda": 125, "ipykernel": 125, "ipywidget": 125, "joblib": [125, 127, 131, 136, 137], "ipython": 125, "matplotlib": 125, "seaborn": 125, "xlrd": 125, "torch": [125, 141, 142], "natsort": 125, "psutil": 125, "dill": 125, "ortool": 125, "momentchi2": 125, "upgrad": 125, "reinstal": 125, "try": [70, 71, 72, 125], "forg": 125, "compil": 125, "0x10": 125, "0xf": 125, "restart": 125, "runtim": [125, 127, 131, 134], "guidelin": 126, "bool": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 167], "css": 127, "ingest": 127, "look": [127, 148, 149], "bad": 127, "union": [127, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "unicod": [127, 136, 137], "dict": [127, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "reset": 127, "preview": 127, "retriev": 127, "mi": 127, "n_samples_train": [127, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "n_samples_test": [127, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "score_distribut": 127, "marginal_outlier_distribut": 127, "forward": 127, "backward": 127, "earli": [127, 136, 137, 138, 139, 141, 142, 146, 147], "fbedk": 127, "get_data": 127, "ndarrai": [127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "Not": [127, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "get_feature_nam": 127, "get_feature_typ": 127, "get_interpretable_model_list": 127, "get_leaderboard": 127, "model_nam": 127, "get_leaderboard_regist": 127, "get_model": 127, "modelpipelin": 127, "get_model_config": 127, "get_model_list": 127, "get_raw_data": 127, "datatupl": 127, "train_sample_weight": 127, "test_sample_weight": 127, "get_target_nam": 127, "fit_func": 127, "excluded_featur": 127, "normalize_strategi": 127, "encode_strategi": 127, "callabl": [127, 132, 133, 134], "receiv": 127, "one_hot": 127, "_estimator_typ": 127, "minmax": 127, "unit_norm": 127, "regressor": [127, 137, 139, 142, 143, 145, 147, 149, 151, 153], "insid": [127, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 159], "testresult": 127, "tri": 127, "revert": 127, "metric_threshold": 127, "favorable_class": 127, "thresholding_bin": 127, "by_weight": 127, "rsmd": 127, "categorical_feature_nam": 127, "useless": 127, "savedmodel": 127, "get_all_supported_model": 127, "cv": 127, "exhaust": 127, "solut": [127, 131], "fold": 127, "kfold": 127, "splitter": [127, 138, 139, 148, 149], "multiclass": [127, 136], "stratifiedkfold": 127, "instanti": 127, "job": [127, 129, 131, 133, 136, 137], "parallel_backend": [127, 131], "processor": [127, 131, 133], "glossari": 127, "slice_bin": 127, "weaskspot": 127, "clustering_method": 128, "clustering_threshold": 128, "use_weight": 128, "gmm": 128, "base_estimator_": [128, 131], "is_fitted_": [128, 132, 141, 142, 146, 147, 150, 151, 152, 153], "cluster_centers_": 128, "cluster_sizes_": 128, "small_cluster_labels_": 128, "large_cluster_labels_": 128, "detector": [128, 129, 130, 131, 132, 133, 134, 135], "outlier_scor": [128, 129, 130, 131, 132, 133, 134, 135], "outlier_ind": [128, 129, 130, 131, 132, 133, 134, 135], "pyod": [129, 130], "free": 129, "core": [129, 141, 142], "n_bin": 130, "tol": [130, 134, 135], "outlying": 130, "build": [130, 131], "birg": 130, "rozenblac": 130, "overflow": 130, "max_sampl": 131, "max_featur": [131, 148, 149], "bootstrap": 131, "warm_start": [131, 141, 142], "isol": 131, "n_features_in_": [131, 132, 134, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "randomst": [131, 148, 149], "estimator_": 131, "extratreeregressor": 131, "templat": 131, "sub": [131, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "estimators_": 131, "estimators_features_": 131, "drawn": 131, "estimators_samples_": 131, "bag": [131, 136, 137], "max_samples_": 131, "offset_": [131, 134], "offset": [131, 134], "score_sampl": [131, 134], "contamin": 131, "inlier": 131, "seen": [131, 134], "feature_names_in_": [131, 134, 136, 137], "n_compon": [132, 135], "d_reduction_method": [132, 135], "min_dist": 132, "distance_measur": 132, "reconsterr": 132, "distance_measure_param": 132, "sparsepca": 132, "sparse_pca": 132, "n_samples1": 132, "n_samples2": 132, "tree_": [132, 148, 149], "node_count_": 132, "leaf_idx_list_": 132, "calculate_spca": 132, "dist": 132, "decision_path": [132, 148, 149], "path_al": 132, "node_count": [132, 148, 149], "get_param": [132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "subobject": [132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "map": [132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "get_rul": 132, "node_id": 132, "inequ": 132, "plot_tre": 132, "draw_depth": 132, "inf": 132, "start_node_id": 132, "predict_leaf_id": 132, "set_param": [132, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153], "nest": [132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "__": [132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "n_neighbor": 133, "radiu": 133, "leaf_siz": 133, "minkowski": 133, "metric_param": 133, "score_method": 133, "ball_tre": 133, "kd_tree": 133, "balltre": 133, "kdtree": 133, "forc": 133, "attempt": 133, "overrid": 133, "queri": 133, "store": 133, "precomput": [133, 134, 137, 139, 142, 147, 149, 151, 153], "nonzero": 133, "pairwise_dist": 133, "manhattan_dist": 133, "euclidean_dist": 133, "minkowski_dist": 133, "l_p": 133, "rbf": 134, "coef0": 134, "nu": 134, "cache_s": 134, "libsvm": 134, "poli": 134, "toler": [134, 135, 136, 137, 141, 142], "fraction": [134, 148, 149, 150, 151], "heurist": 134, "cach": 134, "properli": 134, "multithread": 134, "solver": [134, 135, 140, 143], "class_weight_": 134, "n_class": [134, 136, 148], "class_weight": [134, 148], "coef_": 134, "primal": 134, "readonli": 134, "dual_coef_": 134, "support_vectors_": 134, "n_sv": 134, "fit_status_": 134, "intercept_": [134, 136, 137, 138, 139, 150, 151], "n_iter_": [134, 138, 139], "n_support_": 134, "dtype": [134, 148, 149], "int32": 134, "shape_fit_": 134, "n_dimensions_of_x": 134, "support_": 134, "n_selected_compon": 135, "cumulative_vari": 135, "score_typ": 135, "copi": 135, "whiten": 135, "svd_solver": 135, "iterated_pow": 135, "mle": 135, "minka": 135, "arpack": 135, "princip": 135, "overwritten": 135, "fit_transform": 135, "components_": 135, "singular": 135, "uncorrel": 135, "signal": 135, "downstream": 135, "wire": 135, "polici": 135, "500x500": 135, "exact": [135, 150, 151, 152, 153], "svd": 135, "afterward": 135, "lapack": 135, "linalg": 135, "postprocess": 135, "strictli": 135, "halko": 135, "et": 135, "sparser": 135, "auto_exampl": 135, "plot_scaling_import": 135, "sequenc": [136, 137], "max_interaction_bin": [136, 137], "validation_s": [136, 137], "outer_bag": [136, 137], "inner_bag": [136, 137], "smoothing_round": [136, 137], "max_round": [136, 137], "early_stopping_toler": [136, 137], "0001": [136, 137, 141, 142], "log_loss": [136, 148], "featuretyp": [136, 137], "inner": [136, 137], "robin": [136, 137], "intermix": [136, 137], "cyclic": [136, 137], "n_term": [136, 137], "dictat": [136, 137], "n_cpu": [136, 137], "eg": [136, 137], "thread": [136, 137], "device_random": [136, 137], "classes_": [136, 148], "resolv": [136, 137], "feature_types_in_": [136, 137], "nomin": [136, 137], "bins_": [136, 137], "n_cut": [136, 137], "resolut": [136, 137], "item": [136, 137], "feature_bounds_": [136, 137], "feature_index": [136, 137], "histogram_edges_": [136, 137], "n_hist_edg": [136, 137], "edg": [136, 137], "histogram_weights_": [136, 137], "n_hist_bin": [136, 137], "unique_val_counts_": [136, 137], "term_features_": [136, 137], "term_names_": [136, 137], "bin_weights_": [136, 137], "n_feature0_bin": [136, 137], "n_featuren_bin": [136, 137], "tensor": [136, 137, 141, 142], "bagged_scores_": [136, 137], "n_outer_bag": [136, 137], "term_scores_": [136, 137], "standard_deviations_": [136, 137], "link_": [136, 137], "invers": [136, 137, 148], "custom_classif": 136, "probit": 136, "cloglog": 136, "loglog": 136, "cauchit": 136, "link_param_": [136, 137], "bag_weights_": [136, 137], "breakpoint_iteration_": [136, 137], "n_stage": [136, 137], "init_scor": [136, 137], "softmax": [136, 137, 140, 141, 146, 147, 152], "pred": [136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 150, 151, 152, 153], "content": [136, 137], "parse_model": [136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "fanovainterpret": [136, 137, 140, 141, 142, 143, 150, 151, 152, 153], "fidx": [136, 137, 140, 141, 142, 143, 150, 151, 152, 153], "harsh": [136, 138, 141, 146, 148, 150, 152], "n_output": [136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "wrt": [], "rmse": 137, "poisson_devi": 137, "tweedie_devi": 137, "variance_pow": 137, "gamma_devi": 137, "pseudo_hub": 137, "rmse_log": 137, "custom_regress": 137, "inverse_squar": 137, "min_target_": 137, "max_target_": 137, "y_true": [137, 139, 142, 147, 149, 151, 153], "y_pred": [137, 139, 142, 147, 149, 151, 153], "arbitrarili": [137, 139, 142, 147, 149, 151, 153], "disregard": [137, 139, 142, 147, 149, 151, 153], "n_samples_fit": [137, 139, 142, 147, 149, 151, 153], "multioutput": [137, 139, 142, 147, 148, 149, 151, 153], "uniform_averag": [137, 139, 142, 147, 149, 151, 153], "r2_score": [137, 139, 142, 147, 149, 151, 153], "multioutputregressor": [137, 139, 142, 147, 149, 151, 153], "min_impurity_decreas": [138, 139, 148, 149], "concis": [138, 139], "csinva": [138, 139], "induc": [138, 139, 148, 149], "impur": [138, 139, 148, 149], "feature_names_": [138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "feature_types_": [138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "trees_": [138, 139], "n_tree_": [138, 139], "early_stop_": [138, 139], "figsinterpret": [138, 139], "pred_proba": [138, 141, 146, 150, 152], "stronger": [140, 143], "interact_num": [141, 142], "subnet_size_main_effect": [141, 142], "subnet_size_interact": [141, 142], "activation_func": [141, 142], "max_epoch": [141, 142, 146, 147], "early_stop_thr": [141, 142], "batch_siz": [141, 142, 146, 147], "batch_size_infer": [141, 142, 146, 147], "max_iter_per_epoch": [141, 142], "val_ratio": [141, 142, 146, 147], "gam_sample_s": [141, 142], "mlp_sample_s": [141, 142], "reg_clar": [141, 142], "loss_threshold": [141, 142], "reg_mono": [141, 142], "mono_sample_s": [141, 142], "include_interaction_list": [141, 142], "boundary_clip": [141, 142], "devic": [141, 142, 146, 147], "cpu": [141, 142, 146, 147], "tanh": [141, 142], "epoch": [141, 142, 146, 147], "batch": [141, 142, 146, 147], "clip": [141, 142], "reshuffl": [141, 142], "rough": [141, 142], "teacher": [141, 142], "And": [141, 142], "feature_name1": [141, 142], "feature_name2": [141, 142], "hardwar": [141, 142], "net_": [141, 142, 146, 147], "data_dict_density_": [141, 142], "err_train_main_effect_training_": [141, 142], "err_val_main_effect_training_": [141, 142], "err_train_interaction_training_": [141, 142], "err_val_interaction_training_": [141, 142], "err_train_tuning_": [141, 142], "err_val_tuning_": [141, 142], "interaction_list_": [141, 142], "active_main_effect_index_": [141, 142], "active_interaction_index_": [141, 142], "main_effect_val_loss_": [141, 142], "interaction_val_loss_": [141, 142], "time_cost_": [141, 142], "cost": [141, 142, 148, 149], "clarity_": [141, 142], "monotonicity_": [141, 142], "n_interactions_": [141, 142], "dummy_values_": [141, 142], "cfeature_num_": [141, 142], "nfeature_num_": [141, 142], "cfeature_names_": [141, 142], "nfeature_names_": [141, 142], "cfeature_index_list_": [141, 142], "nfeature_index_list_": [141, 142], "num_classes_list_": [141, 142], "mu_list_": [141, 142], "std_list_": [141, 142], "min_value_": [141, 142, 150, 151], "max_value_": [141, 142, 150, 151], "mono_increasing_list_index_": [141, 142], "mono_decreasing_list_index_": [141, 142], "include_interaction_list_index_": [141, 142], "training_generator_": [141, 142], "fasttensordataload": [141, 142], "validation_generator_": [141, 142], "warm_init_main_effect_data_": [141, 142], "warm": [141, 142], "warm_init_interaction_data_": [141, 142], "main_effect_norm_": [141, 142], "interaction_norm_": [141, 142], "feature_importance_": 141, "data_dict_global_": [141, 142], "global_explain": [141, 142], "certify_mono": [141, 142], "certifi": [141, 142], "satisfi": [141, 142], "mono_statu": [141, 142], "main_effect": [141, 142], "fine_tune_select": [141, 142], "main_effect_list": [141, 142], "interaction_list": [141, 142], "lr": [141, 142], "unselect": [141, 142], "norm": [141, 142], "get_clarity_loss": [141, 142], "clarity_loss": [141, 142], "get_interaction_raw_output": [141, 142], "n_interact": [141, 142], "get_main_effect_raw_output": [141, 142], "get_mono_loss": [141, 142], "mono_loss": [141, 142], "get_raw_output": [141, 142, 146, 147, 150, 151], "folder": [141, 142], "disk": [141, 142], "partial_deriv": [141, 142], "arg": 144, "kwarg": 144, "fit_intercept": 145, "ordinari": 145, "dropout_prob": [146, 147], "n_epoch_no_chang": [146, 147], "iht": [146, 147], "phase_epoch": [146, 147], "perceptron": [146, 147], "dropout": [146, 147], "doesn": [146, 147], "early_stop": [146, 147], "cuda": [146, 147], "coefs_": [146, 147], "len": [146, 147], "ith": [146, 147], "intercepts_": [146, 147], "no_improved_count_": [146, 147], "train_epoch_loss_": [146, 147], "valid_epoch_loss_": [146, 147], "reludnninterpreterregressor": [146, 147], "gini": [148, 149], "min_samples_split": [148, 149], "min_weight_fraction_leaf": [148, 149], "max_leaf_nod": [148, 149], "ccp_alpha": [148, 149], "docstr": [148, 149], "shannon": 148, "pure": [148, 149], "ceil": [148, 149], "log2": [148, 149], "determinist": [148, 149], "behaviour": [148, 149], "n_t": [148, 149], "n_t_r": [148, 149], "right_impur": [148, 149], "n_t_l": [148, 149], "left_impur": [148, 149], "class_label": 148, "multilabel": 148, "bincount": 148, "subtre": [148, 149], "feature_importances_": [148, 149], "max_features_": [148, 149], "n_classes_": 148, "n_outputs_": [148, 149], "check_input": [148, 149], "float32": [148, 149], "csr_matrix": [148, 149], "bypass": [148, 149], "what": [148, 149], "x_leav": [148, 149], "datapoint": [148, 149], "possibli": [148, 149], "cost_complexity_pruning_path": [148, 149], "minimal_cost_complexity_prun": [148, 149], "csc_matrix": [148, 149], "ccp_path": [148, 149], "bunch": [148, 149], "n_node": [148, 149], "csr": [148, 149], "goe": [148, 149], "brought": [148, 149], "mislead": [148, 149], "cardin": [148, 149], "get_depth": [148, 149], "get_n_leav": [148, 149], "n_leav": [148, 149], "n_features_": [], "treeinterpret": [148, 149], "predict_log_proba": 148, "squared_error": 149, "friedman_ms": 149, "absolute_error": 149, "poisson": 149, "devianc": 149, "refit_method": [150, 151], "max_bin_s": [150, 151], "xgboostclassifi": [150, 152], "hist": [150, 151, 152, 153], "approx": [150, 151, 152, 153], "gpu_hist": [150, 151, 152, 153], "split_info_": [150, 151, 152, 153], "n_splits_raw_": [150, 151, 152, 153], "n_splits_": [150, 151, 152, 153], "xgb_params_": [150, 151, 152, 153], "effects_": [150, 151], "xgboostregressor": [151, 153], "prediciton": [154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "prediciton_proba": [154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "classificaiton": [154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "clust": [163, 164, 165, 166], "plan": 170, "149": [], "342": [1, 10], "933": [2, 10], "923760": 3, "929452": 3, "260359": 3, "861864": 3, "153148": 3, "999646": 3, "568220": 3, "920856": 3, "793794": 3, "311438": 3, "107107": 3, "236782": 3, "507921": 3, "891474": 3, "240083": 3, "147721": 3, "429036": 3, "085349": 3, "036160": 3, "141465": 3, "915235": 3, "193195": 3, "894009": 3, "666920": 3, "951967": 3, "145228": 3, "587569": 3, "049118": 3, "962080": 3, "539617": 3, "9936": 3, "685917": 3, "831241": 3, "643806": 3, "192005": 3, "302455": 3, "246895": 3, "9937": 3, "980609": 3, "490023": 3, "540031": 3, "020184": 3, "398338": 3, "040732": 3, "9938": 3, "053380": 3, "451221": 3, "628862": 3, "506235": 3, "978696": 3, "857460": 3, "9939": 3, "113459": 3, "342467": 3, "131910": 3, "661086": 3, "550873": 3, "142535": 3, "9940": 3, "858162": 3, "696682": 3, "788425": 3, "505327": 3, "711172": 3, "026190": 3, "x10": 3, "x11": 3, "x12": 3, "158396": 3, "466310": 3, "228137": 3, "197944": 3, "702516": 3, "153963": 3, "969285": 3, "419837": 3, "050497": 3, "068522": 3, "678835": 3, "528093": 3, "577660": 3, "052048": 3, "656888": 3, "329484": 3, "510444": 3, "868010": 3, "959204": 3, "512183": 3, "861425": 3, "107798": 3, "047494": 3, "441984": 3, "698838": 3, "024117": 3, "552178": 3, "749296": 3, "439403": 3, "357544": 3, "680478": 3, "545764": 3, "186019": 3, "563612": 3, "175493": 3, "225190": 3, "405374": 3, "850722": 3, "015887": 3, "576620": 3, "489120": 3, "731340": 3, "545941": 3, "391624": 3, "977576": 3, "861670": 3, "789615": 3, "552572": 3, "471298": 3, "799903": 3, "969604": 3, "649524": 3, "704074": 3, "961257": 3, "953188": 3, "428435": 3, "435003": 3, "921429": 3, "194681": 3, "424976": 3, "695725": 3, "614117": 3, "965241": 3, "728521": 3, "135215": 3, "606650": 3, "285540": 3, "341292": 3, "054804": 3, "900080": 3, "x13": 3, "x14": 3, "x15": 3, "x16": 3, "x17": 3, "x18": 3, "x19": 3, "753852": 3, "021110": 3, "423251": 3, "544949": 3, "059133": 3, "182197": 3, "526057": 3, "055030": 3, "612181": 3, "837734": 3, "836447": 3, "380787": 3, "465425": 3, "862833": 3, "057377": 3, "105574": 3, "839525": 3, "121630": 3, "973400": 3, "424608": 3, "285383": 3, "351870": 3, "940702": 3, "636508": 3, "636708": 3, "673674": 3, "633613": 3, "567475": 3, "742873": 3, "105724": 3, "242886": 3, "007499": 3, "692501": 3, "288249": 3, "657329": 3, "739571": 3, "548231": 3, "440240": 3, "777707": 3, "525195": 3, "459004": 3, "786996": 3, "918212": 3, "902263": 3, "585619": 3, "022697": 3, "878476": 3, "009396": 3, "668018": 3, "616770": 3, "820043": 3, "461397": 3, "965643": 3, "749891": 3, "692603": 3, "209052": 3, "726714": 3, "826072": 3, "140214": 3, "135824": 3, "539611": 3, "742285": 3, "722223": 3, "643725": 3, "979740": 3, "729875": 3, "440688": 3, "092653": 3, "041888": 3, "127520": 3, "9941": 3, "9942": 3, "9943": 3, "045730": 3, "326387": 3, "268916": 3, "693610": 3, "915673": 3, "055057": 3, "973427": 3, "731310": 3, "787218": 3, "981075": 3, "869181": 3, "600501": 3, "362439": 3, "146836": 3, "721168": 3, "842062": 3, "458269": 3, "681012": 3, "10063": 3, "10064": 3, "10065": 3, "10066": 3, "265447": 3, "634243": 3, "536475": 3, "652185": 3, "645323": 3, "471498": 3, "10067": 3, "373199": 3, "937777": 3, "595071": 3, "936052": 3, "090821": 3, "810647": 3, "656001": 3, "506928": 3, "870119": 3, "415627": 3, "470040": 3, "867057": 3, "162025": 3, "736540": 3, "465908": 3, "112689": 3, "130465": 3, "875728": 3, "795032": 3, "691200": 3, "108903": 3, "396589": 3, "707853": 3, "480938": 3, "912466": 3, "096194": 3, "857041": 3, "449722": 3, "148472": 3, "522410": 3, "923009": 3, "771907": 3, "608592": 3, "087266": 3, "549144": 3, "239407": 3, "380178": 3, "492337": 3, "349016": 3, "506669": 3, "830336": 3, "275095": 3, "397204": 3, "195678": 3, "735364": 3, "909225": 3, "761424": 3, "499538": 3, "629786": 3, "092684": 3, "094790": 3, "572062": 3, "105812": 3, "992951": 3, "516746": 3, "609859": 3, "945260": 3, "987533": 3, "082069": 3, "712856": 3, "943726": 3, "745791": 3, "726223": 3, "064732": 3, "294157": 3, "289262": 3, "139202": 3, "567704": 3, "825483": 3, "867263": 3, "688121": 3, "688267": 3, "714397": 3, "773891": 3, "731018": 3, "670544": 3, "10068": 3, "842": [4, 10], "515": [5, 10], "420277": [6, 93], "990": [6, 10], "0x000001ecaa046be0": 7, "0x000001ecaa33bf40": 7, "notif": 7, "000483": 7, "421": [7, 10], "298": [8, 10], "981": 8, "884": [9, 10], "546": 10, "980": 10, "891": [47, 60], "831": [48, 60], "705185": 49, "688787": 49, "016398": 49, "375000": 49, "562500": 49, "855072": 49, "733607": 49, "121466": 49, "250000": 49, "696335": 49, "667500": 49, "028835": 49, "111111": [49, 51], "222222": [49, 51], "727612": 49, "720711": 49, "006901": 49, "625000": 49, "720497": 49, "716396": 49, "004101": 49, "333333": [49, 51], "555556": [49, 67], "615385": 49, "611888": 49, "003497": 49, "623377": 49, "630252": 49, "006875": 49, "444444": [49, 51], "696443": 49, "687623": 49, "00882": 49, "647843": 49, "707116": 49, "059273": 49, "635018": 49, "697042": 49, "062024": 49, "548108": 49, "632486": 49, "084378": 49, "525000": 49, "717857": 49, "192857": 49, "631410": 49, "440000": 49, "277778": 49, "727575": 49, "699367": 49, "028208": 49, "166667": 49, "686170": 49, "679837": 49, "006334": 49, "346": [49, 60], "021922": [50, 52], "019718": [50, 52], "002204": [50, 52], "030705": 50, "030399": 50, "000306": 50, "021868": 50, "020749": 50, "001119": 50, "015925": 50, "015833": 50, "000092": 50, "010331": 50, "011008": 50, "000677": 50, "116319": 50, "110566": 50, "005752": 50, "104566": 50, "103100": 50, "001466": 50, "282609": 50, "369565": 50, "149505": 50, "135181": 50, "014324": 50, "074912": 50, "074687": 50, "000226": 50, "304": [50, 60], "287852": 51, "378122": 51, "756098": 51, "847328": 51, "091231": 51, "716694": 51, "803749": 51, "633333": 51, "709402": 51, "076068": 51, "731146": 51, "795340": 51, "600000": 51, "700000": 51, "923726": 51, "955823": 51, "579710": 51, "683432": 51, "103722": 51, "281421": 51, "368475": 51, "708333": 51, "813333": 51, "105000": 51, "621259": 51, "671508": 51, "650000": 51, "780822": 51, "130822": 51, "010347": 52, "009588": 52, "000759": 52, "008136": 52, "007511": 52, "000625": 52, "50000": 52, "66364": 52, "042139": 52, "035002": 52, "007137": 52, "23181": 52, "46362": 52, "024964": 52, "019805": 52, "005159": 52, "13640": 52, "56060": 52, "009529": 52, "007840": 52, "001689": 52, "25457": 52, "39395": 52, "001970": 52, "001105": 52, "000865": 52, "19696": 52, "06386": 52, "058902": 52, "004958": 52, "669": [52, 60], "796": [53, 60], "543": 53, "9014": 54, "2231": 54, "355": [54, 60], "548": [55, 60], "72": 55, "696": [56, 60], "921": [57, 60], "701": [58, 60], "612033": 59, "745017": 59, "448478": 59, "660683": 59, "476657": 59, "642644": 59, "631886": 59, "655566": 59, "648640": 59, "797800": 59, "878099": 59, "826573": 59, "716314": 59, "000417": 59, "006274": 59, "504874": 59, "000923": 59, "000765": 59, "506355": 59, "003168": 59, "977638": 59, "512651": 59, "004761": 59, "927340": 59, "527559": 59, "016014": 59, "843932": 59, "537350": 59, "567428": 59, "987334": 59, "357741": 59, "571804": 59, "974271": 59, "361105": 59, "580483": 59, "932135": 59, "371267": 59, "592132": 59, "831032": 59, "399143": 59, "591780": 59, "662691": 59, "401393": 59, "434648": 59, "006134": 59, "387706": 59, "438844": 59, "992799": 59, "391476": 59, "456871": 59, "953012": 59, "401125": 59, "485168": 59, "857056": 59, "429040": 59, "512867": 59, "707792": 59, "433976": 59, "471957": 59, "996156": 59, "415318": 59, "474554": 59, "986532": 59, "417922": 59, "492126": 59, "947620": 59, "427600": 59, "519137": 59, "863248": 59, "451588": 59, "525922": 59, "678122": 59, "429242": 59, "483528": 59, "003555": 59, "405391": 59, "487295": 59, "991995": 59, "408717": 59, "504830": 59, "950847": 59, "418617": 59, "522744": 59, "873913": 59, "441206": 59, "517155": 59, "705468": 59, "430237": 59, "332385": 59, "886243": 59, "67575": 59, "891746": 59, "843": 60, "542": 60, "71": 60, "535": [62, 65], "116": [62, 65], "354": [63, 65], "712368": 64, "645317": 64, "832585": 64, "781893": 64, "825086": 64, "440479": 64, "901729": 64, "695277": 64, "689973": 64, "545689": 64, "745220": 64, "650615": 64, "633800": 64, "696345": 64, "591785": 64, "708004": 64, "613486": 64, "713067": 64, "602803": 64, "820892": 64, "748971": 64, "873440": 64, "714674": 64, "821206": 64, "336": [64, 65], "225": 65, "984127": 67, "023810": 67, "238137": 67, "971880": 67, "109842": 67, "288136": 67, "073446": 67, "802260": 67, "817352": 67, "073059": 67, "547945": 67, "281853": 67, "081081": 67, "181467": 67, "045455": 67, "133333": 67, "560606": 67, "114035": 67, "315789": 67, "122807": 67, "205543": 67, "120092": 67, "325635": 67, "329513": 67, "171920": 67, "123209": 67, "254717": 67, "162264": 67, "616981": 67, "757": [67, 73], "max_cat_threshold": [70, 71, 72], "rerun": [70, 71, 72], "unabl": [70, 71, 72], "page": [70, 71, 72], "nbviewer": [70, 71, 72], "xgbregressorxgbregressor": [70, 72], "265": [70, 73], "xgbclassifierxgbclassifi": 71, "162": [71, 73], "8843": 72, "4041": 72, "214": [72, 73], "527": 73, "0x000001ecaa506580": 75, "0x000001ed122097f0": 75, "0x000001ed12213760": 76, "0x000001ed123d5e50": 76, "769": [76, 77], "671": 77, "get_metadata_rout": [132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "metadata": [132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "rout": [132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "mechan": [132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "metadatarequest": [132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "encapsul": [132, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153], "set_score_request": [136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "request": [136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "enable_metadata_rout": [136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "set_config": [136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "alia": [136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "metadata_rout": [136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153], "set_fit_request": [148, 149], "set_predict_proba_request": 148, "set_predict_request": [148, 149]}, "objects": {"piml": [[127, 0, 1, "", "Experiment"]], "piml.Experiment": [[127, 1, 1, "", "data_loader"], [127, 1, 1, "", "data_prepare"], [127, 1, 1, "", "data_quality"], [127, 1, 1, "", "data_summary"], [127, 1, 1, "", "eda"], [127, 1, 1, "", "feature_select"], [127, 1, 1, "", "get_data"], [127, 1, 1, "", "get_feature_names"], [127, 1, 1, "", "get_feature_types"], [127, 1, 1, "", "get_interpretable_model_list"], [127, 1, 1, "", "get_leaderboard"], [127, 1, 1, "", "get_leaderboard_registered"], [127, 1, 1, "", "get_model"], [127, 1, 1, "", "get_model_config"], [127, 1, 1, "", "get_model_list"], [127, 1, 1, "", "get_raw_data"], [127, 1, 1, "", "get_target_name"], [127, 1, 1, "", "make_pipeline"], [127, 1, 1, "", "model_compare"], [127, 1, 1, "", "model_diagnose"], [127, 1, 1, "", "model_explain"], [127, 1, 1, "", "model_fairness"], [127, 1, 1, "", "model_fairness_compare"], [127, 1, 1, "", "model_fairness_solas"], [127, 1, 1, "", "model_interpret"], [127, 1, 1, "", "model_save"], [127, 1, 1, "", "model_train"], [127, 1, 1, "", "model_tune"], [127, 1, 1, "", "register"], [127, 1, 1, "", "segmented_diagnose"], [127, 1, 1, "", "twosample_test"]], "piml.data.outlier_detection": [[128, 0, 1, "", "CBLOF"], [129, 0, 1, "", "ECOD"], [130, 0, 1, "", "HBOS"], [131, 0, 1, "", "IsolationForest"], [132, 0, 1, "", "KMeansTree"], [133, 0, 1, "", "KNN"], [134, 0, 1, "", "OneClassSVM"], [135, 0, 1, "", "PCA"]], "piml.data.outlier_detection.CBLOF": [[128, 1, 1, "", "decision_function"], [128, 1, 1, "", "fit"], [128, 1, 1, "", "predict"]], "piml.data.outlier_detection.ECOD": [[129, 1, 1, "", "decision_function"], [129, 1, 1, "", "fit"], [129, 1, 1, "", "predict"]], "piml.data.outlier_detection.HBOS": [[130, 1, 1, "", "decision_function"], [130, 1, 1, "", "fit"], [130, 1, 1, "", "predict"]], "piml.data.outlier_detection.IsolationForest": [[131, 1, 1, "", "decision_function"], [131, 1, 1, "", "fit"], [131, 1, 1, "", "predict"]], "piml.data.outlier_detection.KMeansTree": [[132, 1, 1, "", "decision_function"], [132, 1, 1, "", "decision_path"], [132, 1, 1, "", "fit"], [132, 1, 1, "", "get_metadata_routing"], [132, 1, 1, "", "get_params"], [132, 1, 1, "", "get_rule"], [132, 1, 1, "", "plot_tree"], [132, 1, 1, "", "predict"], [132, 1, 1, "", "predict_leaf_id"], [132, 1, 1, "", "set_params"]], "piml.data.outlier_detection.KNN": [[133, 1, 1, "", "decision_function"], [133, 1, 1, "", "fit"], [133, 1, 1, "", "predict"]], "piml.data.outlier_detection.OneClassSVM": [[134, 1, 1, "", "decision_function"], [134, 1, 1, "", "fit"], [134, 1, 1, "", "predict"]], "piml.data.outlier_detection.PCA": [[135, 1, 1, "", "decision_function"], [135, 1, 1, "", "fit"], [135, 1, 1, "", "predict"]], "piml.models": [[136, 0, 1, "", "ExplainableBoostingClassifier"], [137, 0, 1, "", "ExplainableBoostingRegressor"], [138, 0, 1, "", "FIGSClassifier"], [139, 0, 1, "", "FIGSRegressor"], [140, 0, 1, "", "GAMClassifier"], [141, 0, 1, "", "GAMINetClassifier"], [142, 0, 1, "", "GAMINetRegressor"], [143, 0, 1, "", "GAMRegressor"], [144, 0, 1, "", "GLMClassifier"], [145, 0, 1, "", "GLMRegressor"], [146, 0, 1, "", "ReluDNNClassifier"], [147, 0, 1, "", "ReluDNNRegressor"], [148, 0, 1, "", "TreeClassifier"], [149, 0, 1, "", "TreeRegressor"], [150, 0, 1, "", "XGB1Classifier"], [151, 0, 1, "", "XGB1Regressor"], [152, 0, 1, "", "XGB2Classifier"], [153, 0, 1, "", "XGB2Regressor"]], "piml.models.ExplainableBoostingClassifier": [[136, 1, 1, "", "decision_function"], [136, 1, 1, "", "fit"], [136, 1, 1, "", "get_metadata_routing"], [136, 1, 1, "", "get_params"], [136, 1, 1, "", "parse_model"], [136, 1, 1, "", "partial_dependence"], [136, 1, 1, "", "predict"], [136, 1, 1, "", "predict_proba"], [136, 1, 1, "", "score"], [136, 1, 1, "", "set_params"], [136, 1, 1, "", "set_score_request"]], "piml.models.ExplainableBoostingRegressor": [[137, 1, 1, "", "decision_function"], [137, 1, 1, "", "fit"], [137, 1, 1, "", "get_metadata_routing"], [137, 1, 1, "", "get_params"], [137, 1, 1, "", "parse_model"], [137, 1, 1, "", "partial_dependence"], [137, 1, 1, "", "predict"], [137, 1, 1, "", "score"], [137, 1, 1, "", "set_params"], [137, 1, 1, "", "set_score_request"]], "piml.models.FIGSClassifier": [[138, 1, 1, "", "decision_function"], [138, 1, 1, "", "fit"], [138, 1, 1, "", "get_metadata_routing"], [138, 1, 1, "", "get_params"], [138, 1, 1, "", "parse_model"], [138, 1, 1, "", "predict"], [138, 1, 1, "", "predict_proba"], [138, 1, 1, "", "score"], [138, 1, 1, "", "set_params"], [138, 1, 1, "", "set_score_request"]], "piml.models.FIGSRegressor": [[139, 1, 1, "", "fit"], [139, 1, 1, "", "get_metadata_routing"], [139, 1, 1, "", "get_params"], [139, 1, 1, "", "parse_model"], [139, 1, 1, "", "predict"], [139, 1, 1, "", "score"], [139, 1, 1, "", "set_params"], [139, 1, 1, "", "set_score_request"]], "piml.models.GAMClassifier": [[140, 1, 1, "", "decision_function"], [140, 1, 1, "", "fit"], [140, 1, 1, "", "get_metadata_routing"], [140, 1, 1, "", "get_params"], [140, 1, 1, "", "parse_model"], [140, 1, 1, "", "partial_dependence"], [140, 1, 1, "", "predict"], [140, 1, 1, "", "predict_proba"], [140, 1, 1, "", "score"], [140, 1, 1, "", "set_params"]], "piml.models.GAMINetClassifier": [[141, 1, 1, "", "certify_mono"], [141, 1, 1, "", "decision_function"], [141, 1, 1, "", "fine_tune_selected"], [141, 1, 1, "", "fit"], [141, 1, 1, "", "get_clarity_loss"], [141, 1, 1, "", "get_interaction_raw_output"], [141, 1, 1, "", "get_main_effect_raw_output"], [141, 1, 1, "", "get_metadata_routing"], [141, 1, 1, "", "get_mono_loss"], [141, 1, 1, "", "get_params"], [141, 1, 1, "", "get_raw_output"], [141, 1, 1, "", "load"], [141, 1, 1, "", "parse_model"], [141, 1, 1, "", "partial_dependence"], [141, 1, 1, "", "partial_derivatives"], [141, 1, 1, "", "predict"], [141, 1, 1, "", "predict_proba"], [141, 1, 1, "", "save"], [141, 1, 1, "", "score"], [141, 1, 1, "", "set_params"], [141, 1, 1, "", "set_score_request"]], "piml.models.GAMINetRegressor": [[142, 1, 1, "", "certify_mono"], [142, 1, 1, "", "fine_tune_selected"], [142, 1, 1, "", "fit"], [142, 1, 1, "", "get_clarity_loss"], [142, 1, 1, "", "get_interaction_raw_output"], [142, 1, 1, "", "get_main_effect_raw_output"], [142, 1, 1, "", "get_metadata_routing"], [142, 1, 1, "", "get_mono_loss"], [142, 1, 1, "", "get_params"], [142, 1, 1, "", "get_raw_output"], [142, 1, 1, "", "load"], [142, 1, 1, "", "parse_model"], [142, 1, 1, "", "partial_dependence"], [142, 1, 1, "", "partial_derivatives"], [142, 1, 1, "", "predict"], [142, 1, 1, "", "save"], [142, 1, 1, "", "score"], [142, 1, 1, "", "set_params"], [142, 1, 1, "", "set_score_request"]], "piml.models.GAMRegressor": [[143, 1, 1, "", "fit"], [143, 1, 1, "", "get_metadata_routing"], [143, 1, 1, "", "get_params"], [143, 1, 1, "", "parse_model"], [143, 1, 1, "", "partial_dependence"], [143, 1, 1, "", "predict"], [143, 1, 1, "", "score"], [143, 1, 1, "", "set_params"]], "piml.models.ReluDNNClassifier": [[146, 1, 1, "", "decision_function"], [146, 1, 1, "", "fit"], [146, 1, 1, "", "get_metadata_routing"], [146, 1, 1, "", "get_params"], [146, 1, 1, "", "get_raw_output"], [146, 1, 1, "", "parse_model"], [146, 1, 1, "", "predict"], [146, 1, 1, "", "predict_proba"], [146, 1, 1, "", "score"], [146, 1, 1, "", "set_params"], [146, 1, 1, "", "set_score_request"]], "piml.models.ReluDNNRegressor": [[147, 1, 1, "", "fit"], [147, 1, 1, "", "get_metadata_routing"], [147, 1, 1, "", "get_params"], [147, 1, 1, "", "get_raw_output"], [147, 1, 1, "", "parse_model"], [147, 1, 1, "", "predict"], [147, 1, 1, "", "score"], [147, 1, 1, "", "set_params"], [147, 1, 1, "", "set_score_request"]], "piml.models.TreeClassifier": [[148, 1, 1, "", "apply"], [148, 1, 1, "", "cost_complexity_pruning_path"], [148, 1, 1, "", "decision_path"], [148, 2, 1, "", "feature_importances_"], [148, 1, 1, "", "fit"], [148, 1, 1, "", "get_depth"], [148, 1, 1, "", "get_metadata_routing"], [148, 1, 1, "", "get_n_leaves"], [148, 1, 1, "", "get_params"], [148, 1, 1, "", "parse_model"], [148, 1, 1, "", "predict"], [148, 1, 1, "", "predict_log_proba"], [148, 1, 1, "", "predict_proba"], [148, 1, 1, "", "score"], [148, 1, 1, "", "set_fit_request"], [148, 1, 1, "", "set_params"], [148, 1, 1, "", "set_predict_proba_request"], [148, 1, 1, "", "set_predict_request"], [148, 1, 1, "", "set_score_request"]], "piml.models.TreeRegressor": [[149, 1, 1, "", "apply"], [149, 1, 1, "", "cost_complexity_pruning_path"], [149, 1, 1, "", "decision_path"], [149, 2, 1, "", "feature_importances_"], [149, 1, 1, "", "fit"], [149, 1, 1, "", "get_depth"], [149, 1, 1, "", "get_metadata_routing"], [149, 1, 1, "", "get_n_leaves"], [149, 1, 1, "", "get_params"], [149, 1, 1, "", "parse_model"], [149, 1, 1, "", "predict"], [149, 1, 1, "", "score"], [149, 1, 1, "", "set_fit_request"], [149, 1, 1, "", "set_params"], [149, 1, 1, "", "set_predict_request"], [149, 1, 1, "", "set_score_request"]], "piml.models.XGB1Classifier": [[150, 1, 1, "", "decision_function"], [150, 1, 1, "", "fit"], [150, 1, 1, "", "get_metadata_routing"], [150, 1, 1, "", "get_params"], [150, 1, 1, "", "get_raw_output"], [150, 1, 1, "", "parse_model"], [150, 1, 1, "", "partial_dependence"], [150, 1, 1, "", "predict"], [150, 1, 1, "", "predict_proba"], [150, 1, 1, "", "score"], [150, 1, 1, "", "set_params"], [150, 1, 1, "", "set_score_request"]], "piml.models.XGB1Regressor": [[151, 1, 1, "", "fit"], [151, 1, 1, "", "get_metadata_routing"], [151, 1, 1, "", "get_params"], [151, 1, 1, "", "get_raw_output"], [151, 1, 1, "", "parse_model"], [151, 1, 1, "", "partial_dependence"], [151, 1, 1, "", "predict"], [151, 1, 1, "", "score"], [151, 1, 1, "", "set_params"], [151, 1, 1, "", "set_score_request"]], "piml.models.XGB2Classifier": [[152, 1, 1, "", "decision_function"], [152, 1, 1, "", "fit"], [152, 1, 1, "", "get_metadata_routing"], [152, 1, 1, "", "get_params"], [152, 1, 1, "", "parse_model"], [152, 1, 1, "", "partial_dependence"], [152, 1, 1, "", "predict"], [152, 1, 1, "", "predict_proba"], [152, 1, 1, "", "score"], [152, 1, 1, "", "set_params"], [152, 1, 1, "", "set_score_request"]], "piml.models.XGB2Regressor": [[153, 1, 1, "", "fit"], [153, 1, 1, "", "get_metadata_routing"], [153, 1, 1, "", "get_params"], [153, 1, 1, "", "parse_model"], [153, 1, 1, "", "partial_dependence"], [153, 1, 1, "", "predict"], [153, 1, 1, "", "score"], [153, 1, 1, "", "set_params"], [153, 1, 1, "", "set_score_request"]], "piml.scored_test": [[154, 3, 1, "", "test_accuracy_plot"], [155, 3, 1, "", "test_accuracy_residual"], [156, 3, 1, "", "test_accuracy_table"], [157, 3, 1, "", "test_overfit"], [158, 3, 1, "", "test_reliability_calibration"], [159, 3, 1, "", "test_reliability_distance"], [160, 3, 1, "", "test_reliability_marginal"], [161, 3, 1, "", "test_reliability_perf"], [162, 3, 1, "", "test_reliability_table"], [163, 3, 1, "", "test_resilience_distance"], [164, 3, 1, "", "test_resilience_perf"], [165, 3, 1, "", "test_resilience_shift_density"], [166, 3, 1, "", "test_resilience_shift_histogram"], [167, 3, 1, "", "test_weakspot"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"]}, "titleterms": {"data": [0, 1, 2, 3, 4, 6, 7, 19, 21, 81, 82, 83, 84, 85, 90, 92, 93, 94, 95, 105, 121, 126, 128, 129, 130, 131, 132, 133, 134, 135], "pipelin": [0, 21, 90, 126], "load": [1, 2, 3, 81, 82, 83, 84, 85, 92, 105, 125], "built": [1, 92], "dataset": [1, 92], "panda": [2, 3, 92], "datafram": [2, 3, 92], "summari": [4, 95, 103, 113], "eda": 5, "prepar": [6, 81, 82, 83, 84, 85, 93], "qualiti": [7, 94], "check": 7, "featur": [8, 12, 95, 96, 102, 103, 108, 109, 110, 111, 112, 113, 115, 116, 123], "select": [8, 96], "two": [9, 97, 98, 101, 120, 124], "sampl": [9, 87, 89, 93, 97, 123], "test": [9, 21, 46, 59, 66, 71, 72, 81, 82, 83, 84, 85, 93, 96, 97, 105, 123, 126], "comput": [10, 20, 41, 45, 60, 65, 73, 77], "time": [10, 20, 41, 45, 60, 65, 73, 77], "post": [11, 21, 104, 126], "hoc": [11, 21, 104, 126], "explain": [11, 21, 81, 82, 85, 104, 108, 126], "permut": [12, 102], "import": [12, 96, 102, 103, 108, 109, 110, 111, 112, 113, 115, 116, 125], "partial": [13, 101], "depend": [13, 19, 101, 103, 125], "plot": [13, 91, 97, 101, 103, 108, 110, 111, 113, 115, 116, 118, 120, 124], "h": 14, "statist": [14, 95], "individu": [15, 99], "condit": [15, 96, 99], "expect": [15, 99], "accumul": [16, 98], "local": [16, 17, 94, 98, 100, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116], "effect": [16, 98, 108, 110, 111, 115, 116], "interpret": [17, 21, 22, 81, 82, 85, 100, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 126], "model": [17, 21, 22, 61, 62, 63, 66, 67, 68, 69, 70, 74, 81, 82, 83, 84, 85, 86, 100, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 126, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "agnost": [17, 100], "explan": [17, 18, 19, 100, 103], "shaplei": [18, 103], "addit": [18, 103, 110], "exampl": [21, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "hyperparamet": [21, 42], "optim": [21, 42], "outcom": [21, 46, 81, 82, 85, 126], "comparison": [21, 61, 62, 63, 64, 81, 82, 84, 85, 86, 87, 88, 89, 94, 97, 122], "train": [21, 66, 67, 81, 82, 83, 84, 85, 93, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116], "extern": [21, 66, 67, 92], "segment": [21, 74, 75, 76, 88, 119], "diagnos": [21, 74, 75, 76], "glm": [23, 24, 44], "logist": 23, "regress": [23, 24, 26, 28, 30, 32, 34, 36, 38, 40, 48, 50, 52, 54, 56, 58, 63, 72, 76, 89, 112, 118, 121], "taiwan": [23, 29, 33, 35, 37, 39, 87, 108, 109, 111, 112, 113, 114, 116, 118, 120, 121, 122, 123, 124], "credit": [23, 29, 33, 35, 37, 39, 87, 108, 109, 111, 112, 113, 114, 116, 118, 120, 121, 122, 123, 124], "linear": [24, 112, 113], "bike": [24, 34, 36, 38, 43, 98, 99, 100, 101, 102, 103, 112], "share": [24, 34, 36, 38, 43, 98, 99, 100, 101, 102, 103, 112], "gam": [25, 26], "classif": [25, 27, 29, 31, 33, 35, 37, 39, 47, 49, 51, 53, 55, 57, 62, 71, 75, 87, 118, 121], "cocircl": [25, 31, 110, 115], "california": [26, 28, 30, 32, 110], "hous": [26, 28, 30, 32, 110], "tree": [27, 28, 109, 114], "taiwancredit": [27, 85], "fig": [29, 30], "xgb": [31, 32, 33, 34, 43], "1": [31, 32, 83, 87, 89, 92, 98, 99, 100, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124], "2": [33, 34, 84, 92, 98, 99, 100, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124], "ebm": [35, 36], "gami": [37, 38, 111], "net": [37, 38, 111], "relu": [39, 40, 113], "dnn": [39, 40], "friedman": [40, 113], "hpo": [43, 44], "grid": 43, "search": [43, 44], "random": [44, 93, 96], "simucredit": [44, 98, 99, 100, 101, 102, 103], "accuraci": [47, 48, 87, 89, 118], "weakspot": [49, 50, 124], "overfit": [51, 52, 87, 89, 120], "reliabl": [53, 54, 87, 89, 121], "robust": [55, 56, 87, 89, 123], "resili": [57, 58, 87, 89, 122], "fair": [59, 64, 83, 84, 88, 119], "xgb2": 59, "regist": [68, 69, 70, 105], "arbitrari": [68, 105], "h2o": 69, "sklearn": 70, "style": 70, "score": [71, 72, 87, 89, 94, 121, 126], "tabl": [78, 113, 118, 121], "Of": 78, "content": 78, "frequent": 79, "ask": 79, "question": 79, "case": 80, "studi": [80, 83, 84], "bikeshar": [81, 89, 108, 111, 115, 116, 118, 120, 121, 123, 124], "intepret": [81, 82, 85], "diagnost": [81, 82, 85, 105, 106, 117], "benchmark": [81, 82, 85], "californiah": [82, 109, 114, 122], "simul": [83, 84], "ml": [83, 84], "": [83, 84], "descript": 84, "auc": 87, "f1": 87, "bandwidth": [87, 89, 121], "diagram": [87, 109, 121], "perform": [87, 89, 122], "worst": [87, 89, 123], "distanc": [87, 89, 96, 97, 121, 122], "metric": [88, 97, 119], "mean": 89, "squar": 89, "error": 89, "absolut": 89, "r": 89, "coverag": [89, 121], "exploratori": 91, "analysi": [91, 94], "univari": 91, "bivari": 91, "multivari": 91, "from": 92, "basic": 93, "set": 93, "split": 93, "outer": 93, "base": [93, 94], "kmean": 93, "manual": 93, "methodologi": 94, "isol": 94, "forest": 94, "cluster": 94, "outlier": [94, 126], "factor": 94, "cblof": [94, 128], "princip": 94, "compon": 94, "kmeanstre": [94, 132], "distribut": 94, "margin": [94, 97, 121, 122], "differ": 94, "method": 94, "refer": [94, 96, 99, 102, 103, 106, 112, 126], "numer": [95, 123], "categor": [95, 123], "manipul": 95, "remov": 95, "chang": 95, "type": 95, "correl": 96, "us": [96, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "independ": 96, "rcit": 96, "forward": 96, "backward": 96, "earli": 96, "drop": 96, "fbedk": 96, "usag": [97, 98, 99, 100, 101, 102, 103, 120, 122, 123, 124], "densiti": [97, 122], "al": 98, "algorithm": [98, 99, 100, 101, 102, 103, 120, 122, 123, 124, 126], "detail": [98, 99, 100, 101, 102, 103, 120, 122, 123, 124], "One": [98, 101, 120, 124], "wai": [98, 101, 120, 124], "ic": 99, "lime": 100, "pdp": 101, "pfi": 102, "shap": 103, "exact": 103, "solut": 103, "kernelshap": 103, "specif": 103, "The": 103, "waterfal": 103, "global": [104, 108, 109, 110, 111, 112, 113, 114, 115, 116], "black": 105, "box": 105, "save": 105, "fit": 105, "run": 105, "introduct": 106, "toolbox": 106, "design": 106, "suit": [106, 117], "futur": 106, "plan": 106, "boost": 108, "machin": 108, "main": [108, 110, 111, 115, 116], "interact": [108, 111, 116], "contribut": [108, 111, 113, 116], "fast": 109, "greedi": 109, "sum": 109, "heatmap": 109, "gener": [110, 112], "coeffici": 112, "origin": 112, "scale": 112, "option": 112, "center": 112, "neural": 113, "network": 113, "formul": 113, "llm": 113, "parallel": 113, "coordin": 113, "violin": 113, "profil": 113, "pairwis": 113, "decis": 114, "xgboost": [115, 116], "depth": [115, 116], "weight": 115, "evid": 115, "inform": 115, "valu": 115, "task": [118, 121], "residu": 118, "binari": [118, 121], "bin": 119, "threshold": 119, "un": 121, "classifi": 121, "calibr": 121, "brier": 121, "histogram": 122, "perturb": 123, "For": 123, "variabl": 123, "whole": 123, "instal": 125, "quick": 125, "troubleshoot": 125, "could": 125, "find": 125, "version": 125, "satisfi": 125, "requir": 125, "piml": [125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "cannot": 125, "uninstal": 125, "llvmlite": 125, "librari": 125, "libxgboost": 125, "so": 125, "colab": 125, "api": 126, "function": 126, "detect": 126, "class": 126, "integr": 126, "high": 126, "code": 126, "experi": 127, "outlier_detect": [128, 129, 130, 131, 132, 133, 134, 135], "ecod": 129, "hbo": 130, "isolationforest": 131, "knn": 133, "oneclasssvm": 134, "pca": 135, "explainableboostingclassifi": 136, "explainableboostingregressor": 137, "figsclassifi": 138, "figsregressor": 139, "gamclassifi": 140, "gaminetclassifi": 141, "gaminetregressor": 142, "gamregressor": 143, "glmclassifi": 144, "glmregressor": 145, "reludnnclassifi": 146, "reludnnregressor": 147, "treeclassifi": 148, "treeregressor": 149, "xgb1classifi": 150, "xgb1regressor": 151, "xgb2classifi": 152, "xgb2regressor": 153, "scored_test": [154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "test_accuracy_plot": 154, "test_accuracy_residu": 155, "test_accuracy_t": 156, "test_overfit": 157, "test_reliability_calibr": 158, "test_reliability_dist": 159, "test_reliability_margin": 160, "test_reliability_perf": 161, "test_reliability_t": 162, "test_resilience_dist": 163, "test_resilience_perf": 164, "test_resilience_shift_dens": 165, "test_resilience_shift_histogram": 166, "test_weakspot": 167, "welcom": 168, "user": 170, "guid": 170}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Data Pipeline": [[0, "data-pipeline"], [21, "data-pipeline"], [90, "data-pipeline"], [126, "data-pipeline"]], "Data Load (Built-in Dataset)": [[1, "data-load-built-in-dataset"]], "Data Load (Pandas DataFrame)": [[2, "data-load-pandas-dataframe"], [3, "data-load-pandas-dataframe"]], "Data Summary": [[4, "data-summary"], [95, "data-summary"]], "EDA": [[5, "eda"]], "Data Preparation": [[6, "data-preparation"], [93, "data-preparation"]], "Data Quality Check": [[7, "data-quality-check"]], "Feature Selection": [[8, "feature-selection"], [96, "feature-selection"]], "Two Sample Test": [[9, "two-sample-test"], [97, "two-sample-test"]], "Computation times": [[10, "computation-times"], [20, "computation-times"], [41, "computation-times"], [45, "computation-times"], [60, "computation-times"], [65, "computation-times"], [73, "computation-times"], [77, "computation-times"]], "Post hoc Explainability": [[11, "post-hoc-explainability"], [21, "post-hoc-explainability"]], "Permutation Feature Importance": [[12, "permutation-feature-importance"]], "Partial Dependence Plot": [[13, "partial-dependence-plot"]], "H-statistics": [[14, "h-statistics"]], "Individual Conditional Expectation": [[15, "individual-conditional-expectation"]], "Accumulated Local Effects": [[16, "accumulated-local-effects"]], "Local Interpretable Model-Agnostic Explanation": [[17, "local-interpretable-model-agnostic-explanation"]], "SHapley Additive exPlanations": [[18, "shapley-additive-explanations"]], "Data Dependent Explanation": [[19, "data-dependent-explanation"]], "Examples": [[21, "examples"], [87, "examples"], [88, "examples"], [89, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [103, "examples"], [105, "examples"], [108, "examples"], [109, "examples"], [111, "examples"], [112, "examples"], [113, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [123, "examples"], [124, "examples"]], "Interpretable Models": [[21, "interpretable-models"], [22, "interpretable-models"], [106, "interpretable-models"], [107, "interpretable-models"], [126, "interpretable-models"]], "Hyperparameter Optimization": [[21, "hyperparameter-optimization"], [42, "hyperparameter-optimization"]], "Outcome Testing": [[21, "outcome-testing"], [46, "outcome-testing"], [126, "outcome-testing"]], "Model Comparison": [[21, "model-comparison"], [61, "model-comparison"], [86, "model-comparison"]], "Training and Testing External Models": [[21, "training-and-testing-external-models"], [66, "training-and-testing-external-models"]], "Model Segmented Diagnosics": [[21, "model-segmented-diagnosics"], [74, "model-segmented-diagnosics"]], "GLM Logistic Regression (Taiwan Credit)": [[23, "glm-logistic-regression-taiwan-credit"]], "GLM Linear Regression (Bike Sharing)": [[24, "glm-linear-regression-bike-sharing"]], "GAM Classification (CoCircles)": [[25, "gam-classification-cocircles"]], "GAM Regression (California Housing)": [[26, "gam-regression-california-housing"]], "Tree Classification (TaiwanCredit)": [[27, "tree-classification-taiwancredit"]], "Tree Regression (California Housing)": [[28, "tree-regression-california-housing"]], "FIGS Classification (Taiwan Credit)": [[29, "figs-classification-taiwan-credit"]], "FIGS Regression (California Housing)": [[30, "figs-regression-california-housing"]], "XGB-1 Classification (CoCircles)": [[31, "xgb-1-classification-cocircles"]], "XGB-1 Regression (California Housing)": [[32, "xgb-1-regression-california-housing"]], "XGB-2 Classification (Taiwan Credit)": [[33, "xgb-2-classification-taiwan-credit"]], "XGB-2 Regression (Bike Sharing)": [[34, "xgb-2-regression-bike-sharing"]], "EBM Classification (Taiwan Credit)": [[35, "ebm-classification-taiwan-credit"]], "EBM Regression (Bike Sharing)": [[36, "ebm-regression-bike-sharing"]], "GAMI-Net Classification (Taiwan Credit)": [[37, "gami-net-classification-taiwan-credit"]], "GAMI-Net Regression (Bike Sharing)": [[38, "gami-net-regression-bike-sharing"]], "ReLU DNN Classification (Taiwan Credit)": [[39, "relu-dnn-classification-taiwan-credit"]], "ReLU DNN Regression (Friedman)": [[40, "relu-dnn-regression-friedman"]], "HPO - XGB - Grid Search (Bike Sharing)": [[43, "hpo-xgb-grid-search-bike-sharing"]], "HPO - GLM - Random Search (SimuCredit)": [[44, "hpo-glm-random-search-simucredit"]], "Accuracy: Classification": [[47, "accuracy-classification"]], "Accuracy: Regression": [[48, "accuracy-regression"]], "WeakSpot: Classification": [[49, "weakspot-classification"]], "WeakSpot: Regression": [[50, "weakspot-regression"]], "Overfit: Classification": [[51, "overfit-classification"]], "Overfit: Regression": [[52, "overfit-regression"]], "Reliability: Classification": [[53, "reliability-classification"]], "Reliability: Regression": [[54, "reliability-regression"]], "Robustness: Classification": [[55, "robustness-classification"]], "Robustness:  Regression": [[56, "robustness-regression"]], "Resilience:  Classification": [[57, "resilience-classification"]], "Resilience - Regression": [[58, "resilience-regression"]], "Fairness Test: XGB2": [[59, "fairness-test-xgb2"]], "Model Comparison: Classification": [[62, "model-comparison-classification"]], "Model Comparison: Regression": [[63, "model-comparison-regression"]], "Fairness Comparison": [[64, "fairness-comparison"], [88, "fairness-comparison"]], "Train External Models": [[67, "train-external-models"]], "Registering Arbitrary Models": [[68, "registering-arbitrary-models"]], "Registering H2O Models": [[69, "registering-h2o-models"]], "Registering sklearn Style Models": [[70, "registering-sklearn-style-models"]], "Scored Test (Classification)": [[71, "scored-test-classification"]], "Scored Test (Regression)": [[72, "scored-test-regression"]], "Segmented Diagnose (Classification)": [[75, "segmented-diagnose-classification"]], "Segmented Diagnose (Regression)": [[76, "segmented-diagnose-regression"]], "Table Of Contents": [[78, "table-of-contents"]], "Frequently Asked Questions": [[79, "frequently-asked-questions"]], "Case Studies": [[80, "case-studies"]], "BikeSharing Data": [[81, "BikeSharing-Data"]], "Load and Prepare Data": [[81, "Load-and-Prepare-Data"], [82, "Load-and-Prepare-Data"], [83, "Load-and-Prepare-Data"], [85, "Load-and-Prepare-Data"]], "Train Intepretable Models": [[81, "Train-Intepretable-Models"], [82, "Train-Intepretable-Models"], [85, "Train-Intepretable-Models"]], "Interpretability and Explainability": [[81, "Interpretability-and-Explainability"], [82, "Interpretability-and-Explainability"], [85, "Interpretability-and-Explainability"]], "Model Diagnostics and Outcome Testing": [[81, "Model-Diagnostics-and-Outcome-Testing"], [82, "Model-Diagnostics-and-Outcome-Testing"], [85, "Model-Diagnostics-and-Outcome-Testing"]], "Model Comparison and Benchmarking": [[81, "Model-Comparison-and-Benchmarking"], [82, "Model-Comparison-and-Benchmarking"], [85, "Model-Comparison-and-Benchmarking"]], "CaliforniaHousing Data": [[82, "CaliforniaHousing-Data"]], "Fairness Simulation Study 1": [[83, "Fairness-Simulation-Study-1"]], "Train ML Model(s)": [[83, "Train-ML-Model(s)"], [84, "Train-ML-Model(s)"]], "Fairness Testing": [[83, "Fairness-Testing"], [84, "Fairness-Testing"]], "Fairness Simulation Study 2": [[84, "Fairness-Simulation-Study-2"]], "Data Description": [[84, "Data-Description"]], "Load and Prepare data": [[84, "Load-and-Prepare-data"]], "Fairness Testing Comparison": [[84, "Fairness-Testing-Comparison"]], "TaiwanCredit Data": [[85, "TaiwanCredit-Data"]], "Comparison for Classification": [[87, "comparison-for-classification"]], "Accuracy Comparison": [[87, "accuracy-comparison"], [89, "accuracy-comparison"]], "Accuracy Score": [[87, "accuracy-score"]], "AUC Score": [[87, "auc-score"]], "F1 Score": [[87, "f1-score"]], "Overfit Comparison": [[87, "overfit-comparison"], [89, "overfit-comparison"]], "Reliability Comparison": [[87, "reliability-comparison"], [89, "reliability-comparison"]], "Bandwidth Comparison": [[87, "bandwidth-comparison"], [89, "bandwidth-comparison"]], "Reliability Diagram Comparison": [[87, "reliability-diagram-comparison"]], "Robustness Comparison": [[87, "robustness-comparison"], [89, "robustness-comparison"]], "Robustness Performance": [[87, "robustness-performance"], [89, "robustness-performance"]], "Robustness Performance on Worst Samples": [[87, "robustness-performance-on-worst-samples"], [89, "robustness-performance-on-worst-samples"]], "Resilience Comparison": [[87, "resilience-comparison"], [89, "resilience-comparison"]], "Resilience Performance": [[87, "resilience-performance"], [89, "resilience-performance"], [122, "resilience-performance"]], "Resilience Distance": [[87, "resilience-distance"], [89, "resilience-distance"], [122, "resilience-distance"]], "Examples 1: Taiwan Credit": [[87, null]], "Fairness Metrics": [[88, "fairness-metrics"], [119, "fairness-metrics"]], "Segmented": [[88, "segmented"]], "Example": [[88, null], [91, null], [93, null], [94, null], [95, null], [96, null], [97, null], [102, "example"], [110, "example"], [119, null]], "Comparison for Regression": [[89, "comparison-for-regression"]], "Mean Squared Error": [[89, "mean-squared-error"]], "Mean Absolute Error": [[89, "mean-absolute-error"]], "R-squared Score": [[89, "r-squared-score"]], "Coverage Comparison": [[89, "coverage-comparison"]], "Example 1: BikeSharing": [[89, null], [108, null], [111, null], [115, null], [116, null], [118, null], [120, null], [121, null], [123, null], [124, null]], "Exploratory Analysis": [[91, "exploratory-analysis"]], "Univariate Plots": [[91, "univariate-plots"]], "Bivariate Plots": [[91, "bivariate-plots"]], "Multivariate Plots": [[91, "multivariate-plots"]], "Data Load": [[92, "data-load"]], "Built-in Dataset": [[92, "built-in-dataset"]], "External Dataset": [[92, "external-dataset"]], "Example 1: Load built-in datasets": [[92, null]], "Example 2: Load data from pandas DataFrame": [[92, null]], "Basic Settings": [[93, "basic-settings"]], "Train-test Splits": [[93, "train-test-splits"]], "Random Split": [[93, "random-split"]], "Outer-sample-based Split": [[93, "outer-sample-based-split"]], "KMeans-based Split": [[93, "kmeans-based-split"]], "Manual Split": [[93, "manual-split"]], "Data Quality": [[94, "data-quality"]], "Methodology": [[94, "methodology"]], "Isolation Forest": [[94, "isolation-forest"]], "Cluster-Based Local Outlier Factor (CBLOF)": [[94, "cluster-based-local-outlier-factor-cblof"]], "Principal Component Analysis": [[94, "principal-component-analysis"]], "KmeansTree": [[94, "kmeanstree"]], "Analysis and Comparison": [[94, "analysis-and-comparison"]], "Outlier Score distribution": [[94, "outlier-score-distribution"]], "Marginal Distribution of Outliers": [[94, "marginal-distribution-of-outliers"]], "Comparison of Different Methods": [[94, "comparison-of-different-methods"]], "References": [[94, null], [96, null], [99, null], [102, null], [103, null], [106, null], [112, null]], "Summary Statistics": [[95, "summary-statistics"]], "Numerical Features": [[95, "numerical-features"]], "Categorical Features": [[95, "categorical-features"]], "Feature Manipulation": [[95, "feature-manipulation"]], "Remove Features": [[95, "remove-features"]], "Change Feature Types": [[95, "change-feature-types"]], "Correlations": [[96, "correlations"]], "Distance Correlation": [[96, "distance-correlation"]], "Use of Feature Importance": [[96, "use-of-feature-importance"]], "Randomized Conditional Independence Test": [[96, "randomized-conditional-independence-test"]], "RCIT Test": [[96, "rcit-test"]], "Forward-Backward selection with Early Dropping (FBEDk):": [[96, "forward-backward-selection-with-early-dropping-fbedk"]], "Distance Metrics": [[97, "distance-metrics"]], "Usage": [[97, "usage"], [98, "usage"], [99, "usage"], [100, "usage"], [101, "usage"], [102, "usage"], [103, "usage"], [120, "usage"], [122, "usage"], [123, "usage"], [124, "usage"]], "Distance Metric Plot": [[97, "distance-metric-plot"]], "Marginal Density Comparison": [[97, "marginal-density-comparison"], [122, "marginal-density-comparison"]], "ALE (Accumulated Local Effects)": [[98, "ale-accumulated-local-effects"]], "Algorithm Details": [[98, "algorithm-details"], [99, "algorithm-details"], [100, "algorithm-details"], [101, "algorithm-details"], [102, "algorithm-details"], [103, "algorithm-details"], [120, "algorithm-details"], [122, "algorithm-details"], [123, "algorithm-details"], [124, "algorithm-details"]], "One-way ALE": [[98, "one-way-ale"]], "Two-way ALE": [[98, "two-way-ale"]], "Example 1: Bike Sharing": [[98, null], [99, null], [100, null], [101, null], [102, null], [103, null], [112, null]], "Example 2: SimuCredit": [[98, null], [99, null], [100, null], [101, null], [102, null], [103, null]], "ICE (Individual Conditional Expectation)": [[99, "ice-individual-conditional-expectation"]], "LIME (Local Interpretable Model-Agnostic Explanation)": [[100, "lime-local-interpretable-model-agnostic-explanation"]], "PDP (Partial Dependence Plot)": [[101, "pdp-partial-dependence-plot"]], "One-way PDPs": [[101, "one-way-pdps"]], "Two-way PDPs": [[101, "two-way-pdps"]], "PFI (Permutation Feature Importance)": [[102, "pfi-permutation-feature-importance"]], "SHAP (SHapley Additive exPlanations)": [[103, "shap-shapley-additive-explanations"]], "Exact Solution": [[103, "exact-solution"]], "KernelSHAP": [[103, "kernelshap"]], "Algorithms for specific models": [[103, "algorithms-for-specific-models"]], "The Waterfall plot": [[103, "the-waterfall-plot"]], "SHAP Feature importance": [[103, "shap-feature-importance"]], "SHAP Summary plot": [[103, "shap-summary-plot"]], "SHAP Dependence Plot": [[103, "shap-dependence-plot"]], "Post-hoc Explainability": [[104, "post-hoc-explainability"], [126, "post-hoc-explainability"]], "Global Explainability": [[104, "global-explainability"]], "Local Explainability": [[104, "local-explainability"]], "Black-box Models": [[105, "black-box-models"]], "Train and Register Models": [[105, "train-and-register-models"]], "Save Fitted Models": [[105, "save-fitted-models"]], "Load and Register Fitted Models": [[105, "load-and-register-fitted-models"]], "Register Arbitrary Models and Data": [[105, "register-arbitrary-models-and-data"]], "Run Diagnostic Tests": [[105, "run-diagnostic-tests"]], "Example 1:": [[105, null]], "Example 2:": [[105, null]], "Introduction": [[106, "introduction"], [106, "id1"]], "Toolbox Design": [[106, "toolbox-design"]], "Diagnostic Suite": [[106, "diagnostic-suite"], [117, "diagnostic-suite"]], "Future Plan": [[106, "future-plan"]], "Explainable Boosting Machines": [[108, "explainable-boosting-machines"]], "Model Training": [[108, "model-training"], [109, "model-training"], [110, "model-training"], [111, "model-training"], [112, "model-training"], [113, "model-training"], [114, "model-training"], [115, "model-training"], [116, "model-training"]], "Global Interpretation": [[108, "global-interpretation"], [109, "global-interpretation"], [110, "global-interpretation"], [111, "global-interpretation"], [112, "global-interpretation"], [113, "global-interpretation"], [114, "global-interpretation"], [115, "global-interpretation"], [116, "global-interpretation"]], "Main Effect Plot": [[108, "main-effect-plot"], [110, "main-effect-plot"], [111, "main-effect-plot"], [115, "main-effect-plot"], [116, "main-effect-plot"]], "Interaction Plot": [[108, "interaction-plot"], [111, "interaction-plot"], [116, "interaction-plot"]], "Effect Importance": [[108, "effect-importance"], [111, "effect-importance"], [116, "effect-importance"]], "Feature Importance": [[108, "feature-importance"], [110, "feature-importance"], [111, "feature-importance"], [112, "feature-importance"], [115, "feature-importance"], [116, "feature-importance"]], "Local Interpretation": [[108, "local-interpretation"], [109, "local-interpretation"], [110, "local-interpretation"], [111, "local-interpretation"], [112, "local-interpretation"], [113, "local-interpretation"], [114, "local-interpretation"], [115, "local-interpretation"], [116, "local-interpretation"]], "Local Effect Contribution": [[108, "local-effect-contribution"], [111, "local-effect-contribution"], [116, "local-effect-contribution"]], "Local Feature Contribution": [[108, "local-feature-contribution"], [111, "local-feature-contribution"], [116, "local-feature-contribution"]], "Examples 2: Taiwan Credit": [[108, null], [109, null], [111, null], [113, null], [114, null], [116, null], [118, null], [120, null], [121, null], [122, null], [123, null], [124, null]], "Fast Interpretable Greedy-tree Sums": [[109, "fast-interpretable-greedy-tree-sums"]], "Feature Importance Heatmap": [[109, "feature-importance-heatmap"]], "Tree Diagram": [[109, "tree-diagram"]], "Example 1: CaliforniaHousing": [[109, null], [114, null], [122, null]], "Generalized Additive Model": [[110, "generalized-additive-model"]], "Example 1: California Housing": [[110, null]], "Example 2: CoCircles": [[110, null], [115, null]], "GAMI-Net": [[111, "gami-net"]], "Generalized Linear Models": [[112, "generalized-linear-models"]], "Regression Coefficients": [[112, "regression-coefficients"]], "Original Scale Option": [[112, "original-scale-option"]], "Centered Option": [[112, "centered-option"]], "Example 2: Taiwan Credit": [[112, null]], "ReLU Neural Network": [[113, "relu-neural-network"]], "Model Formulation": [[113, "model-formulation"]], "Local Linear Models": [[113, "local-linear-models"]], "LLM Summary Table": [[113, "llm-summary-table"]], "Parallel Coordinate Plot": [[113, "parallel-coordinate-plot"]], "LLM Violin Plot": [[113, "llm-violin-plot"]], "Feature Importance Plot": [[113, "feature-importance-plot"]], "LLM profile plot": [[113, "llm-profile-plot"]], "LLM pairwise plot": [[113, "llm-pairwise-plot"]], "Local Feature Contribution plot": [[113, "local-feature-contribution-plot"]], "Example 1: Friedman": [[113, null]], "Decision Tree": [[114, "decision-tree"]], "XGBoost Depth 1": [[115, "xgboost-depth-1"]], "Weight of Evidence Plot": [[115, "weight-of-evidence-plot"]], "Information Value Plot": [[115, "information-value-plot"]], "XGBoost Depth 2": [[116, "xgboost-depth-2"]], "Accuracy": [[118, "accuracy"]], "Regression Tasks": [[118, "regression-tasks"]], "Accuracy Table": [[118, "accuracy-table"], [118, "id1"]], "Residual Plot": [[118, "residual-plot"], [118, "id2"]], "Binary Classification": [[118, "binary-classification"]], "Accuracy Plot": [[118, "accuracy-plot"]], "Fairness": [[119, "fairness"]], "Fairness Segmented": [[119, "fairness-segmented"]], "Fairness Binning": [[119, "fairness-binning"]], "Fairness Thresholding": [[119, "fairness-thresholding"]], "Overfit": [[120, "overfit"]], "One-way Overfit Plot": [[120, "one-way-overfit-plot"]], "Two-way Overfit Plot": [[120, "two-way-overfit-plot"]], "Reliability": [[121, "reliability"]], "Reliability for Regression Tasks": [[121, "reliability-for-regression-tasks"]], "Coverage and Bandwidth Table": [[121, "coverage-and-bandwidth-table"]], "Distance of Reliable and Un-reliable Data": [[121, "distance-of-reliable-and-un-reliable-data"], [121, "id1"]], "Marginal Bandwidth": [[121, "marginal-bandwidth"], [121, "id2"]], "Reliability for Binary Classification": [[121, "reliability-for-binary-classification"]], "Classifier Calibration": [[121, "classifier-calibration"]], "Reliability Diagram": [[121, "reliability-diagram"]], "Brier Score Table": [[121, "brier-score-table"]], "Resilience": [[122, "resilience"]], "Marginal Histogram Comparison": [[122, "marginal-histogram-comparison"]], "Robustness": [[123, "robustness"]], "Perturbation For Numerical Features": [[123, "perturbation-for-numerical-features"]], "Perturbation for Categorical Variable": [[123, "perturbation-for-categorical-variable"]], "Robustness on the whole test sample": [[123, "robustness-on-the-whole-test-sample"]], "Robustness on worst test samples": [[123, "robustness-on-worst-test-samples"]], "WeakSpot": [[124, "weakspot"]], "One-way WeakSpot Plot": [[124, "one-way-weakspot-plot"]], "Two-way WeakSpot Plot": [[124, "two-way-weakspot-plot"]], "Installation": [[125, "installation"]], "Quick Install": [[125, "quick-install"]], "Dependencies": [[125, "dependencies"]], "Troubleshooting": [[125, "troubleshooting"]], "Could not find a version that satisfies the requirement PiML": [[125, "could-not-find-a-version-that-satisfies-the-requirement-piml"]], "Cannot uninstall \u201cllvmlite\u201d.": [[125, "cannot-uninstall-llvmlite"]], "Library \u201clibxgboost.so\u201d not loaded": [[125, "library-libxgboost-so-not-loaded"]], "Cannot import PiML on Colab": [[125, "cannot-import-piml-on-colab"]], "API Reference": [[126, "api-reference"]], "Functions": [[126, "functions"], [126, "id1"]], "Outlier Detection Algorithms": [[126, "outlier-detection-algorithms"]], "Model Classes": [[126, "model-classes"]], "Integrated High Code APIs": [[126, "integrated-high-code-apis"]], "Scored Test Function": [[126, "scored-test-function"]], "piml.Experiment": [[127, "piml-experiment"]], "Examples using piml.Experiment": [[127, "examples-using-piml-experiment"]], "piml.data.outlier_detection.CBLOF": [[128, "piml-data-outlier-detection-cblof"]], "Examples using piml.data.outlier_detection.CBLOF": [[128, "examples-using-piml-data-outlier-detection-cblof"]], "piml.data.outlier_detection.ECOD": [[129, "piml-data-outlier-detection-ecod"]], "Examples using piml.data.outlier_detection.ECOD": [[129, "examples-using-piml-data-outlier-detection-ecod"]], "piml.data.outlier_detection.HBOS": [[130, "piml-data-outlier-detection-hbos"]], "Examples using piml.data.outlier_detection.HBOS": [[130, "examples-using-piml-data-outlier-detection-hbos"]], "piml.data.outlier_detection.IsolationForest": [[131, "piml-data-outlier-detection-isolationforest"]], "Examples using piml.data.outlier_detection.IsolationForest": [[131, "examples-using-piml-data-outlier-detection-isolationforest"]], "piml.data.outlier_detection.KMeansTree": [[132, "piml-data-outlier-detection-kmeanstree"]], "Examples using piml.data.outlier_detection.KMeansTree": [[132, "examples-using-piml-data-outlier-detection-kmeanstree"]], "piml.data.outlier_detection.KNN": [[133, "piml-data-outlier-detection-knn"]], "Examples using piml.data.outlier_detection.KNN": [[133, "examples-using-piml-data-outlier-detection-knn"]], "piml.data.outlier_detection.OneClassSVM": [[134, "piml-data-outlier-detection-oneclasssvm"]], "Examples using piml.data.outlier_detection.OneClassSVM": [[134, "examples-using-piml-data-outlier-detection-oneclasssvm"]], "piml.data.outlier_detection.PCA": [[135, "piml-data-outlier-detection-pca"]], "Examples using piml.data.outlier_detection.PCA": [[135, "examples-using-piml-data-outlier-detection-pca"]], "piml.models.ExplainableBoostingClassifier": [[136, "piml-models-explainableboostingclassifier"]], "Examples using piml.models.ExplainableBoostingClassifier": [[136, "examples-using-piml-models-explainableboostingclassifier"]], "piml.models.ExplainableBoostingRegressor": [[137, "piml-models-explainableboostingregressor"]], "Examples using piml.models.ExplainableBoostingRegressor": [[137, "examples-using-piml-models-explainableboostingregressor"]], "piml.models.FIGSClassifier": [[138, "piml-models-figsclassifier"]], "Examples using piml.models.FIGSClassifier": [[138, "examples-using-piml-models-figsclassifier"]], "piml.models.FIGSRegressor": [[139, "piml-models-figsregressor"]], "Examples using piml.models.FIGSRegressor": [[139, "examples-using-piml-models-figsregressor"]], "piml.models.GAMClassifier": [[140, "piml-models-gamclassifier"]], "Examples using piml.models.GAMClassifier": [[140, "examples-using-piml-models-gamclassifier"]], "piml.models.GAMINetClassifier": [[141, "piml-models-gaminetclassifier"]], "Examples using piml.models.GAMINetClassifier": [[141, "examples-using-piml-models-gaminetclassifier"]], "piml.models.GAMINetRegressor": [[142, "piml-models-gaminetregressor"]], "Examples using piml.models.GAMINetRegressor": [[142, "examples-using-piml-models-gaminetregressor"]], "piml.models.GAMRegressor": [[143, "piml-models-gamregressor"]], "Examples using piml.models.GAMRegressor": [[143, "examples-using-piml-models-gamregressor"]], "piml.models.GLMClassifier": [[144, "piml-models-glmclassifier"]], "Examples using piml.models.GLMClassifier": [[144, "examples-using-piml-models-glmclassifier"]], "piml.models.GLMRegressor": [[145, "piml-models-glmregressor"]], "Examples using piml.models.GLMRegressor": [[145, "examples-using-piml-models-glmregressor"]], "piml.models.ReluDNNClassifier": [[146, "piml-models-reludnnclassifier"]], "Examples using piml.models.ReluDNNClassifier": [[146, "examples-using-piml-models-reludnnclassifier"]], "piml.models.ReluDNNRegressor": [[147, "piml-models-reludnnregressor"]], "Examples using piml.models.ReluDNNRegressor": [[147, "examples-using-piml-models-reludnnregressor"]], "piml.models.TreeClassifier": [[148, "piml-models-treeclassifier"]], "Examples using piml.models.TreeClassifier": [[148, "examples-using-piml-models-treeclassifier"]], "piml.models.TreeRegressor": [[149, "piml-models-treeregressor"]], "Examples using piml.models.TreeRegressor": [[149, "examples-using-piml-models-treeregressor"]], "piml.models.XGB1Classifier": [[150, "piml-models-xgb1classifier"]], "Examples using piml.models.XGB1Classifier": [[150, "examples-using-piml-models-xgb1classifier"]], "piml.models.XGB1Regressor": [[151, "piml-models-xgb1regressor"]], "Examples using piml.models.XGB1Regressor": [[151, "examples-using-piml-models-xgb1regressor"]], "piml.models.XGB2Classifier": [[152, "piml-models-xgb2classifier"]], "Examples using piml.models.XGB2Classifier": [[152, "examples-using-piml-models-xgb2classifier"]], "piml.models.XGB2Regressor": [[153, "piml-models-xgb2regressor"]], "Examples using piml.models.XGB2Regressor": [[153, "examples-using-piml-models-xgb2regressor"]], "piml.scored_test.test_accuracy_plot": [[154, "piml-scored-test-test-accuracy-plot"]], "piml.scored_test.test_accuracy_residual": [[155, "piml-scored-test-test-accuracy-residual"]], "piml.scored_test.test_accuracy_table": [[156, "piml-scored-test-test-accuracy-table"]], "piml.scored_test.test_overfit": [[157, "piml-scored-test-test-overfit"]], "piml.scored_test.test_reliability_calibration": [[158, "piml-scored-test-test-reliability-calibration"]], "piml.scored_test.test_reliability_distance": [[159, "piml-scored-test-test-reliability-distance"]], "piml.scored_test.test_reliability_marginal": [[160, "piml-scored-test-test-reliability-marginal"]], "piml.scored_test.test_reliability_perf": [[161, "piml-scored-test-test-reliability-perf"]], "piml.scored_test.test_reliability_table": [[162, "piml-scored-test-test-reliability-table"]], "piml.scored_test.test_resilience_distance": [[163, "piml-scored-test-test-resilience-distance"]], "piml.scored_test.test_resilience_perf": [[164, "piml-scored-test-test-resilience-perf"]], "piml.scored_test.test_resilience_shift_density": [[165, "piml-scored-test-test-resilience-shift-density"]], "piml.scored_test.test_resilience_shift_histogram": [[166, "piml-scored-test-test-resilience-shift-histogram"]], "piml.scored_test.test_weakspot": [[167, "piml-scored-test-test-weakspot"]], "Welcome to PiML": [[168, "welcome-to-piml"]], "User Guide": [[170, "user-guide"]]}, "indexentries": {"experiment (class in piml)": [[127, "piml.Experiment"]], "data_loader() (piml.experiment method)": [[127, "piml.Experiment.data_loader"]], "data_prepare() (piml.experiment method)": [[127, "piml.Experiment.data_prepare"]], "data_quality() (piml.experiment method)": [[127, "piml.Experiment.data_quality"]], "data_summary() (piml.experiment method)": [[127, "piml.Experiment.data_summary"]], "eda() (piml.experiment method)": [[127, "piml.Experiment.eda"]], "feature_select() (piml.experiment method)": [[127, "piml.Experiment.feature_select"]], "get_data() (piml.experiment method)": [[127, "piml.Experiment.get_data"]], "get_feature_names() (piml.experiment method)": [[127, "piml.Experiment.get_feature_names"]], "get_feature_types() (piml.experiment method)": [[127, "piml.Experiment.get_feature_types"]], "get_interpretable_model_list() (piml.experiment method)": [[127, "piml.Experiment.get_interpretable_model_list"]], "get_leaderboard() (piml.experiment method)": [[127, "piml.Experiment.get_leaderboard"]], "get_leaderboard_registered() (piml.experiment method)": [[127, "piml.Experiment.get_leaderboard_registered"]], "get_model() (piml.experiment method)": [[127, "piml.Experiment.get_model"]], "get_model_config() (piml.experiment method)": [[127, "piml.Experiment.get_model_config"]], "get_model_list() (piml.experiment method)": [[127, "piml.Experiment.get_model_list"]], "get_raw_data() (piml.experiment method)": [[127, "piml.Experiment.get_raw_data"]], "get_target_name() (piml.experiment method)": [[127, "piml.Experiment.get_target_name"]], "make_pipeline() (piml.experiment method)": [[127, "piml.Experiment.make_pipeline"]], "model_compare() (piml.experiment method)": [[127, "piml.Experiment.model_compare"]], "model_diagnose() (piml.experiment method)": [[127, "piml.Experiment.model_diagnose"]], "model_explain() (piml.experiment method)": [[127, "piml.Experiment.model_explain"]], "model_fairness() (piml.experiment method)": [[127, "piml.Experiment.model_fairness"]], "model_fairness_compare() (piml.experiment method)": [[127, "piml.Experiment.model_fairness_compare"]], "model_fairness_solas() (piml.experiment method)": [[127, "piml.Experiment.model_fairness_solas"]], "model_interpret() (piml.experiment method)": [[127, "piml.Experiment.model_interpret"]], "model_save() (piml.experiment method)": [[127, "piml.Experiment.model_save"]], "model_train() (piml.experiment method)": [[127, "piml.Experiment.model_train"]], "model_tune() (piml.experiment method)": [[127, "piml.Experiment.model_tune"]], "register() (piml.experiment method)": [[127, "piml.Experiment.register"]], "segmented_diagnose() (piml.experiment method)": [[127, "piml.Experiment.segmented_diagnose"]], "twosample_test() (piml.experiment method)": [[127, "piml.Experiment.twosample_test"]], "cblof (class in piml.data.outlier_detection)": [[128, "piml.data.outlier_detection.CBLOF"]], "decision_function() (piml.data.outlier_detection.cblof method)": [[128, "piml.data.outlier_detection.CBLOF.decision_function"]], "fit() (piml.data.outlier_detection.cblof method)": [[128, "piml.data.outlier_detection.CBLOF.fit"]], "predict() (piml.data.outlier_detection.cblof method)": [[128, "piml.data.outlier_detection.CBLOF.predict"]], "ecod (class in piml.data.outlier_detection)": [[129, "piml.data.outlier_detection.ECOD"]], "decision_function() (piml.data.outlier_detection.ecod method)": [[129, "piml.data.outlier_detection.ECOD.decision_function"]], "fit() (piml.data.outlier_detection.ecod method)": [[129, "piml.data.outlier_detection.ECOD.fit"]], "predict() (piml.data.outlier_detection.ecod method)": [[129, "piml.data.outlier_detection.ECOD.predict"]], "hbos (class in piml.data.outlier_detection)": [[130, "piml.data.outlier_detection.HBOS"]], "decision_function() (piml.data.outlier_detection.hbos method)": [[130, "piml.data.outlier_detection.HBOS.decision_function"]], "fit() (piml.data.outlier_detection.hbos method)": [[130, "piml.data.outlier_detection.HBOS.fit"]], "predict() (piml.data.outlier_detection.hbos method)": [[130, "piml.data.outlier_detection.HBOS.predict"]], "isolationforest (class in piml.data.outlier_detection)": [[131, "piml.data.outlier_detection.IsolationForest"]], "decision_function() (piml.data.outlier_detection.isolationforest method)": [[131, "piml.data.outlier_detection.IsolationForest.decision_function"]], "fit() (piml.data.outlier_detection.isolationforest method)": [[131, "piml.data.outlier_detection.IsolationForest.fit"]], "predict() (piml.data.outlier_detection.isolationforest method)": [[131, "piml.data.outlier_detection.IsolationForest.predict"]], "kmeanstree (class in piml.data.outlier_detection)": [[132, "piml.data.outlier_detection.KMeansTree"]], "decision_function() (piml.data.outlier_detection.kmeanstree method)": [[132, "piml.data.outlier_detection.KMeansTree.decision_function"]], "decision_path() (piml.data.outlier_detection.kmeanstree method)": [[132, "piml.data.outlier_detection.KMeansTree.decision_path"]], "fit() (piml.data.outlier_detection.kmeanstree method)": [[132, "piml.data.outlier_detection.KMeansTree.fit"]], "get_metadata_routing() (piml.data.outlier_detection.kmeanstree method)": [[132, "piml.data.outlier_detection.KMeansTree.get_metadata_routing"]], "get_params() (piml.data.outlier_detection.kmeanstree method)": [[132, "piml.data.outlier_detection.KMeansTree.get_params"]], "get_rule() (piml.data.outlier_detection.kmeanstree method)": [[132, "piml.data.outlier_detection.KMeansTree.get_rule"]], "plot_tree() (piml.data.outlier_detection.kmeanstree method)": [[132, "piml.data.outlier_detection.KMeansTree.plot_tree"]], "predict() (piml.data.outlier_detection.kmeanstree method)": [[132, "piml.data.outlier_detection.KMeansTree.predict"]], "predict_leaf_id() (piml.data.outlier_detection.kmeanstree method)": [[132, "piml.data.outlier_detection.KMeansTree.predict_leaf_id"]], "set_params() (piml.data.outlier_detection.kmeanstree method)": [[132, "piml.data.outlier_detection.KMeansTree.set_params"]], "knn (class in piml.data.outlier_detection)": [[133, "piml.data.outlier_detection.KNN"]], "decision_function() (piml.data.outlier_detection.knn method)": [[133, "piml.data.outlier_detection.KNN.decision_function"]], "fit() (piml.data.outlier_detection.knn method)": [[133, "piml.data.outlier_detection.KNN.fit"]], "predict() (piml.data.outlier_detection.knn method)": [[133, "piml.data.outlier_detection.KNN.predict"]], "oneclasssvm (class in piml.data.outlier_detection)": [[134, "piml.data.outlier_detection.OneClassSVM"]], "decision_function() (piml.data.outlier_detection.oneclasssvm method)": [[134, "piml.data.outlier_detection.OneClassSVM.decision_function"]], "fit() (piml.data.outlier_detection.oneclasssvm method)": [[134, "piml.data.outlier_detection.OneClassSVM.fit"]], "predict() (piml.data.outlier_detection.oneclasssvm method)": [[134, "piml.data.outlier_detection.OneClassSVM.predict"]], "pca (class in piml.data.outlier_detection)": [[135, "piml.data.outlier_detection.PCA"]], "decision_function() (piml.data.outlier_detection.pca method)": [[135, "piml.data.outlier_detection.PCA.decision_function"]], "fit() (piml.data.outlier_detection.pca method)": [[135, "piml.data.outlier_detection.PCA.fit"]], "predict() (piml.data.outlier_detection.pca method)": [[135, "piml.data.outlier_detection.PCA.predict"]], "explainableboostingclassifier (class in piml.models)": [[136, "piml.models.ExplainableBoostingClassifier"]], "decision_function() (piml.models.explainableboostingclassifier method)": [[136, "piml.models.ExplainableBoostingClassifier.decision_function"]], "fit() (piml.models.explainableboostingclassifier method)": [[136, "piml.models.ExplainableBoostingClassifier.fit"]], "get_metadata_routing() (piml.models.explainableboostingclassifier method)": [[136, "piml.models.ExplainableBoostingClassifier.get_metadata_routing"]], "get_params() (piml.models.explainableboostingclassifier method)": [[136, "piml.models.ExplainableBoostingClassifier.get_params"]], "parse_model() (piml.models.explainableboostingclassifier method)": [[136, "piml.models.ExplainableBoostingClassifier.parse_model"]], "partial_dependence() (piml.models.explainableboostingclassifier method)": [[136, "piml.models.ExplainableBoostingClassifier.partial_dependence"]], "predict() (piml.models.explainableboostingclassifier method)": [[136, "piml.models.ExplainableBoostingClassifier.predict"]], "predict_proba() (piml.models.explainableboostingclassifier method)": [[136, "piml.models.ExplainableBoostingClassifier.predict_proba"]], "score() (piml.models.explainableboostingclassifier method)": [[136, "piml.models.ExplainableBoostingClassifier.score"]], "set_params() (piml.models.explainableboostingclassifier method)": [[136, "piml.models.ExplainableBoostingClassifier.set_params"]], "set_score_request() (piml.models.explainableboostingclassifier method)": [[136, "piml.models.ExplainableBoostingClassifier.set_score_request"]], "explainableboostingregressor (class in piml.models)": [[137, "piml.models.ExplainableBoostingRegressor"]], "decision_function() (piml.models.explainableboostingregressor method)": [[137, "piml.models.ExplainableBoostingRegressor.decision_function"]], "fit() (piml.models.explainableboostingregressor method)": [[137, "piml.models.ExplainableBoostingRegressor.fit"]], "get_metadata_routing() (piml.models.explainableboostingregressor method)": [[137, "piml.models.ExplainableBoostingRegressor.get_metadata_routing"]], "get_params() (piml.models.explainableboostingregressor method)": [[137, "piml.models.ExplainableBoostingRegressor.get_params"]], "parse_model() (piml.models.explainableboostingregressor method)": [[137, "piml.models.ExplainableBoostingRegressor.parse_model"]], "partial_dependence() (piml.models.explainableboostingregressor method)": [[137, "piml.models.ExplainableBoostingRegressor.partial_dependence"]], "predict() (piml.models.explainableboostingregressor method)": [[137, "piml.models.ExplainableBoostingRegressor.predict"]], "score() (piml.models.explainableboostingregressor method)": [[137, "piml.models.ExplainableBoostingRegressor.score"]], "set_params() (piml.models.explainableboostingregressor method)": [[137, "piml.models.ExplainableBoostingRegressor.set_params"]], "set_score_request() (piml.models.explainableboostingregressor method)": [[137, "piml.models.ExplainableBoostingRegressor.set_score_request"]], "figsclassifier (class in piml.models)": [[138, "piml.models.FIGSClassifier"]], "decision_function() (piml.models.figsclassifier method)": [[138, "piml.models.FIGSClassifier.decision_function"]], "fit() (piml.models.figsclassifier method)": [[138, "piml.models.FIGSClassifier.fit"]], "get_metadata_routing() (piml.models.figsclassifier method)": [[138, "piml.models.FIGSClassifier.get_metadata_routing"]], "get_params() (piml.models.figsclassifier method)": [[138, "piml.models.FIGSClassifier.get_params"]], "parse_model() (piml.models.figsclassifier method)": [[138, "piml.models.FIGSClassifier.parse_model"]], "predict() (piml.models.figsclassifier method)": [[138, "piml.models.FIGSClassifier.predict"]], "predict_proba() (piml.models.figsclassifier method)": [[138, "piml.models.FIGSClassifier.predict_proba"]], "score() (piml.models.figsclassifier method)": [[138, "piml.models.FIGSClassifier.score"]], "set_params() (piml.models.figsclassifier method)": [[138, "piml.models.FIGSClassifier.set_params"]], "set_score_request() (piml.models.figsclassifier method)": [[138, "piml.models.FIGSClassifier.set_score_request"]], "figsregressor (class in piml.models)": [[139, "piml.models.FIGSRegressor"]], "fit() (piml.models.figsregressor method)": [[139, "piml.models.FIGSRegressor.fit"]], "get_metadata_routing() (piml.models.figsregressor method)": [[139, "piml.models.FIGSRegressor.get_metadata_routing"]], "get_params() (piml.models.figsregressor method)": [[139, "piml.models.FIGSRegressor.get_params"]], "parse_model() (piml.models.figsregressor method)": [[139, "piml.models.FIGSRegressor.parse_model"]], "predict() (piml.models.figsregressor method)": [[139, "piml.models.FIGSRegressor.predict"]], "score() (piml.models.figsregressor method)": [[139, "piml.models.FIGSRegressor.score"]], "set_params() (piml.models.figsregressor method)": [[139, "piml.models.FIGSRegressor.set_params"]], "set_score_request() (piml.models.figsregressor method)": [[139, "piml.models.FIGSRegressor.set_score_request"]], "gamclassifier (class in piml.models)": [[140, "piml.models.GAMClassifier"]], "decision_function() (piml.models.gamclassifier method)": [[140, "piml.models.GAMClassifier.decision_function"]], "fit() (piml.models.gamclassifier method)": [[140, "piml.models.GAMClassifier.fit"]], "get_metadata_routing() (piml.models.gamclassifier method)": [[140, "piml.models.GAMClassifier.get_metadata_routing"]], "get_params() (piml.models.gamclassifier method)": [[140, "piml.models.GAMClassifier.get_params"]], "parse_model() (piml.models.gamclassifier method)": [[140, "piml.models.GAMClassifier.parse_model"]], "partial_dependence() (piml.models.gamclassifier method)": [[140, "piml.models.GAMClassifier.partial_dependence"]], "predict() (piml.models.gamclassifier method)": [[140, "piml.models.GAMClassifier.predict"]], "predict_proba() (piml.models.gamclassifier method)": [[140, "piml.models.GAMClassifier.predict_proba"]], "score() (piml.models.gamclassifier method)": [[140, "piml.models.GAMClassifier.score"]], "set_params() (piml.models.gamclassifier method)": [[140, "piml.models.GAMClassifier.set_params"]], "gaminetclassifier (class in piml.models)": [[141, "piml.models.GAMINetClassifier"]], "certify_mono() (piml.models.gaminetclassifier method)": [[141, "piml.models.GAMINetClassifier.certify_mono"]], "decision_function() (piml.models.gaminetclassifier method)": [[141, "piml.models.GAMINetClassifier.decision_function"]], "fine_tune_selected() (piml.models.gaminetclassifier method)": [[141, "piml.models.GAMINetClassifier.fine_tune_selected"]], "fit() (piml.models.gaminetclassifier method)": [[141, "piml.models.GAMINetClassifier.fit"]], "get_clarity_loss() (piml.models.gaminetclassifier method)": [[141, "piml.models.GAMINetClassifier.get_clarity_loss"]], "get_interaction_raw_output() (piml.models.gaminetclassifier method)": [[141, "piml.models.GAMINetClassifier.get_interaction_raw_output"]], "get_main_effect_raw_output() (piml.models.gaminetclassifier method)": [[141, "piml.models.GAMINetClassifier.get_main_effect_raw_output"]], "get_metadata_routing() (piml.models.gaminetclassifier method)": [[141, "piml.models.GAMINetClassifier.get_metadata_routing"]], "get_mono_loss() (piml.models.gaminetclassifier method)": [[141, "piml.models.GAMINetClassifier.get_mono_loss"]], "get_params() (piml.models.gaminetclassifier method)": [[141, "piml.models.GAMINetClassifier.get_params"]], "get_raw_output() (piml.models.gaminetclassifier method)": [[141, "piml.models.GAMINetClassifier.get_raw_output"]], "load() (piml.models.gaminetclassifier method)": [[141, "piml.models.GAMINetClassifier.load"]], "parse_model() (piml.models.gaminetclassifier method)": [[141, "piml.models.GAMINetClassifier.parse_model"]], "partial_dependence() (piml.models.gaminetclassifier method)": [[141, "piml.models.GAMINetClassifier.partial_dependence"]], "partial_derivatives() (piml.models.gaminetclassifier method)": [[141, "piml.models.GAMINetClassifier.partial_derivatives"]], "predict() (piml.models.gaminetclassifier method)": [[141, "piml.models.GAMINetClassifier.predict"]], "predict_proba() (piml.models.gaminetclassifier method)": [[141, "piml.models.GAMINetClassifier.predict_proba"]], "save() (piml.models.gaminetclassifier method)": [[141, "piml.models.GAMINetClassifier.save"]], "score() (piml.models.gaminetclassifier method)": [[141, "piml.models.GAMINetClassifier.score"]], "set_params() (piml.models.gaminetclassifier method)": [[141, "piml.models.GAMINetClassifier.set_params"]], "set_score_request() (piml.models.gaminetclassifier method)": [[141, "piml.models.GAMINetClassifier.set_score_request"]], "gaminetregressor (class in piml.models)": [[142, "piml.models.GAMINetRegressor"]], "certify_mono() (piml.models.gaminetregressor method)": [[142, "piml.models.GAMINetRegressor.certify_mono"]], "fine_tune_selected() (piml.models.gaminetregressor method)": [[142, "piml.models.GAMINetRegressor.fine_tune_selected"]], "fit() (piml.models.gaminetregressor method)": [[142, "piml.models.GAMINetRegressor.fit"]], "get_clarity_loss() (piml.models.gaminetregressor method)": [[142, "piml.models.GAMINetRegressor.get_clarity_loss"]], "get_interaction_raw_output() (piml.models.gaminetregressor method)": [[142, "piml.models.GAMINetRegressor.get_interaction_raw_output"]], "get_main_effect_raw_output() (piml.models.gaminetregressor method)": [[142, "piml.models.GAMINetRegressor.get_main_effect_raw_output"]], "get_metadata_routing() (piml.models.gaminetregressor method)": [[142, "piml.models.GAMINetRegressor.get_metadata_routing"]], "get_mono_loss() (piml.models.gaminetregressor method)": [[142, "piml.models.GAMINetRegressor.get_mono_loss"]], "get_params() (piml.models.gaminetregressor method)": [[142, "piml.models.GAMINetRegressor.get_params"]], "get_raw_output() (piml.models.gaminetregressor method)": [[142, "piml.models.GAMINetRegressor.get_raw_output"]], "load() (piml.models.gaminetregressor method)": [[142, "piml.models.GAMINetRegressor.load"]], "parse_model() (piml.models.gaminetregressor method)": [[142, "piml.models.GAMINetRegressor.parse_model"]], "partial_dependence() (piml.models.gaminetregressor method)": [[142, "piml.models.GAMINetRegressor.partial_dependence"]], "partial_derivatives() (piml.models.gaminetregressor method)": [[142, "piml.models.GAMINetRegressor.partial_derivatives"]], "predict() (piml.models.gaminetregressor method)": [[142, "piml.models.GAMINetRegressor.predict"]], "save() (piml.models.gaminetregressor method)": [[142, "piml.models.GAMINetRegressor.save"]], "score() (piml.models.gaminetregressor method)": [[142, "piml.models.GAMINetRegressor.score"]], "set_params() (piml.models.gaminetregressor method)": [[142, "piml.models.GAMINetRegressor.set_params"]], "set_score_request() (piml.models.gaminetregressor method)": [[142, "piml.models.GAMINetRegressor.set_score_request"]], "gamregressor (class in piml.models)": [[143, "piml.models.GAMRegressor"]], "fit() (piml.models.gamregressor method)": [[143, "piml.models.GAMRegressor.fit"]], "get_metadata_routing() (piml.models.gamregressor method)": [[143, "piml.models.GAMRegressor.get_metadata_routing"]], "get_params() (piml.models.gamregressor method)": [[143, "piml.models.GAMRegressor.get_params"]], "parse_model() (piml.models.gamregressor method)": [[143, "piml.models.GAMRegressor.parse_model"]], "partial_dependence() (piml.models.gamregressor method)": [[143, "piml.models.GAMRegressor.partial_dependence"]], "predict() (piml.models.gamregressor method)": [[143, "piml.models.GAMRegressor.predict"]], "score() (piml.models.gamregressor method)": [[143, "piml.models.GAMRegressor.score"]], "set_params() (piml.models.gamregressor method)": [[143, "piml.models.GAMRegressor.set_params"]], "glmclassifier (class in piml.models)": [[144, "piml.models.GLMClassifier"]], "glmregressor (class in piml.models)": [[145, "piml.models.GLMRegressor"]], "reludnnclassifier (class in piml.models)": [[146, "piml.models.ReluDNNClassifier"]], "decision_function() (piml.models.reludnnclassifier method)": [[146, "piml.models.ReluDNNClassifier.decision_function"]], "fit() (piml.models.reludnnclassifier method)": [[146, "piml.models.ReluDNNClassifier.fit"]], "get_metadata_routing() (piml.models.reludnnclassifier method)": [[146, "piml.models.ReluDNNClassifier.get_metadata_routing"]], "get_params() (piml.models.reludnnclassifier method)": [[146, "piml.models.ReluDNNClassifier.get_params"]], "get_raw_output() (piml.models.reludnnclassifier method)": [[146, "piml.models.ReluDNNClassifier.get_raw_output"]], "parse_model() (piml.models.reludnnclassifier method)": [[146, "piml.models.ReluDNNClassifier.parse_model"]], "predict() (piml.models.reludnnclassifier method)": [[146, "piml.models.ReluDNNClassifier.predict"]], "predict_proba() (piml.models.reludnnclassifier method)": [[146, "piml.models.ReluDNNClassifier.predict_proba"]], "score() (piml.models.reludnnclassifier method)": [[146, "piml.models.ReluDNNClassifier.score"]], "set_params() (piml.models.reludnnclassifier method)": [[146, "piml.models.ReluDNNClassifier.set_params"]], "set_score_request() (piml.models.reludnnclassifier method)": [[146, "piml.models.ReluDNNClassifier.set_score_request"]], "reludnnregressor (class in piml.models)": [[147, "piml.models.ReluDNNRegressor"]], "fit() (piml.models.reludnnregressor method)": [[147, "piml.models.ReluDNNRegressor.fit"]], "get_metadata_routing() (piml.models.reludnnregressor method)": [[147, "piml.models.ReluDNNRegressor.get_metadata_routing"]], "get_params() (piml.models.reludnnregressor method)": [[147, "piml.models.ReluDNNRegressor.get_params"]], "get_raw_output() (piml.models.reludnnregressor method)": [[147, "piml.models.ReluDNNRegressor.get_raw_output"]], "parse_model() (piml.models.reludnnregressor method)": [[147, "piml.models.ReluDNNRegressor.parse_model"]], "predict() (piml.models.reludnnregressor method)": [[147, "piml.models.ReluDNNRegressor.predict"]], "score() (piml.models.reludnnregressor method)": [[147, "piml.models.ReluDNNRegressor.score"]], "set_params() (piml.models.reludnnregressor method)": [[147, "piml.models.ReluDNNRegressor.set_params"]], "set_score_request() (piml.models.reludnnregressor method)": [[147, "piml.models.ReluDNNRegressor.set_score_request"]], "treeclassifier (class in piml.models)": [[148, "piml.models.TreeClassifier"]], "apply() (piml.models.treeclassifier method)": [[148, "piml.models.TreeClassifier.apply"]], "cost_complexity_pruning_path() (piml.models.treeclassifier method)": [[148, "piml.models.TreeClassifier.cost_complexity_pruning_path"]], "decision_path() (piml.models.treeclassifier method)": [[148, "piml.models.TreeClassifier.decision_path"]], "feature_importances_ (piml.models.treeclassifier property)": [[148, "piml.models.TreeClassifier.feature_importances_"]], "fit() (piml.models.treeclassifier method)": [[148, "piml.models.TreeClassifier.fit"]], "get_depth() (piml.models.treeclassifier method)": [[148, "piml.models.TreeClassifier.get_depth"]], "get_metadata_routing() (piml.models.treeclassifier method)": [[148, "piml.models.TreeClassifier.get_metadata_routing"]], "get_n_leaves() (piml.models.treeclassifier method)": [[148, "piml.models.TreeClassifier.get_n_leaves"]], "get_params() (piml.models.treeclassifier method)": [[148, "piml.models.TreeClassifier.get_params"]], "parse_model() (piml.models.treeclassifier method)": [[148, "piml.models.TreeClassifier.parse_model"]], "predict() (piml.models.treeclassifier method)": [[148, "piml.models.TreeClassifier.predict"]], "predict_log_proba() (piml.models.treeclassifier method)": [[148, "piml.models.TreeClassifier.predict_log_proba"]], "predict_proba() (piml.models.treeclassifier method)": [[148, "piml.models.TreeClassifier.predict_proba"]], "score() (piml.models.treeclassifier method)": [[148, "piml.models.TreeClassifier.score"]], "set_fit_request() (piml.models.treeclassifier method)": [[148, "piml.models.TreeClassifier.set_fit_request"]], "set_params() (piml.models.treeclassifier method)": [[148, "piml.models.TreeClassifier.set_params"]], "set_predict_proba_request() (piml.models.treeclassifier method)": [[148, "piml.models.TreeClassifier.set_predict_proba_request"]], "set_predict_request() (piml.models.treeclassifier method)": [[148, "piml.models.TreeClassifier.set_predict_request"]], "set_score_request() (piml.models.treeclassifier method)": [[148, "piml.models.TreeClassifier.set_score_request"]], "treeregressor (class in piml.models)": [[149, "piml.models.TreeRegressor"]], "apply() (piml.models.treeregressor method)": [[149, "piml.models.TreeRegressor.apply"]], "cost_complexity_pruning_path() (piml.models.treeregressor method)": [[149, "piml.models.TreeRegressor.cost_complexity_pruning_path"]], "decision_path() (piml.models.treeregressor method)": [[149, "piml.models.TreeRegressor.decision_path"]], "feature_importances_ (piml.models.treeregressor property)": [[149, "piml.models.TreeRegressor.feature_importances_"]], "fit() (piml.models.treeregressor method)": [[149, "piml.models.TreeRegressor.fit"]], "get_depth() (piml.models.treeregressor method)": [[149, "piml.models.TreeRegressor.get_depth"]], "get_metadata_routing() (piml.models.treeregressor method)": [[149, "piml.models.TreeRegressor.get_metadata_routing"]], "get_n_leaves() (piml.models.treeregressor method)": [[149, "piml.models.TreeRegressor.get_n_leaves"]], "get_params() (piml.models.treeregressor method)": [[149, "piml.models.TreeRegressor.get_params"]], "parse_model() (piml.models.treeregressor method)": [[149, "piml.models.TreeRegressor.parse_model"]], "predict() (piml.models.treeregressor method)": [[149, "piml.models.TreeRegressor.predict"]], "score() (piml.models.treeregressor method)": [[149, "piml.models.TreeRegressor.score"]], "set_fit_request() (piml.models.treeregressor method)": [[149, "piml.models.TreeRegressor.set_fit_request"]], "set_params() (piml.models.treeregressor method)": [[149, "piml.models.TreeRegressor.set_params"]], "set_predict_request() (piml.models.treeregressor method)": [[149, "piml.models.TreeRegressor.set_predict_request"]], "set_score_request() (piml.models.treeregressor method)": [[149, "piml.models.TreeRegressor.set_score_request"]], "xgb1classifier (class in piml.models)": [[150, "piml.models.XGB1Classifier"]], "decision_function() (piml.models.xgb1classifier method)": [[150, "piml.models.XGB1Classifier.decision_function"]], "fit() (piml.models.xgb1classifier method)": [[150, "piml.models.XGB1Classifier.fit"]], "get_metadata_routing() (piml.models.xgb1classifier method)": [[150, "piml.models.XGB1Classifier.get_metadata_routing"]], "get_params() (piml.models.xgb1classifier method)": [[150, "piml.models.XGB1Classifier.get_params"]], "get_raw_output() (piml.models.xgb1classifier method)": [[150, "piml.models.XGB1Classifier.get_raw_output"]], "parse_model() (piml.models.xgb1classifier method)": [[150, "piml.models.XGB1Classifier.parse_model"]], "partial_dependence() (piml.models.xgb1classifier method)": [[150, "piml.models.XGB1Classifier.partial_dependence"]], "predict() (piml.models.xgb1classifier method)": [[150, "piml.models.XGB1Classifier.predict"]], "predict_proba() (piml.models.xgb1classifier method)": [[150, "piml.models.XGB1Classifier.predict_proba"]], "score() (piml.models.xgb1classifier method)": [[150, "piml.models.XGB1Classifier.score"]], "set_params() (piml.models.xgb1classifier method)": [[150, "piml.models.XGB1Classifier.set_params"]], "set_score_request() (piml.models.xgb1classifier method)": [[150, "piml.models.XGB1Classifier.set_score_request"]], "xgb1regressor (class in piml.models)": [[151, "piml.models.XGB1Regressor"]], "fit() (piml.models.xgb1regressor method)": [[151, "piml.models.XGB1Regressor.fit"]], "get_metadata_routing() (piml.models.xgb1regressor method)": [[151, "piml.models.XGB1Regressor.get_metadata_routing"]], "get_params() (piml.models.xgb1regressor method)": [[151, "piml.models.XGB1Regressor.get_params"]], "get_raw_output() (piml.models.xgb1regressor method)": [[151, "piml.models.XGB1Regressor.get_raw_output"]], "parse_model() (piml.models.xgb1regressor method)": [[151, "piml.models.XGB1Regressor.parse_model"]], "partial_dependence() (piml.models.xgb1regressor method)": [[151, "piml.models.XGB1Regressor.partial_dependence"]], "predict() (piml.models.xgb1regressor method)": [[151, "piml.models.XGB1Regressor.predict"]], "score() (piml.models.xgb1regressor method)": [[151, "piml.models.XGB1Regressor.score"]], "set_params() (piml.models.xgb1regressor method)": [[151, "piml.models.XGB1Regressor.set_params"]], "set_score_request() (piml.models.xgb1regressor method)": [[151, "piml.models.XGB1Regressor.set_score_request"]], "xgb2classifier (class in piml.models)": [[152, "piml.models.XGB2Classifier"]], "decision_function() (piml.models.xgb2classifier method)": [[152, "piml.models.XGB2Classifier.decision_function"]], "fit() (piml.models.xgb2classifier method)": [[152, "piml.models.XGB2Classifier.fit"]], "get_metadata_routing() (piml.models.xgb2classifier method)": [[152, "piml.models.XGB2Classifier.get_metadata_routing"]], "get_params() (piml.models.xgb2classifier method)": [[152, "piml.models.XGB2Classifier.get_params"]], "parse_model() (piml.models.xgb2classifier method)": [[152, "piml.models.XGB2Classifier.parse_model"]], "partial_dependence() (piml.models.xgb2classifier method)": [[152, "piml.models.XGB2Classifier.partial_dependence"]], "predict() (piml.models.xgb2classifier method)": [[152, "piml.models.XGB2Classifier.predict"]], "predict_proba() (piml.models.xgb2classifier method)": [[152, "piml.models.XGB2Classifier.predict_proba"]], "score() (piml.models.xgb2classifier method)": [[152, "piml.models.XGB2Classifier.score"]], "set_params() (piml.models.xgb2classifier method)": [[152, "piml.models.XGB2Classifier.set_params"]], "set_score_request() (piml.models.xgb2classifier method)": [[152, "piml.models.XGB2Classifier.set_score_request"]], "xgb2regressor (class in piml.models)": [[153, "piml.models.XGB2Regressor"]], "fit() (piml.models.xgb2regressor method)": [[153, "piml.models.XGB2Regressor.fit"]], "get_metadata_routing() (piml.models.xgb2regressor method)": [[153, "piml.models.XGB2Regressor.get_metadata_routing"]], "get_params() (piml.models.xgb2regressor method)": [[153, "piml.models.XGB2Regressor.get_params"]], "parse_model() (piml.models.xgb2regressor method)": [[153, "piml.models.XGB2Regressor.parse_model"]], "partial_dependence() (piml.models.xgb2regressor method)": [[153, "piml.models.XGB2Regressor.partial_dependence"]], "predict() (piml.models.xgb2regressor method)": [[153, "piml.models.XGB2Regressor.predict"]], "score() (piml.models.xgb2regressor method)": [[153, "piml.models.XGB2Regressor.score"]], "set_params() (piml.models.xgb2regressor method)": [[153, "piml.models.XGB2Regressor.set_params"]], "set_score_request() (piml.models.xgb2regressor method)": [[153, "piml.models.XGB2Regressor.set_score_request"]], "test_accuracy_plot() (in module piml.scored_test)": [[154, "piml.scored_test.test_accuracy_plot"]], "test_accuracy_residual() (in module piml.scored_test)": [[155, "piml.scored_test.test_accuracy_residual"]], "test_accuracy_table() (in module piml.scored_test)": [[156, "piml.scored_test.test_accuracy_table"]], "test_overfit() (in module piml.scored_test)": [[157, "piml.scored_test.test_overfit"]], "test_reliability_calibration() (in module piml.scored_test)": [[158, "piml.scored_test.test_reliability_calibration"]], "test_reliability_distance() (in module piml.scored_test)": [[159, "piml.scored_test.test_reliability_distance"]], "test_reliability_marginal() (in module piml.scored_test)": [[160, "piml.scored_test.test_reliability_marginal"]], "test_reliability_perf() (in module piml.scored_test)": [[161, "piml.scored_test.test_reliability_perf"]], "test_reliability_table() (in module piml.scored_test)": [[162, "piml.scored_test.test_reliability_table"]], "test_resilience_distance() (in module piml.scored_test)": [[163, "piml.scored_test.test_resilience_distance"]], "test_resilience_perf() (in module piml.scored_test)": [[164, "piml.scored_test.test_resilience_perf"]], "test_resilience_shift_density() (in module piml.scored_test)": [[165, "piml.scored_test.test_resilience_shift_density"]], "test_resilience_shift_histogram() (in module piml.scored_test)": [[166, "piml.scored_test.test_resilience_shift_histogram"]], "test_weakspot() (in module piml.scored_test)": [[167, "piml.scored_test.test_weakspot"]]}})