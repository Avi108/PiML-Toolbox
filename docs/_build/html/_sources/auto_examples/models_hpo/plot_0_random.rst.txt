
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples\models_hpo\plot_0_random.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_models_hpo_plot_0_random.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_models_hpo_plot_0_random.py:


HPO - GLM - Random Search (SimuCredit)
=========================================

.. GENERATED FROM PYTHON SOURCE LINES 7-8

Experiment initialization and data preparation

.. GENERATED FROM PYTHON SOURCE LINES 8-17

.. code-block:: default

    import scipy
    from piml import Experiment
    from piml.models import GLMClassifier

    exp = Experiment()
    exp.data_loader("SimuCredit", silent=True)
    exp.data_summary(feature_exclude=["Race", "Gender"], silent=True)
    exp.data_prepare(target="Approved", task_type="classification", silent=True)








.. GENERATED FROM PYTHON SOURCE LINES 18-19

Train Model

.. GENERATED FROM PYTHON SOURCE LINES 19-21

.. code-block:: default

    exp.model_train(model=GLMClassifier(), name="GLM")








.. GENERATED FROM PYTHON SOURCE LINES 22-23

Define hyperparameter search space for grid search

.. GENERATED FROM PYTHON SOURCE LINES 23-26

.. code-block:: default

    parameters = {'l1_regularization': scipy.stats.uniform(0, 0.1),
                  'l2_regularization': scipy.stats.uniform(0, 0.1)}








.. GENERATED FROM PYTHON SOURCE LINES 27-28

Tune hyperparameters of registered models

.. GENERATED FROM PYTHON SOURCE LINES 28-32

.. code-block:: default

    rs_result = exp.model_tune("GLM", method="randomized", parameters=parameters, n_runs=100,
                               metric="LogLoss", test_ratio=0.2)
    rs_result.data






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Rank(by LogLoss)</th>
          <th>LogLoss</th>
          <th>time</th>
        </tr>
        <tr>
          <th>params</th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>{'l1_regularization': 0.025155116205562347, 'l2_regularization': 0.07370657821383614}</th>
          <td>1</td>
          <td>0.6086</td>
          <td>0.0469</td>
        </tr>
        <tr>
          <th>{'l1_regularization': 0.09163982314016503, 'l2_regularization': 0.07232520009689224}</th>
          <td>2</td>
          <td>0.6086</td>
          <td>0.0629</td>
        </tr>
        <tr>
          <th>{'l1_regularization': 0.08589738748866935, 'l2_regularization': 0.06606431654102282}</th>
          <td>3</td>
          <td>0.6086</td>
          <td>0.0629</td>
        </tr>
        <tr>
          <th>{'l1_regularization': 0.07558524321360338, 'l2_regularization': 0.059096426804477166}</th>
          <td>4</td>
          <td>0.6086</td>
          <td>0.0625</td>
        </tr>
        <tr>
          <th>{'l1_regularization': 0.09285538910944417, 'l2_regularization': 0.06192882360213872}</th>
          <td>5</td>
          <td>0.6086</td>
          <td>0.0470</td>
        </tr>
        <tr>
          <th>...</th>
          <td>...</td>
          <td>...</td>
          <td>...</td>
        </tr>
        <tr>
          <th>{'l1_regularization': 0.0801649627572255, 'l2_regularization': 0.0009505206902733599}</th>
          <td>96</td>
          <td>0.6086</td>
          <td>0.0473</td>
        </tr>
        <tr>
          <th>{'l1_regularization': 0.07054458515086691, 'l2_regularization': 0.002443422808146689}</th>
          <td>97</td>
          <td>0.6086</td>
          <td>0.0474</td>
        </tr>
        <tr>
          <th>{'l1_regularization': 0.0200826243066503, 'l2_regularization': 0.0038925653368613645}</th>
          <td>98</td>
          <td>0.6086</td>
          <td>0.0473</td>
        </tr>
        <tr>
          <th>{'l1_regularization': 0.020239411195815772, 'l2_regularization': 0.002493911719174813}</th>
          <td>99</td>
          <td>0.6086</td>
          <td>0.0469</td>
        </tr>
        <tr>
          <th>{'l1_regularization': 0.004021232911187034, 'l2_regularization': 0.007049361449564151}</th>
          <td>100</td>
          <td>0.6086</td>
          <td>0.0474</td>
        </tr>
      </tbody>
    </table>
    <p>100 rows Ã— 3 columns</p>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 33-34

Refit model using a selected hyperparameter

.. GENERATED FROM PYTHON SOURCE LINES 34-37

.. code-block:: default

    params = rs_result.get_params_ranks(rank=1)
    exp.model_train(GLMClassifier(**params), name="GLM-HPO-GridSearch")








.. GENERATED FROM PYTHON SOURCE LINES 38-39

Compare the default model and HPO refitted model

.. GENERATED FROM PYTHON SOURCE LINES 39-41

.. code-block:: default

    exp.model_diagnose("GLM", show="accuracy_table")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

               ACC     AUC      F1 LogLoss   Brier
                                              
    Train   0.6722  0.7309  0.6965  0.6047  0.2088
    Test    0.6690  0.7318  0.6976  0.6073  0.2095
    Gap    -0.0032  0.0009  0.0011  0.0026  0.0008




.. GENERATED FROM PYTHON SOURCE LINES 42-43

Compare the default model and HPO refitted model

.. GENERATED FROM PYTHON SOURCE LINES 43-43

.. code-block:: default

    exp.model_diagnose("GLM-HPO-GridSearch", show="accuracy_table")



.. rst-class:: sphx-glr-script-out

 .. code-block:: none

               ACC     AUC      F1 LogLoss   Brier
                                              
    Train   0.6723  0.7308  0.6968  0.6047  0.2088
    Test    0.6685  0.7317  0.6973  0.6073  0.2096
    Gap    -0.0038  0.0008  0.0004  0.0026  0.0008





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 6.092 seconds)


.. _sphx_glr_download_auto_examples_models_hpo_plot_0_random.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/selfexplainml/piml-toolbox/main?urlpath=lab/tree/./docs/_build/html/notebooks/auto_examples/models_hpo/plot_0_random.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_0_random.py <plot_0_random.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_0_random.ipynb <plot_0_random.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
