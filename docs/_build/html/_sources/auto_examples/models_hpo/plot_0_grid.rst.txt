
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples\models_hpo\plot_0_grid.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_models_hpo_plot_0_grid.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_models_hpo_plot_0_grid.py:


HPO - XGB - Grid Search (Bike Sharing)
=========================================

.. GENERATED FROM PYTHON SOURCE LINES 7-8

Experiment initialization and data preparation

.. GENERATED FROM PYTHON SOURCE LINES 8-16

.. code-block:: default

    from piml import Experiment
    from piml.models import XGB2Regressor

    exp = Experiment()
    exp.data_loader(data="BikeSharing", silent=True)
    exp.data_summary(feature_exclude=["yr", "mnth", "temp"], silent=True)
    exp.data_prepare(target="cnt", task_type="regression", silent=True)








.. GENERATED FROM PYTHON SOURCE LINES 17-18

Train Model

.. GENERATED FROM PYTHON SOURCE LINES 18-20

.. code-block:: default

    exp.model_train(model=XGB2Regressor(), name="XGB2")








.. GENERATED FROM PYTHON SOURCE LINES 21-22

Define hyperparameter search space for grid search

.. GENERATED FROM PYTHON SOURCE LINES 22-28

.. code-block:: default

    parameters = {'n_estimators': [100, 300, 500],
                  'eta': [0.1, 0.3, 0.5],
                  'reg_lambda': [0.0, 0.5, 1.0],
                  'reg_alpha': [0.0, 0.5, 1.0]
                 }








.. GENERATED FROM PYTHON SOURCE LINES 29-30

Tune hyperparameters of registered models

.. GENERATED FROM PYTHON SOURCE LINES 30-33

.. code-block:: default

    grid_result = exp.model_tune("XGB2", method="grid", parameters=parameters, metric="MSE", test_ratio=0.2)
    grid_result.data






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Rank(by MSE)</th>
          <th>MSE</th>
          <th>time</th>
        </tr>
        <tr>
          <th>params</th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>{'eta': 0.5, 'n_estimators': 500, 'reg_alpha': 0.5, 'reg_lambda': 0.0}</th>
          <td>1</td>
          <td>0.0061</td>
          <td>2.1667</td>
        </tr>
        <tr>
          <th>{'eta': 0.5, 'n_estimators': 500, 'reg_alpha': 0.5, 'reg_lambda': 1.0}</th>
          <td>2</td>
          <td>0.0063</td>
          <td>2.1035</td>
        </tr>
        <tr>
          <th>{'eta': 0.5, 'n_estimators': 500, 'reg_alpha': 0.5, 'reg_lambda': 0.5}</th>
          <td>3</td>
          <td>0.0063</td>
          <td>1.9468</td>
        </tr>
        <tr>
          <th>{'eta': 0.5, 'n_estimators': 500, 'reg_alpha': 0.0, 'reg_lambda': 1.0}</th>
          <td>4</td>
          <td>0.0063</td>
          <td>2.4156</td>
        </tr>
        <tr>
          <th>{'eta': 0.5, 'n_estimators': 500, 'reg_alpha': 0.0, 'reg_lambda': 0.0}</th>
          <td>5</td>
          <td>0.0064</td>
          <td>2.3481</td>
        </tr>
        <tr>
          <th>...</th>
          <td>...</td>
          <td>...</td>
          <td>...</td>
        </tr>
        <tr>
          <th>{'eta': 0.1, 'n_estimators': 100, 'reg_alpha': 0.5, 'reg_lambda': 0.0}</th>
          <td>77</td>
          <td>0.0116</td>
          <td>0.4897</td>
        </tr>
        <tr>
          <th>{'eta': 0.1, 'n_estimators': 100, 'reg_alpha': 0.5, 'reg_lambda': 1.0}</th>
          <td>78</td>
          <td>0.0117</td>
          <td>0.4079</td>
        </tr>
        <tr>
          <th>{'eta': 0.1, 'n_estimators': 100, 'reg_alpha': 1.0, 'reg_lambda': 0.0}</th>
          <td>79</td>
          <td>0.0117</td>
          <td>0.4491</td>
        </tr>
        <tr>
          <th>{'eta': 0.1, 'n_estimators': 100, 'reg_alpha': 1.0, 'reg_lambda': 1.0}</th>
          <td>80</td>
          <td>0.0118</td>
          <td>0.4244</td>
        </tr>
        <tr>
          <th>{'eta': 0.1, 'n_estimators': 100, 'reg_alpha': 1.0, 'reg_lambda': 0.5}</th>
          <td>81</td>
          <td>0.0118</td>
          <td>0.4082</td>
        </tr>
      </tbody>
    </table>
    <p>81 rows Ã— 3 columns</p>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 34-35

Refit model using a selected hyperparameter

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    params = grid_result.get_params_ranks(rank=1)
    exp.model_train(XGB2Regressor(**params), name="XGB2-HPO-GridSearch")








.. GENERATED FROM PYTHON SOURCE LINES 39-40

Compare the default model and HPO refitted model

.. GENERATED FROM PYTHON SOURCE LINES 40-42

.. code-block:: default

    exp.model_diagnose("XGB2", show="accuracy_table")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

              MSE     MAE       R2
                              
    Train  0.0090  0.0669   0.7382
    Test   0.0095  0.0688   0.7287
    Gap    0.0005  0.0019  -0.0095




.. GENERATED FROM PYTHON SOURCE LINES 43-44

Compare the default model and HPO refitted model

.. GENERATED FROM PYTHON SOURCE LINES 44-44

.. code-block:: default

    exp.model_diagnose("XGB2-HPO-GridSearch", show="accuracy_table")



.. rst-class:: sphx-glr-script-out

 .. code-block:: none

              MSE     MAE       R2
                              
    Train  0.0057  0.0535   0.8346
    Test   0.0063  0.0559   0.8193
    Gap    0.0006  0.0024  -0.0153





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 51.768 seconds)


.. _sphx_glr_download_auto_examples_models_hpo_plot_0_grid.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/selfexplainml/piml-toolbox/main?urlpath=lab/tree/./docs/_build/html/notebooks/auto_examples/models_hpo/plot_0_grid.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_0_grid.py <plot_0_grid.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_0_grid.ipynb <plot_0_grid.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
